Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ASSERT
    BREAK
    BYTE
    CASE
    CATCH
    CHAR
    CONST
    CONTINUE
    DEFAULT
    DO
    DOUBLE
    ENUM
    FINAL
    FINALLY
    FLOAT
    FOR
    GOTO
    IMPLEMENTS
    IMPORT
    INSTANCEOF
    INTERFACE
    LONG
    MAIOR
    MAIORIGUAL
    MENORIGUAL
    NATIVE
    OUT
    PACKAGE
    PONTOPONTO
    PRINTLN
    PRIVATE
    PROTECTED
    SHORT
    STRICTFP
    SUPER
    SWITCH
    SYNCHRONIZED
    SYSTEM
    THROW
    THROWS
    TRANSIENT
    TRY
    VOLATILE

Grammar

Rule 0     S' -> prog
Rule 1     prog -> main prog2
Rule 2     prog2 -> class prog2
Rule 3     prog2 -> <empty>
Rule 4     main -> CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID PD CE cmd CD CD
Rule 5     class -> CLASS ID class2 CE class3 class4 CD
Rule 6     class2 -> EXTENDS ID
Rule 7     class2 -> <empty>
Rule 8     class3 -> var class3
Rule 9     class3 -> <empty>
Rule 10    class4 -> method class4
Rule 11    class4 -> <empty>
Rule 12    var -> type ID PONTOVIRGULA
Rule 13    method -> PUBLIC type ID PE method2 PD CE method3 method4 RETURN exp PONTOVIRGULA CD
Rule 14    method2 -> params
Rule 15    method2 -> <empty>
Rule 16    method3 -> var method3
Rule 17    method3 -> <empty>
Rule 18    method4 -> cmd method4
Rule 19    method4 -> <empty>
Rule 20    params -> type ID params2
Rule 21    params2 -> VIRGULA type ID params2
Rule 22    params2 -> <empty>
Rule 23    type -> INT COLCE COLCD
Rule 24    type -> BOOLEAN
Rule 25    type -> INT
Rule 26    type -> ID
Rule 27    cmd -> CE cmd2 CD
Rule 28    cmd -> IF PE exp PD cmd
Rule 29    cmd -> IF PE exp PD cmd ELSE cmd
Rule 30    cmd -> WHILE PE exp PD cmd
Rule 31    cmd -> SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA
Rule 32    cmd -> ID IGUAL exp PONTOVIRGULA
Rule 33    cmd -> ID COLCE exp COLCD IGUAL exp PONTOVIRGULA
Rule 34    cmd2 -> cmd cmd2
Rule 35    cmd2 -> <empty>
Rule 36    exp -> exp ECOMERCIAL rexp
Rule 37    exp -> rexp
Rule 38    rexp -> rexp MENOR aexp
Rule 39    rexp -> rexp COMPARACAO aexp
Rule 40    rexp -> rexp DIFERENTE aexp
Rule 41    rexp -> aexp
Rule 42    aexp -> aexp MAIS mexp
Rule 43    aexp -> aexp MENOS mexp
Rule 44    aexp -> mexp
Rule 45    mexp -> mexp MULTIPLICA sexp
Rule 46    mexp -> mexp DIVIDE sexp
Rule 47    mexp -> sexp
Rule 48    sexp -> NEGACAO sexp
Rule 49    sexp -> MENOS sexp
Rule 50    sexp -> TRUE
Rule 51    sexp -> FALSE
Rule 52    sexp -> NUMERO
Rule 53    sexp -> NULL
Rule 54    sexp -> NEW INT COLCE exp COLCD
Rule 55    sexp -> pexp PONTO LENGTH
Rule 56    sexp -> pexp COLCE exp COLCD
Rule 57    sexp -> pexp
Rule 58    pexp -> ID
Rule 59    pexp -> THIS
Rule 60    pexp -> NEW ID PE PD
Rule 61    pexp -> PE exp PD
Rule 62    pexp -> pexp PONTO ID
Rule 63    pexp -> pexp PONTO ID PE pexp2 PD
Rule 64    pexp2 -> exps
Rule 65    pexp2 -> <empty>
Rule 66    exps -> exp exps2
Rule 67    exps2 -> VIRGULA exp exps2
Rule 68    exps2 -> <empty>
Rule 69    empty -> <empty>

Terminals, with rules where they appear

ABSTRACT             : 
ASSERT               : 
BOOLEAN              : 24
BREAK                : 
BYTE                 : 
CASE                 : 
CATCH                : 
CD                   : 4 4 5 13 27
CE                   : 4 4 5 13 27
CHAR                 : 
CLASS                : 4 5
COLCD                : 4 23 33 54 56
COLCE                : 4 23 33 54 56
COMPARACAO           : 39
CONST                : 
CONTINUE             : 
DEFAULT              : 
DIFERENTE            : 40
DIVIDE               : 46
DO                   : 
DOUBLE               : 
ECOMERCIAL           : 36
ELSE                 : 29
ENUM                 : 
EXTENDS              : 6
FALSE                : 51
FINAL                : 
FINALLY              : 
FLOAT                : 
FOR                  : 
GOTO                 : 
ID                   : 4 4 5 6 12 13 20 21 26 32 33 58 60 62 63
IF                   : 28 29
IGUAL                : 32 33
IMPLEMENTS           : 
IMPORT               : 
INSTANCEOF           : 
INT                  : 23 25 54
INTERFACE            : 
LENGTH               : 55
LONG                 : 
MAIN                 : 4
MAIOR                : 
MAIORIGUAL           : 
MAIS                 : 42
MENOR                : 38
MENORIGUAL           : 
MENOS                : 43 49
MULTIPLICA           : 45
NATIVE               : 
NEGACAO              : 48
NEW                  : 54 60
NULL                 : 53
NUMERO               : 52
OUT                  : 
PACKAGE              : 
PD                   : 4 13 28 29 30 31 60 61 63
PE                   : 4 13 28 29 30 31 60 61 63
PONTO                : 55 62 63
PONTOPONTO           : 
PONTOVIRGULA         : 12 13 31 32 33
PRINTLN              : 
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 4 13
RETURN               : 13
SHORT                : 
STATIC               : 4
STRICTFP             : 
STRING               : 4
SUPER                : 
SWITCH               : 
SYNCHRONIZED         : 
SYSTEM               : 
SYSTEMOUTPRINTLN     : 31
THIS                 : 59
THROW                : 
THROWS               : 
TRANSIENT            : 
TRUE                 : 50
TRY                  : 
VIRGULA              : 21 67
VOID                 : 4
VOLATILE             : 
WHILE                : 30
error                : 

Nonterminals, with rules where they appear

aexp                 : 38 39 40 41 42 43
class                : 2
class2               : 5
class3               : 5 8
class4               : 5 10
cmd                  : 4 18 28 29 29 30 34
cmd2                 : 27 34
empty                : 
exp                  : 13 28 29 30 31 32 33 33 36 54 56 61 66 67
exps                 : 64
exps2                : 66 67
main                 : 1
method               : 10
method2              : 13
method3              : 13 16
method4              : 13 18
mexp                 : 42 43 44 45 46
params               : 14
params2              : 20 21
pexp                 : 55 56 57 62 63
pexp2                : 63
prog                 : 0
prog2                : 1 2
rexp                 : 36 37 38 39 40
sexp                 : 45 46 47 48 49
type                 : 12 13 20 21
var                  : 8 16

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . main prog2
    (4) main -> . CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID PD CE cmd CD CD

    CLASS           shift and go to state 3

    prog                           shift and go to state 1
    main                           shift and go to state 2

state 1

    (0) S' -> prog .



state 2

    (1) prog -> main . prog2
    (2) prog2 -> . class prog2
    (3) prog2 -> .
    (5) class -> . CLASS ID class2 CE class3 class4 CD

    $end            reduce using rule 3 (prog2 -> .)
    CLASS           shift and go to state 6

    prog2                          shift and go to state 4
    class                          shift and go to state 5

state 3

    (4) main -> CLASS . ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID PD CE cmd CD CD

    ID              shift and go to state 7


state 4

    (1) prog -> main prog2 .

    $end            reduce using rule 1 (prog -> main prog2 .)


state 5

    (2) prog2 -> class . prog2
    (2) prog2 -> . class prog2
    (3) prog2 -> .
    (5) class -> . CLASS ID class2 CE class3 class4 CD

    $end            reduce using rule 3 (prog2 -> .)
    CLASS           shift and go to state 6

    class                          shift and go to state 5
    prog2                          shift and go to state 8

state 6

    (5) class -> CLASS . ID class2 CE class3 class4 CD

    ID              shift and go to state 9


state 7

    (4) main -> CLASS ID . CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID PD CE cmd CD CD

    CE              shift and go to state 10


state 8

    (2) prog2 -> class prog2 .

    $end            reduce using rule 2 (prog2 -> class prog2 .)


state 9

    (5) class -> CLASS ID . class2 CE class3 class4 CD
    (6) class2 -> . EXTENDS ID
    (7) class2 -> .

    EXTENDS         shift and go to state 12
    CE              reduce using rule 7 (class2 -> .)

    class2                         shift and go to state 11

state 10

    (4) main -> CLASS ID CE . PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID PD CE cmd CD CD

    PUBLIC          shift and go to state 13


state 11

    (5) class -> CLASS ID class2 . CE class3 class4 CD

    CE              shift and go to state 14


state 12

    (6) class2 -> EXTENDS . ID

    ID              shift and go to state 15


state 13

    (4) main -> CLASS ID CE PUBLIC . STATIC VOID MAIN PE STRING COLCE COLCD ID PD CE cmd CD CD

    STATIC          shift and go to state 16


state 14

    (5) class -> CLASS ID class2 CE . class3 class4 CD
    (8) class3 -> . var class3
    (9) class3 -> .
    (12) var -> . type ID PONTOVIRGULA
    (23) type -> . INT COLCE COLCD
    (24) type -> . BOOLEAN
    (25) type -> . INT
    (26) type -> . ID

    PUBLIC          reduce using rule 9 (class3 -> .)
    CD              reduce using rule 9 (class3 -> .)
    INT             shift and go to state 21
    BOOLEAN         shift and go to state 22
    ID              shift and go to state 17

    class3                         shift and go to state 18
    var                            shift and go to state 19
    type                           shift and go to state 20

state 15

    (6) class2 -> EXTENDS ID .

    CE              reduce using rule 6 (class2 -> EXTENDS ID .)


state 16

    (4) main -> CLASS ID CE PUBLIC STATIC . VOID MAIN PE STRING COLCE COLCD ID PD CE cmd CD CD

    VOID            shift and go to state 23


state 17

    (26) type -> ID .

    ID              reduce using rule 26 (type -> ID .)


state 18

    (5) class -> CLASS ID class2 CE class3 . class4 CD
    (10) class4 -> . method class4
    (11) class4 -> .
    (13) method -> . PUBLIC type ID PE method2 PD CE method3 method4 RETURN exp PONTOVIRGULA CD

    CD              reduce using rule 11 (class4 -> .)
    PUBLIC          shift and go to state 26

    class4                         shift and go to state 24
    method                         shift and go to state 25

state 19

    (8) class3 -> var . class3
    (8) class3 -> . var class3
    (9) class3 -> .
    (12) var -> . type ID PONTOVIRGULA
    (23) type -> . INT COLCE COLCD
    (24) type -> . BOOLEAN
    (25) type -> . INT
    (26) type -> . ID

    PUBLIC          reduce using rule 9 (class3 -> .)
    CD              reduce using rule 9 (class3 -> .)
    INT             shift and go to state 21
    BOOLEAN         shift and go to state 22
    ID              shift and go to state 17

    var                            shift and go to state 19
    class3                         shift and go to state 27
    type                           shift and go to state 20

state 20

    (12) var -> type . ID PONTOVIRGULA

    ID              shift and go to state 28


state 21

    (23) type -> INT . COLCE COLCD
    (25) type -> INT .

    COLCE           shift and go to state 29
    ID              reduce using rule 25 (type -> INT .)


state 22

    (24) type -> BOOLEAN .

    ID              reduce using rule 24 (type -> BOOLEAN .)


state 23

    (4) main -> CLASS ID CE PUBLIC STATIC VOID . MAIN PE STRING COLCE COLCD ID PD CE cmd CD CD

    MAIN            shift and go to state 30


state 24

    (5) class -> CLASS ID class2 CE class3 class4 . CD

    CD              shift and go to state 31


state 25

    (10) class4 -> method . class4
    (10) class4 -> . method class4
    (11) class4 -> .
    (13) method -> . PUBLIC type ID PE method2 PD CE method3 method4 RETURN exp PONTOVIRGULA CD

    CD              reduce using rule 11 (class4 -> .)
    PUBLIC          shift and go to state 26

    method                         shift and go to state 25
    class4                         shift and go to state 32

state 26

    (13) method -> PUBLIC . type ID PE method2 PD CE method3 method4 RETURN exp PONTOVIRGULA CD
    (23) type -> . INT COLCE COLCD
    (24) type -> . BOOLEAN
    (25) type -> . INT
    (26) type -> . ID

    INT             shift and go to state 21
    BOOLEAN         shift and go to state 22
    ID              shift and go to state 17

    type                           shift and go to state 33

state 27

    (8) class3 -> var class3 .

    PUBLIC          reduce using rule 8 (class3 -> var class3 .)
    CD              reduce using rule 8 (class3 -> var class3 .)


state 28

    (12) var -> type ID . PONTOVIRGULA

    PONTOVIRGULA    shift and go to state 34


state 29

    (23) type -> INT COLCE . COLCD

    COLCD           shift and go to state 35


state 30

    (4) main -> CLASS ID CE PUBLIC STATIC VOID MAIN . PE STRING COLCE COLCD ID PD CE cmd CD CD

    PE              shift and go to state 36


state 31

    (5) class -> CLASS ID class2 CE class3 class4 CD .

    CLASS           reduce using rule 5 (class -> CLASS ID class2 CE class3 class4 CD .)
    $end            reduce using rule 5 (class -> CLASS ID class2 CE class3 class4 CD .)


state 32

    (10) class4 -> method class4 .

    CD              reduce using rule 10 (class4 -> method class4 .)


state 33

    (13) method -> PUBLIC type . ID PE method2 PD CE method3 method4 RETURN exp PONTOVIRGULA CD

    ID              shift and go to state 37


state 34

    (12) var -> type ID PONTOVIRGULA .

    INT             reduce using rule 12 (var -> type ID PONTOVIRGULA .)
    BOOLEAN         reduce using rule 12 (var -> type ID PONTOVIRGULA .)
    ID              reduce using rule 12 (var -> type ID PONTOVIRGULA .)
    PUBLIC          reduce using rule 12 (var -> type ID PONTOVIRGULA .)
    CD              reduce using rule 12 (var -> type ID PONTOVIRGULA .)
    CE              reduce using rule 12 (var -> type ID PONTOVIRGULA .)
    IF              reduce using rule 12 (var -> type ID PONTOVIRGULA .)
    WHILE           reduce using rule 12 (var -> type ID PONTOVIRGULA .)
    SYSTEMOUTPRINTLN reduce using rule 12 (var -> type ID PONTOVIRGULA .)
    RETURN          reduce using rule 12 (var -> type ID PONTOVIRGULA .)


state 35

    (23) type -> INT COLCE COLCD .

    ID              reduce using rule 23 (type -> INT COLCE COLCD .)


state 36

    (4) main -> CLASS ID CE PUBLIC STATIC VOID MAIN PE . STRING COLCE COLCD ID PD CE cmd CD CD

    STRING          shift and go to state 38


state 37

    (13) method -> PUBLIC type ID . PE method2 PD CE method3 method4 RETURN exp PONTOVIRGULA CD

    PE              shift and go to state 39


state 38

    (4) main -> CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING . COLCE COLCD ID PD CE cmd CD CD

    COLCE           shift and go to state 40


state 39

    (13) method -> PUBLIC type ID PE . method2 PD CE method3 method4 RETURN exp PONTOVIRGULA CD
    (14) method2 -> . params
    (15) method2 -> .
    (20) params -> . type ID params2
    (23) type -> . INT COLCE COLCD
    (24) type -> . BOOLEAN
    (25) type -> . INT
    (26) type -> . ID

    PD              reduce using rule 15 (method2 -> .)
    INT             shift and go to state 21
    BOOLEAN         shift and go to state 22
    ID              shift and go to state 17

    type                           shift and go to state 41
    method2                        shift and go to state 42
    params                         shift and go to state 43

state 40

    (4) main -> CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE . COLCD ID PD CE cmd CD CD

    COLCD           shift and go to state 44


state 41

    (20) params -> type . ID params2

    ID              shift and go to state 45


state 42

    (13) method -> PUBLIC type ID PE method2 . PD CE method3 method4 RETURN exp PONTOVIRGULA CD

    PD              shift and go to state 46


state 43

    (14) method2 -> params .

    PD              reduce using rule 14 (method2 -> params .)


state 44

    (4) main -> CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD . ID PD CE cmd CD CD

    ID              shift and go to state 47


state 45

    (20) params -> type ID . params2
    (21) params2 -> . VIRGULA type ID params2
    (22) params2 -> .

    VIRGULA         shift and go to state 49
    PD              reduce using rule 22 (params2 -> .)

    params2                        shift and go to state 48

state 46

    (13) method -> PUBLIC type ID PE method2 PD . CE method3 method4 RETURN exp PONTOVIRGULA CD

    CE              shift and go to state 50


state 47

    (4) main -> CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID . PD CE cmd CD CD

    PD              shift and go to state 51


state 48

    (20) params -> type ID params2 .

    PD              reduce using rule 20 (params -> type ID params2 .)


state 49

    (21) params2 -> VIRGULA . type ID params2
    (23) type -> . INT COLCE COLCD
    (24) type -> . BOOLEAN
    (25) type -> . INT
    (26) type -> . ID

    INT             shift and go to state 21
    BOOLEAN         shift and go to state 22
    ID              shift and go to state 17

    type                           shift and go to state 52

state 50

    (13) method -> PUBLIC type ID PE method2 PD CE . method3 method4 RETURN exp PONTOVIRGULA CD
    (16) method3 -> . var method3
    (17) method3 -> .
    (12) var -> . type ID PONTOVIRGULA
    (23) type -> . INT COLCE COLCD
    (24) type -> . BOOLEAN
    (25) type -> . INT
    (26) type -> . ID

  ! shift/reduce conflict for ID resolved as shift
    CE              reduce using rule 17 (method3 -> .)
    IF              reduce using rule 17 (method3 -> .)
    WHILE           reduce using rule 17 (method3 -> .)
    SYSTEMOUTPRINTLN reduce using rule 17 (method3 -> .)
    RETURN          reduce using rule 17 (method3 -> .)
    INT             shift and go to state 21
    BOOLEAN         shift and go to state 22
    ID              shift and go to state 17

  ! ID              [ reduce using rule 17 (method3 -> .) ]

    type                           shift and go to state 20
    method3                        shift and go to state 53
    var                            shift and go to state 54

state 51

    (4) main -> CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID PD . CE cmd CD CD

    CE              shift and go to state 55


state 52

    (21) params2 -> VIRGULA type . ID params2

    ID              shift and go to state 56


state 53

    (13) method -> PUBLIC type ID PE method2 PD CE method3 . method4 RETURN exp PONTOVIRGULA CD
    (18) method4 -> . cmd method4
    (19) method4 -> .
    (27) cmd -> . CE cmd2 CD
    (28) cmd -> . IF PE exp PD cmd
    (29) cmd -> . IF PE exp PD cmd ELSE cmd
    (30) cmd -> . WHILE PE exp PD cmd
    (31) cmd -> . SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA
    (32) cmd -> . ID IGUAL exp PONTOVIRGULA
    (33) cmd -> . ID COLCE exp COLCD IGUAL exp PONTOVIRGULA

    RETURN          reduce using rule 19 (method4 -> .)
    CE              shift and go to state 58
    IF              shift and go to state 61
    WHILE           shift and go to state 62
    SYSTEMOUTPRINTLN shift and go to state 63
    ID              shift and go to state 57

    method4                        shift and go to state 59
    cmd                            shift and go to state 60

state 54

    (16) method3 -> var . method3
    (16) method3 -> . var method3
    (17) method3 -> .
    (12) var -> . type ID PONTOVIRGULA
    (23) type -> . INT COLCE COLCD
    (24) type -> . BOOLEAN
    (25) type -> . INT
    (26) type -> . ID

  ! shift/reduce conflict for ID resolved as shift
    CE              reduce using rule 17 (method3 -> .)
    IF              reduce using rule 17 (method3 -> .)
    WHILE           reduce using rule 17 (method3 -> .)
    SYSTEMOUTPRINTLN reduce using rule 17 (method3 -> .)
    RETURN          reduce using rule 17 (method3 -> .)
    INT             shift and go to state 21
    BOOLEAN         shift and go to state 22
    ID              shift and go to state 17

  ! ID              [ reduce using rule 17 (method3 -> .) ]

    var                            shift and go to state 54
    method3                        shift and go to state 64
    type                           shift and go to state 20

state 55

    (4) main -> CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID PD CE . cmd CD CD
    (27) cmd -> . CE cmd2 CD
    (28) cmd -> . IF PE exp PD cmd
    (29) cmd -> . IF PE exp PD cmd ELSE cmd
    (30) cmd -> . WHILE PE exp PD cmd
    (31) cmd -> . SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA
    (32) cmd -> . ID IGUAL exp PONTOVIRGULA
    (33) cmd -> . ID COLCE exp COLCD IGUAL exp PONTOVIRGULA

    CE              shift and go to state 58
    IF              shift and go to state 61
    WHILE           shift and go to state 62
    SYSTEMOUTPRINTLN shift and go to state 63
    ID              shift and go to state 57

    cmd                            shift and go to state 65

state 56

    (21) params2 -> VIRGULA type ID . params2
    (21) params2 -> . VIRGULA type ID params2
    (22) params2 -> .

    VIRGULA         shift and go to state 49
    PD              reduce using rule 22 (params2 -> .)

    params2                        shift and go to state 66

state 57

    (32) cmd -> ID . IGUAL exp PONTOVIRGULA
    (33) cmd -> ID . COLCE exp COLCD IGUAL exp PONTOVIRGULA

    IGUAL           shift and go to state 67
    COLCE           shift and go to state 68


state 58

    (27) cmd -> CE . cmd2 CD
    (34) cmd2 -> . cmd cmd2
    (35) cmd2 -> .
    (27) cmd -> . CE cmd2 CD
    (28) cmd -> . IF PE exp PD cmd
    (29) cmd -> . IF PE exp PD cmd ELSE cmd
    (30) cmd -> . WHILE PE exp PD cmd
    (31) cmd -> . SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA
    (32) cmd -> . ID IGUAL exp PONTOVIRGULA
    (33) cmd -> . ID COLCE exp COLCD IGUAL exp PONTOVIRGULA

    CD              reduce using rule 35 (cmd2 -> .)
    CE              shift and go to state 58
    IF              shift and go to state 61
    WHILE           shift and go to state 62
    SYSTEMOUTPRINTLN shift and go to state 63
    ID              shift and go to state 57

    cmd2                           shift and go to state 69
    cmd                            shift and go to state 70

state 59

    (13) method -> PUBLIC type ID PE method2 PD CE method3 method4 . RETURN exp PONTOVIRGULA CD

    RETURN          shift and go to state 71


state 60

    (18) method4 -> cmd . method4
    (18) method4 -> . cmd method4
    (19) method4 -> .
    (27) cmd -> . CE cmd2 CD
    (28) cmd -> . IF PE exp PD cmd
    (29) cmd -> . IF PE exp PD cmd ELSE cmd
    (30) cmd -> . WHILE PE exp PD cmd
    (31) cmd -> . SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA
    (32) cmd -> . ID IGUAL exp PONTOVIRGULA
    (33) cmd -> . ID COLCE exp COLCD IGUAL exp PONTOVIRGULA

    RETURN          reduce using rule 19 (method4 -> .)
    CE              shift and go to state 58
    IF              shift and go to state 61
    WHILE           shift and go to state 62
    SYSTEMOUTPRINTLN shift and go to state 63
    ID              shift and go to state 57

    cmd                            shift and go to state 60
    method4                        shift and go to state 72

state 61

    (28) cmd -> IF . PE exp PD cmd
    (29) cmd -> IF . PE exp PD cmd ELSE cmd

    PE              shift and go to state 73


state 62

    (30) cmd -> WHILE . PE exp PD cmd

    PE              shift and go to state 74


state 63

    (31) cmd -> SYSTEMOUTPRINTLN . PE exp PD PONTOVIRGULA

    PE              shift and go to state 75


state 64

    (16) method3 -> var method3 .

    CE              reduce using rule 16 (method3 -> var method3 .)
    IF              reduce using rule 16 (method3 -> var method3 .)
    WHILE           reduce using rule 16 (method3 -> var method3 .)
    SYSTEMOUTPRINTLN reduce using rule 16 (method3 -> var method3 .)
    ID              reduce using rule 16 (method3 -> var method3 .)
    RETURN          reduce using rule 16 (method3 -> var method3 .)


state 65

    (4) main -> CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID PD CE cmd . CD CD

    CD              shift and go to state 76


state 66

    (21) params2 -> VIRGULA type ID params2 .

    PD              reduce using rule 21 (params2 -> VIRGULA type ID params2 .)


state 67

    (32) cmd -> ID IGUAL . exp PONTOVIRGULA
    (36) exp -> . exp ECOMERCIAL rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp MENOR aexp
    (39) rexp -> . rexp COMPARACAO aexp
    (40) rexp -> . rexp DIFERENTE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp MAIS mexp
    (43) aexp -> . aexp MENOS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp MULTIPLICA sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . NEGACAO sexp
    (49) sexp -> . MENOS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMERO
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT COLCE exp COLCD
    (55) sexp -> . pexp PONTO LENGTH
    (56) sexp -> . pexp COLCE exp COLCD
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID PE PD
    (61) pexp -> . PE exp PD
    (62) pexp -> . pexp PONTO ID
    (63) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 84
    MENOS           shift and go to state 82
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    NUMERO          shift and go to state 87
    NULL            shift and go to state 88
    NEW             shift and go to state 89
    ID              shift and go to state 77
    THIS            shift and go to state 91
    PE              shift and go to state 92

    exp                            shift and go to state 78
    rexp                           shift and go to state 79
    aexp                           shift and go to state 80
    mexp                           shift and go to state 81
    sexp                           shift and go to state 83
    pexp                           shift and go to state 90

state 68

    (33) cmd -> ID COLCE . exp COLCD IGUAL exp PONTOVIRGULA
    (36) exp -> . exp ECOMERCIAL rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp MENOR aexp
    (39) rexp -> . rexp COMPARACAO aexp
    (40) rexp -> . rexp DIFERENTE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp MAIS mexp
    (43) aexp -> . aexp MENOS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp MULTIPLICA sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . NEGACAO sexp
    (49) sexp -> . MENOS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMERO
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT COLCE exp COLCD
    (55) sexp -> . pexp PONTO LENGTH
    (56) sexp -> . pexp COLCE exp COLCD
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID PE PD
    (61) pexp -> . PE exp PD
    (62) pexp -> . pexp PONTO ID
    (63) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 84
    MENOS           shift and go to state 82
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    NUMERO          shift and go to state 87
    NULL            shift and go to state 88
    NEW             shift and go to state 89
    ID              shift and go to state 77
    THIS            shift and go to state 91
    PE              shift and go to state 92

    exp                            shift and go to state 93
    rexp                           shift and go to state 79
    aexp                           shift and go to state 80
    mexp                           shift and go to state 81
    sexp                           shift and go to state 83
    pexp                           shift and go to state 90

state 69

    (27) cmd -> CE cmd2 . CD

    CD              shift and go to state 94


state 70

    (34) cmd2 -> cmd . cmd2
    (34) cmd2 -> . cmd cmd2
    (35) cmd2 -> .
    (27) cmd -> . CE cmd2 CD
    (28) cmd -> . IF PE exp PD cmd
    (29) cmd -> . IF PE exp PD cmd ELSE cmd
    (30) cmd -> . WHILE PE exp PD cmd
    (31) cmd -> . SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA
    (32) cmd -> . ID IGUAL exp PONTOVIRGULA
    (33) cmd -> . ID COLCE exp COLCD IGUAL exp PONTOVIRGULA

    CD              reduce using rule 35 (cmd2 -> .)
    CE              shift and go to state 58
    IF              shift and go to state 61
    WHILE           shift and go to state 62
    SYSTEMOUTPRINTLN shift and go to state 63
    ID              shift and go to state 57

    cmd                            shift and go to state 70
    cmd2                           shift and go to state 95

state 71

    (13) method -> PUBLIC type ID PE method2 PD CE method3 method4 RETURN . exp PONTOVIRGULA CD
    (36) exp -> . exp ECOMERCIAL rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp MENOR aexp
    (39) rexp -> . rexp COMPARACAO aexp
    (40) rexp -> . rexp DIFERENTE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp MAIS mexp
    (43) aexp -> . aexp MENOS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp MULTIPLICA sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . NEGACAO sexp
    (49) sexp -> . MENOS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMERO
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT COLCE exp COLCD
    (55) sexp -> . pexp PONTO LENGTH
    (56) sexp -> . pexp COLCE exp COLCD
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID PE PD
    (61) pexp -> . PE exp PD
    (62) pexp -> . pexp PONTO ID
    (63) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 84
    MENOS           shift and go to state 82
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    NUMERO          shift and go to state 87
    NULL            shift and go to state 88
    NEW             shift and go to state 89
    ID              shift and go to state 77
    THIS            shift and go to state 91
    PE              shift and go to state 92

    exp                            shift and go to state 96
    rexp                           shift and go to state 79
    aexp                           shift and go to state 80
    mexp                           shift and go to state 81
    sexp                           shift and go to state 83
    pexp                           shift and go to state 90

state 72

    (18) method4 -> cmd method4 .

    RETURN          reduce using rule 18 (method4 -> cmd method4 .)


state 73

    (28) cmd -> IF PE . exp PD cmd
    (29) cmd -> IF PE . exp PD cmd ELSE cmd
    (36) exp -> . exp ECOMERCIAL rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp MENOR aexp
    (39) rexp -> . rexp COMPARACAO aexp
    (40) rexp -> . rexp DIFERENTE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp MAIS mexp
    (43) aexp -> . aexp MENOS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp MULTIPLICA sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . NEGACAO sexp
    (49) sexp -> . MENOS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMERO
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT COLCE exp COLCD
    (55) sexp -> . pexp PONTO LENGTH
    (56) sexp -> . pexp COLCE exp COLCD
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID PE PD
    (61) pexp -> . PE exp PD
    (62) pexp -> . pexp PONTO ID
    (63) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 84
    MENOS           shift and go to state 82
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    NUMERO          shift and go to state 87
    NULL            shift and go to state 88
    NEW             shift and go to state 89
    ID              shift and go to state 77
    THIS            shift and go to state 91
    PE              shift and go to state 92

    exp                            shift and go to state 97
    rexp                           shift and go to state 79
    aexp                           shift and go to state 80
    mexp                           shift and go to state 81
    sexp                           shift and go to state 83
    pexp                           shift and go to state 90

state 74

    (30) cmd -> WHILE PE . exp PD cmd
    (36) exp -> . exp ECOMERCIAL rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp MENOR aexp
    (39) rexp -> . rexp COMPARACAO aexp
    (40) rexp -> . rexp DIFERENTE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp MAIS mexp
    (43) aexp -> . aexp MENOS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp MULTIPLICA sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . NEGACAO sexp
    (49) sexp -> . MENOS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMERO
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT COLCE exp COLCD
    (55) sexp -> . pexp PONTO LENGTH
    (56) sexp -> . pexp COLCE exp COLCD
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID PE PD
    (61) pexp -> . PE exp PD
    (62) pexp -> . pexp PONTO ID
    (63) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 84
    MENOS           shift and go to state 82
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    NUMERO          shift and go to state 87
    NULL            shift and go to state 88
    NEW             shift and go to state 89
    ID              shift and go to state 77
    THIS            shift and go to state 91
    PE              shift and go to state 92

    exp                            shift and go to state 98
    rexp                           shift and go to state 79
    aexp                           shift and go to state 80
    mexp                           shift and go to state 81
    sexp                           shift and go to state 83
    pexp                           shift and go to state 90

state 75

    (31) cmd -> SYSTEMOUTPRINTLN PE . exp PD PONTOVIRGULA
    (36) exp -> . exp ECOMERCIAL rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp MENOR aexp
    (39) rexp -> . rexp COMPARACAO aexp
    (40) rexp -> . rexp DIFERENTE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp MAIS mexp
    (43) aexp -> . aexp MENOS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp MULTIPLICA sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . NEGACAO sexp
    (49) sexp -> . MENOS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMERO
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT COLCE exp COLCD
    (55) sexp -> . pexp PONTO LENGTH
    (56) sexp -> . pexp COLCE exp COLCD
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID PE PD
    (61) pexp -> . PE exp PD
    (62) pexp -> . pexp PONTO ID
    (63) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 84
    MENOS           shift and go to state 82
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    NUMERO          shift and go to state 87
    NULL            shift and go to state 88
    NEW             shift and go to state 89
    ID              shift and go to state 77
    THIS            shift and go to state 91
    PE              shift and go to state 92

    exp                            shift and go to state 99
    rexp                           shift and go to state 79
    aexp                           shift and go to state 80
    mexp                           shift and go to state 81
    sexp                           shift and go to state 83
    pexp                           shift and go to state 90

state 76

    (4) main -> CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID PD CE cmd CD . CD

    CD              shift and go to state 100


state 77

    (58) pexp -> ID .

    PONTO           reduce using rule 58 (pexp -> ID .)
    COLCE           reduce using rule 58 (pexp -> ID .)
    MULTIPLICA      reduce using rule 58 (pexp -> ID .)
    DIVIDE          reduce using rule 58 (pexp -> ID .)
    MAIS            reduce using rule 58 (pexp -> ID .)
    MENOS           reduce using rule 58 (pexp -> ID .)
    MENOR           reduce using rule 58 (pexp -> ID .)
    COMPARACAO      reduce using rule 58 (pexp -> ID .)
    DIFERENTE       reduce using rule 58 (pexp -> ID .)
    PONTOVIRGULA    reduce using rule 58 (pexp -> ID .)
    ECOMERCIAL      reduce using rule 58 (pexp -> ID .)
    COLCD           reduce using rule 58 (pexp -> ID .)
    PD              reduce using rule 58 (pexp -> ID .)
    VIRGULA         reduce using rule 58 (pexp -> ID .)


state 78

    (32) cmd -> ID IGUAL exp . PONTOVIRGULA
    (36) exp -> exp . ECOMERCIAL rexp

    PONTOVIRGULA    shift and go to state 101
    ECOMERCIAL      shift and go to state 102


state 79

    (37) exp -> rexp .
    (38) rexp -> rexp . MENOR aexp
    (39) rexp -> rexp . COMPARACAO aexp
    (40) rexp -> rexp . DIFERENTE aexp

    PONTOVIRGULA    reduce using rule 37 (exp -> rexp .)
    ECOMERCIAL      reduce using rule 37 (exp -> rexp .)
    COLCD           reduce using rule 37 (exp -> rexp .)
    PD              reduce using rule 37 (exp -> rexp .)
    VIRGULA         reduce using rule 37 (exp -> rexp .)
    MENOR           shift and go to state 103
    COMPARACAO      shift and go to state 104
    DIFERENTE       shift and go to state 105


state 80

    (41) rexp -> aexp .
    (42) aexp -> aexp . MAIS mexp
    (43) aexp -> aexp . MENOS mexp

    MENOR           reduce using rule 41 (rexp -> aexp .)
    COMPARACAO      reduce using rule 41 (rexp -> aexp .)
    DIFERENTE       reduce using rule 41 (rexp -> aexp .)
    PONTOVIRGULA    reduce using rule 41 (rexp -> aexp .)
    ECOMERCIAL      reduce using rule 41 (rexp -> aexp .)
    COLCD           reduce using rule 41 (rexp -> aexp .)
    PD              reduce using rule 41 (rexp -> aexp .)
    VIRGULA         reduce using rule 41 (rexp -> aexp .)
    MAIS            shift and go to state 106
    MENOS           shift and go to state 107


state 81

    (44) aexp -> mexp .
    (45) mexp -> mexp . MULTIPLICA sexp
    (46) mexp -> mexp . DIVIDE sexp

    MAIS            reduce using rule 44 (aexp -> mexp .)
    MENOS           reduce using rule 44 (aexp -> mexp .)
    MENOR           reduce using rule 44 (aexp -> mexp .)
    COMPARACAO      reduce using rule 44 (aexp -> mexp .)
    DIFERENTE       reduce using rule 44 (aexp -> mexp .)
    PONTOVIRGULA    reduce using rule 44 (aexp -> mexp .)
    ECOMERCIAL      reduce using rule 44 (aexp -> mexp .)
    COLCD           reduce using rule 44 (aexp -> mexp .)
    PD              reduce using rule 44 (aexp -> mexp .)
    VIRGULA         reduce using rule 44 (aexp -> mexp .)
    MULTIPLICA      shift and go to state 108
    DIVIDE          shift and go to state 109


state 82

    (49) sexp -> MENOS . sexp
    (48) sexp -> . NEGACAO sexp
    (49) sexp -> . MENOS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMERO
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT COLCE exp COLCD
    (55) sexp -> . pexp PONTO LENGTH
    (56) sexp -> . pexp COLCE exp COLCD
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID PE PD
    (61) pexp -> . PE exp PD
    (62) pexp -> . pexp PONTO ID
    (63) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 84
    MENOS           shift and go to state 82
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    NUMERO          shift and go to state 87
    NULL            shift and go to state 88
    NEW             shift and go to state 89
    ID              shift and go to state 77
    THIS            shift and go to state 91
    PE              shift and go to state 92

    sexp                           shift and go to state 110
    pexp                           shift and go to state 90

state 83

    (47) mexp -> sexp .

    MULTIPLICA      reduce using rule 47 (mexp -> sexp .)
    DIVIDE          reduce using rule 47 (mexp -> sexp .)
    MAIS            reduce using rule 47 (mexp -> sexp .)
    MENOS           reduce using rule 47 (mexp -> sexp .)
    MENOR           reduce using rule 47 (mexp -> sexp .)
    COMPARACAO      reduce using rule 47 (mexp -> sexp .)
    DIFERENTE       reduce using rule 47 (mexp -> sexp .)
    PONTOVIRGULA    reduce using rule 47 (mexp -> sexp .)
    ECOMERCIAL      reduce using rule 47 (mexp -> sexp .)
    COLCD           reduce using rule 47 (mexp -> sexp .)
    PD              reduce using rule 47 (mexp -> sexp .)
    VIRGULA         reduce using rule 47 (mexp -> sexp .)


state 84

    (48) sexp -> NEGACAO . sexp
    (48) sexp -> . NEGACAO sexp
    (49) sexp -> . MENOS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMERO
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT COLCE exp COLCD
    (55) sexp -> . pexp PONTO LENGTH
    (56) sexp -> . pexp COLCE exp COLCD
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID PE PD
    (61) pexp -> . PE exp PD
    (62) pexp -> . pexp PONTO ID
    (63) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 84
    MENOS           shift and go to state 82
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    NUMERO          shift and go to state 87
    NULL            shift and go to state 88
    NEW             shift and go to state 89
    ID              shift and go to state 77
    THIS            shift and go to state 91
    PE              shift and go to state 92

    sexp                           shift and go to state 111
    pexp                           shift and go to state 90

state 85

    (50) sexp -> TRUE .

    MULTIPLICA      reduce using rule 50 (sexp -> TRUE .)
    DIVIDE          reduce using rule 50 (sexp -> TRUE .)
    MAIS            reduce using rule 50 (sexp -> TRUE .)
    MENOS           reduce using rule 50 (sexp -> TRUE .)
    MENOR           reduce using rule 50 (sexp -> TRUE .)
    COMPARACAO      reduce using rule 50 (sexp -> TRUE .)
    DIFERENTE       reduce using rule 50 (sexp -> TRUE .)
    PONTOVIRGULA    reduce using rule 50 (sexp -> TRUE .)
    ECOMERCIAL      reduce using rule 50 (sexp -> TRUE .)
    COLCD           reduce using rule 50 (sexp -> TRUE .)
    PD              reduce using rule 50 (sexp -> TRUE .)
    VIRGULA         reduce using rule 50 (sexp -> TRUE .)


state 86

    (51) sexp -> FALSE .

    MULTIPLICA      reduce using rule 51 (sexp -> FALSE .)
    DIVIDE          reduce using rule 51 (sexp -> FALSE .)
    MAIS            reduce using rule 51 (sexp -> FALSE .)
    MENOS           reduce using rule 51 (sexp -> FALSE .)
    MENOR           reduce using rule 51 (sexp -> FALSE .)
    COMPARACAO      reduce using rule 51 (sexp -> FALSE .)
    DIFERENTE       reduce using rule 51 (sexp -> FALSE .)
    PONTOVIRGULA    reduce using rule 51 (sexp -> FALSE .)
    ECOMERCIAL      reduce using rule 51 (sexp -> FALSE .)
    COLCD           reduce using rule 51 (sexp -> FALSE .)
    PD              reduce using rule 51 (sexp -> FALSE .)
    VIRGULA         reduce using rule 51 (sexp -> FALSE .)


state 87

    (52) sexp -> NUMERO .

    MULTIPLICA      reduce using rule 52 (sexp -> NUMERO .)
    DIVIDE          reduce using rule 52 (sexp -> NUMERO .)
    MAIS            reduce using rule 52 (sexp -> NUMERO .)
    MENOS           reduce using rule 52 (sexp -> NUMERO .)
    MENOR           reduce using rule 52 (sexp -> NUMERO .)
    COMPARACAO      reduce using rule 52 (sexp -> NUMERO .)
    DIFERENTE       reduce using rule 52 (sexp -> NUMERO .)
    PONTOVIRGULA    reduce using rule 52 (sexp -> NUMERO .)
    ECOMERCIAL      reduce using rule 52 (sexp -> NUMERO .)
    COLCD           reduce using rule 52 (sexp -> NUMERO .)
    PD              reduce using rule 52 (sexp -> NUMERO .)
    VIRGULA         reduce using rule 52 (sexp -> NUMERO .)


state 88

    (53) sexp -> NULL .

    MULTIPLICA      reduce using rule 53 (sexp -> NULL .)
    DIVIDE          reduce using rule 53 (sexp -> NULL .)
    MAIS            reduce using rule 53 (sexp -> NULL .)
    MENOS           reduce using rule 53 (sexp -> NULL .)
    MENOR           reduce using rule 53 (sexp -> NULL .)
    COMPARACAO      reduce using rule 53 (sexp -> NULL .)
    DIFERENTE       reduce using rule 53 (sexp -> NULL .)
    PONTOVIRGULA    reduce using rule 53 (sexp -> NULL .)
    ECOMERCIAL      reduce using rule 53 (sexp -> NULL .)
    COLCD           reduce using rule 53 (sexp -> NULL .)
    PD              reduce using rule 53 (sexp -> NULL .)
    VIRGULA         reduce using rule 53 (sexp -> NULL .)


state 89

    (54) sexp -> NEW . INT COLCE exp COLCD
    (60) pexp -> NEW . ID PE PD

    INT             shift and go to state 112
    ID              shift and go to state 113


state 90

    (55) sexp -> pexp . PONTO LENGTH
    (56) sexp -> pexp . COLCE exp COLCD
    (57) sexp -> pexp .
    (62) pexp -> pexp . PONTO ID
    (63) pexp -> pexp . PONTO ID PE pexp2 PD

    PONTO           shift and go to state 114
    COLCE           shift and go to state 115
    MULTIPLICA      reduce using rule 57 (sexp -> pexp .)
    DIVIDE          reduce using rule 57 (sexp -> pexp .)
    MAIS            reduce using rule 57 (sexp -> pexp .)
    MENOS           reduce using rule 57 (sexp -> pexp .)
    MENOR           reduce using rule 57 (sexp -> pexp .)
    COMPARACAO      reduce using rule 57 (sexp -> pexp .)
    DIFERENTE       reduce using rule 57 (sexp -> pexp .)
    PONTOVIRGULA    reduce using rule 57 (sexp -> pexp .)
    ECOMERCIAL      reduce using rule 57 (sexp -> pexp .)
    COLCD           reduce using rule 57 (sexp -> pexp .)
    PD              reduce using rule 57 (sexp -> pexp .)
    VIRGULA         reduce using rule 57 (sexp -> pexp .)


state 91

    (59) pexp -> THIS .

    PONTO           reduce using rule 59 (pexp -> THIS .)
    COLCE           reduce using rule 59 (pexp -> THIS .)
    MULTIPLICA      reduce using rule 59 (pexp -> THIS .)
    DIVIDE          reduce using rule 59 (pexp -> THIS .)
    MAIS            reduce using rule 59 (pexp -> THIS .)
    MENOS           reduce using rule 59 (pexp -> THIS .)
    MENOR           reduce using rule 59 (pexp -> THIS .)
    COMPARACAO      reduce using rule 59 (pexp -> THIS .)
    DIFERENTE       reduce using rule 59 (pexp -> THIS .)
    PONTOVIRGULA    reduce using rule 59 (pexp -> THIS .)
    ECOMERCIAL      reduce using rule 59 (pexp -> THIS .)
    COLCD           reduce using rule 59 (pexp -> THIS .)
    PD              reduce using rule 59 (pexp -> THIS .)
    VIRGULA         reduce using rule 59 (pexp -> THIS .)


state 92

    (61) pexp -> PE . exp PD
    (36) exp -> . exp ECOMERCIAL rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp MENOR aexp
    (39) rexp -> . rexp COMPARACAO aexp
    (40) rexp -> . rexp DIFERENTE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp MAIS mexp
    (43) aexp -> . aexp MENOS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp MULTIPLICA sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . NEGACAO sexp
    (49) sexp -> . MENOS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMERO
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT COLCE exp COLCD
    (55) sexp -> . pexp PONTO LENGTH
    (56) sexp -> . pexp COLCE exp COLCD
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID PE PD
    (61) pexp -> . PE exp PD
    (62) pexp -> . pexp PONTO ID
    (63) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 84
    MENOS           shift and go to state 82
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    NUMERO          shift and go to state 87
    NULL            shift and go to state 88
    NEW             shift and go to state 89
    ID              shift and go to state 77
    THIS            shift and go to state 91
    PE              shift and go to state 92

    exp                            shift and go to state 116
    rexp                           shift and go to state 79
    aexp                           shift and go to state 80
    mexp                           shift and go to state 81
    sexp                           shift and go to state 83
    pexp                           shift and go to state 90

state 93

    (33) cmd -> ID COLCE exp . COLCD IGUAL exp PONTOVIRGULA
    (36) exp -> exp . ECOMERCIAL rexp

    COLCD           shift and go to state 117
    ECOMERCIAL      shift and go to state 102


state 94

    (27) cmd -> CE cmd2 CD .

    CE              reduce using rule 27 (cmd -> CE cmd2 CD .)
    IF              reduce using rule 27 (cmd -> CE cmd2 CD .)
    WHILE           reduce using rule 27 (cmd -> CE cmd2 CD .)
    SYSTEMOUTPRINTLN reduce using rule 27 (cmd -> CE cmd2 CD .)
    ID              reduce using rule 27 (cmd -> CE cmd2 CD .)
    RETURN          reduce using rule 27 (cmd -> CE cmd2 CD .)
    CD              reduce using rule 27 (cmd -> CE cmd2 CD .)
    ELSE            reduce using rule 27 (cmd -> CE cmd2 CD .)


state 95

    (34) cmd2 -> cmd cmd2 .

    CD              reduce using rule 34 (cmd2 -> cmd cmd2 .)


state 96

    (13) method -> PUBLIC type ID PE method2 PD CE method3 method4 RETURN exp . PONTOVIRGULA CD
    (36) exp -> exp . ECOMERCIAL rexp

    PONTOVIRGULA    shift and go to state 118
    ECOMERCIAL      shift and go to state 102


state 97

    (28) cmd -> IF PE exp . PD cmd
    (29) cmd -> IF PE exp . PD cmd ELSE cmd
    (36) exp -> exp . ECOMERCIAL rexp

    PD              shift and go to state 119
    ECOMERCIAL      shift and go to state 102


state 98

    (30) cmd -> WHILE PE exp . PD cmd
    (36) exp -> exp . ECOMERCIAL rexp

    PD              shift and go to state 120
    ECOMERCIAL      shift and go to state 102


state 99

    (31) cmd -> SYSTEMOUTPRINTLN PE exp . PD PONTOVIRGULA
    (36) exp -> exp . ECOMERCIAL rexp

    PD              shift and go to state 121
    ECOMERCIAL      shift and go to state 102


state 100

    (4) main -> CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID PD CE cmd CD CD .

    CLASS           reduce using rule 4 (main -> CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID PD CE cmd CD CD .)
    $end            reduce using rule 4 (main -> CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID PD CE cmd CD CD .)


state 101

    (32) cmd -> ID IGUAL exp PONTOVIRGULA .

    CE              reduce using rule 32 (cmd -> ID IGUAL exp PONTOVIRGULA .)
    IF              reduce using rule 32 (cmd -> ID IGUAL exp PONTOVIRGULA .)
    WHILE           reduce using rule 32 (cmd -> ID IGUAL exp PONTOVIRGULA .)
    SYSTEMOUTPRINTLN reduce using rule 32 (cmd -> ID IGUAL exp PONTOVIRGULA .)
    ID              reduce using rule 32 (cmd -> ID IGUAL exp PONTOVIRGULA .)
    RETURN          reduce using rule 32 (cmd -> ID IGUAL exp PONTOVIRGULA .)
    CD              reduce using rule 32 (cmd -> ID IGUAL exp PONTOVIRGULA .)
    ELSE            reduce using rule 32 (cmd -> ID IGUAL exp PONTOVIRGULA .)


state 102

    (36) exp -> exp ECOMERCIAL . rexp
    (38) rexp -> . rexp MENOR aexp
    (39) rexp -> . rexp COMPARACAO aexp
    (40) rexp -> . rexp DIFERENTE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp MAIS mexp
    (43) aexp -> . aexp MENOS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp MULTIPLICA sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . NEGACAO sexp
    (49) sexp -> . MENOS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMERO
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT COLCE exp COLCD
    (55) sexp -> . pexp PONTO LENGTH
    (56) sexp -> . pexp COLCE exp COLCD
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID PE PD
    (61) pexp -> . PE exp PD
    (62) pexp -> . pexp PONTO ID
    (63) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 84
    MENOS           shift and go to state 82
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    NUMERO          shift and go to state 87
    NULL            shift and go to state 88
    NEW             shift and go to state 89
    ID              shift and go to state 77
    THIS            shift and go to state 91
    PE              shift and go to state 92

    rexp                           shift and go to state 122
    aexp                           shift and go to state 80
    mexp                           shift and go to state 81
    sexp                           shift and go to state 83
    pexp                           shift and go to state 90

state 103

    (38) rexp -> rexp MENOR . aexp
    (42) aexp -> . aexp MAIS mexp
    (43) aexp -> . aexp MENOS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp MULTIPLICA sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . NEGACAO sexp
    (49) sexp -> . MENOS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMERO
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT COLCE exp COLCD
    (55) sexp -> . pexp PONTO LENGTH
    (56) sexp -> . pexp COLCE exp COLCD
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID PE PD
    (61) pexp -> . PE exp PD
    (62) pexp -> . pexp PONTO ID
    (63) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 84
    MENOS           shift and go to state 82
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    NUMERO          shift and go to state 87
    NULL            shift and go to state 88
    NEW             shift and go to state 89
    ID              shift and go to state 77
    THIS            shift and go to state 91
    PE              shift and go to state 92

    aexp                           shift and go to state 123
    mexp                           shift and go to state 81
    sexp                           shift and go to state 83
    pexp                           shift and go to state 90

state 104

    (39) rexp -> rexp COMPARACAO . aexp
    (42) aexp -> . aexp MAIS mexp
    (43) aexp -> . aexp MENOS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp MULTIPLICA sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . NEGACAO sexp
    (49) sexp -> . MENOS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMERO
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT COLCE exp COLCD
    (55) sexp -> . pexp PONTO LENGTH
    (56) sexp -> . pexp COLCE exp COLCD
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID PE PD
    (61) pexp -> . PE exp PD
    (62) pexp -> . pexp PONTO ID
    (63) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 84
    MENOS           shift and go to state 82
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    NUMERO          shift and go to state 87
    NULL            shift and go to state 88
    NEW             shift and go to state 89
    ID              shift and go to state 77
    THIS            shift and go to state 91
    PE              shift and go to state 92

    aexp                           shift and go to state 124
    mexp                           shift and go to state 81
    sexp                           shift and go to state 83
    pexp                           shift and go to state 90

state 105

    (40) rexp -> rexp DIFERENTE . aexp
    (42) aexp -> . aexp MAIS mexp
    (43) aexp -> . aexp MENOS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp MULTIPLICA sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . NEGACAO sexp
    (49) sexp -> . MENOS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMERO
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT COLCE exp COLCD
    (55) sexp -> . pexp PONTO LENGTH
    (56) sexp -> . pexp COLCE exp COLCD
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID PE PD
    (61) pexp -> . PE exp PD
    (62) pexp -> . pexp PONTO ID
    (63) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 84
    MENOS           shift and go to state 82
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    NUMERO          shift and go to state 87
    NULL            shift and go to state 88
    NEW             shift and go to state 89
    ID              shift and go to state 77
    THIS            shift and go to state 91
    PE              shift and go to state 92

    aexp                           shift and go to state 125
    mexp                           shift and go to state 81
    sexp                           shift and go to state 83
    pexp                           shift and go to state 90

state 106

    (42) aexp -> aexp MAIS . mexp
    (45) mexp -> . mexp MULTIPLICA sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . NEGACAO sexp
    (49) sexp -> . MENOS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMERO
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT COLCE exp COLCD
    (55) sexp -> . pexp PONTO LENGTH
    (56) sexp -> . pexp COLCE exp COLCD
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID PE PD
    (61) pexp -> . PE exp PD
    (62) pexp -> . pexp PONTO ID
    (63) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 84
    MENOS           shift and go to state 82
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    NUMERO          shift and go to state 87
    NULL            shift and go to state 88
    NEW             shift and go to state 89
    ID              shift and go to state 77
    THIS            shift and go to state 91
    PE              shift and go to state 92

    mexp                           shift and go to state 126
    sexp                           shift and go to state 83
    pexp                           shift and go to state 90

state 107

    (43) aexp -> aexp MENOS . mexp
    (45) mexp -> . mexp MULTIPLICA sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . NEGACAO sexp
    (49) sexp -> . MENOS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMERO
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT COLCE exp COLCD
    (55) sexp -> . pexp PONTO LENGTH
    (56) sexp -> . pexp COLCE exp COLCD
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID PE PD
    (61) pexp -> . PE exp PD
    (62) pexp -> . pexp PONTO ID
    (63) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 84
    MENOS           shift and go to state 82
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    NUMERO          shift and go to state 87
    NULL            shift and go to state 88
    NEW             shift and go to state 89
    ID              shift and go to state 77
    THIS            shift and go to state 91
    PE              shift and go to state 92

    mexp                           shift and go to state 127
    sexp                           shift and go to state 83
    pexp                           shift and go to state 90

state 108

    (45) mexp -> mexp MULTIPLICA . sexp
    (48) sexp -> . NEGACAO sexp
    (49) sexp -> . MENOS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMERO
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT COLCE exp COLCD
    (55) sexp -> . pexp PONTO LENGTH
    (56) sexp -> . pexp COLCE exp COLCD
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID PE PD
    (61) pexp -> . PE exp PD
    (62) pexp -> . pexp PONTO ID
    (63) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 84
    MENOS           shift and go to state 82
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    NUMERO          shift and go to state 87
    NULL            shift and go to state 88
    NEW             shift and go to state 89
    ID              shift and go to state 77
    THIS            shift and go to state 91
    PE              shift and go to state 92

    sexp                           shift and go to state 128
    pexp                           shift and go to state 90

state 109

    (46) mexp -> mexp DIVIDE . sexp
    (48) sexp -> . NEGACAO sexp
    (49) sexp -> . MENOS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMERO
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT COLCE exp COLCD
    (55) sexp -> . pexp PONTO LENGTH
    (56) sexp -> . pexp COLCE exp COLCD
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID PE PD
    (61) pexp -> . PE exp PD
    (62) pexp -> . pexp PONTO ID
    (63) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 84
    MENOS           shift and go to state 82
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    NUMERO          shift and go to state 87
    NULL            shift and go to state 88
    NEW             shift and go to state 89
    ID              shift and go to state 77
    THIS            shift and go to state 91
    PE              shift and go to state 92

    sexp                           shift and go to state 129
    pexp                           shift and go to state 90

state 110

    (49) sexp -> MENOS sexp .

    MULTIPLICA      reduce using rule 49 (sexp -> MENOS sexp .)
    DIVIDE          reduce using rule 49 (sexp -> MENOS sexp .)
    MAIS            reduce using rule 49 (sexp -> MENOS sexp .)
    MENOS           reduce using rule 49 (sexp -> MENOS sexp .)
    MENOR           reduce using rule 49 (sexp -> MENOS sexp .)
    COMPARACAO      reduce using rule 49 (sexp -> MENOS sexp .)
    DIFERENTE       reduce using rule 49 (sexp -> MENOS sexp .)
    PONTOVIRGULA    reduce using rule 49 (sexp -> MENOS sexp .)
    ECOMERCIAL      reduce using rule 49 (sexp -> MENOS sexp .)
    COLCD           reduce using rule 49 (sexp -> MENOS sexp .)
    PD              reduce using rule 49 (sexp -> MENOS sexp .)
    VIRGULA         reduce using rule 49 (sexp -> MENOS sexp .)


state 111

    (48) sexp -> NEGACAO sexp .

    MULTIPLICA      reduce using rule 48 (sexp -> NEGACAO sexp .)
    DIVIDE          reduce using rule 48 (sexp -> NEGACAO sexp .)
    MAIS            reduce using rule 48 (sexp -> NEGACAO sexp .)
    MENOS           reduce using rule 48 (sexp -> NEGACAO sexp .)
    MENOR           reduce using rule 48 (sexp -> NEGACAO sexp .)
    COMPARACAO      reduce using rule 48 (sexp -> NEGACAO sexp .)
    DIFERENTE       reduce using rule 48 (sexp -> NEGACAO sexp .)
    PONTOVIRGULA    reduce using rule 48 (sexp -> NEGACAO sexp .)
    ECOMERCIAL      reduce using rule 48 (sexp -> NEGACAO sexp .)
    COLCD           reduce using rule 48 (sexp -> NEGACAO sexp .)
    PD              reduce using rule 48 (sexp -> NEGACAO sexp .)
    VIRGULA         reduce using rule 48 (sexp -> NEGACAO sexp .)


state 112

    (54) sexp -> NEW INT . COLCE exp COLCD

    COLCE           shift and go to state 130


state 113

    (60) pexp -> NEW ID . PE PD

    PE              shift and go to state 131


state 114

    (55) sexp -> pexp PONTO . LENGTH
    (62) pexp -> pexp PONTO . ID
    (63) pexp -> pexp PONTO . ID PE pexp2 PD

    LENGTH          shift and go to state 132
    ID              shift and go to state 133


state 115

    (56) sexp -> pexp COLCE . exp COLCD
    (36) exp -> . exp ECOMERCIAL rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp MENOR aexp
    (39) rexp -> . rexp COMPARACAO aexp
    (40) rexp -> . rexp DIFERENTE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp MAIS mexp
    (43) aexp -> . aexp MENOS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp MULTIPLICA sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . NEGACAO sexp
    (49) sexp -> . MENOS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMERO
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT COLCE exp COLCD
    (55) sexp -> . pexp PONTO LENGTH
    (56) sexp -> . pexp COLCE exp COLCD
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID PE PD
    (61) pexp -> . PE exp PD
    (62) pexp -> . pexp PONTO ID
    (63) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 84
    MENOS           shift and go to state 82
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    NUMERO          shift and go to state 87
    NULL            shift and go to state 88
    NEW             shift and go to state 89
    ID              shift and go to state 77
    THIS            shift and go to state 91
    PE              shift and go to state 92

    pexp                           shift and go to state 90
    exp                            shift and go to state 134
    rexp                           shift and go to state 79
    aexp                           shift and go to state 80
    mexp                           shift and go to state 81
    sexp                           shift and go to state 83

state 116

    (61) pexp -> PE exp . PD
    (36) exp -> exp . ECOMERCIAL rexp

    PD              shift and go to state 135
    ECOMERCIAL      shift and go to state 102


state 117

    (33) cmd -> ID COLCE exp COLCD . IGUAL exp PONTOVIRGULA

    IGUAL           shift and go to state 136


state 118

    (13) method -> PUBLIC type ID PE method2 PD CE method3 method4 RETURN exp PONTOVIRGULA . CD

    CD              shift and go to state 137


state 119

    (28) cmd -> IF PE exp PD . cmd
    (29) cmd -> IF PE exp PD . cmd ELSE cmd
    (27) cmd -> . CE cmd2 CD
    (28) cmd -> . IF PE exp PD cmd
    (29) cmd -> . IF PE exp PD cmd ELSE cmd
    (30) cmd -> . WHILE PE exp PD cmd
    (31) cmd -> . SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA
    (32) cmd -> . ID IGUAL exp PONTOVIRGULA
    (33) cmd -> . ID COLCE exp COLCD IGUAL exp PONTOVIRGULA

    CE              shift and go to state 58
    IF              shift and go to state 61
    WHILE           shift and go to state 62
    SYSTEMOUTPRINTLN shift and go to state 63
    ID              shift and go to state 57

    cmd                            shift and go to state 138

state 120

    (30) cmd -> WHILE PE exp PD . cmd
    (27) cmd -> . CE cmd2 CD
    (28) cmd -> . IF PE exp PD cmd
    (29) cmd -> . IF PE exp PD cmd ELSE cmd
    (30) cmd -> . WHILE PE exp PD cmd
    (31) cmd -> . SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA
    (32) cmd -> . ID IGUAL exp PONTOVIRGULA
    (33) cmd -> . ID COLCE exp COLCD IGUAL exp PONTOVIRGULA

    CE              shift and go to state 58
    IF              shift and go to state 61
    WHILE           shift and go to state 62
    SYSTEMOUTPRINTLN shift and go to state 63
    ID              shift and go to state 57

    cmd                            shift and go to state 139

state 121

    (31) cmd -> SYSTEMOUTPRINTLN PE exp PD . PONTOVIRGULA

    PONTOVIRGULA    shift and go to state 140


state 122

    (36) exp -> exp ECOMERCIAL rexp .
    (38) rexp -> rexp . MENOR aexp
    (39) rexp -> rexp . COMPARACAO aexp
    (40) rexp -> rexp . DIFERENTE aexp

    PONTOVIRGULA    reduce using rule 36 (exp -> exp ECOMERCIAL rexp .)
    ECOMERCIAL      reduce using rule 36 (exp -> exp ECOMERCIAL rexp .)
    COLCD           reduce using rule 36 (exp -> exp ECOMERCIAL rexp .)
    PD              reduce using rule 36 (exp -> exp ECOMERCIAL rexp .)
    VIRGULA         reduce using rule 36 (exp -> exp ECOMERCIAL rexp .)
    MENOR           shift and go to state 103
    COMPARACAO      shift and go to state 104
    DIFERENTE       shift and go to state 105


state 123

    (38) rexp -> rexp MENOR aexp .
    (42) aexp -> aexp . MAIS mexp
    (43) aexp -> aexp . MENOS mexp

    MENOR           reduce using rule 38 (rexp -> rexp MENOR aexp .)
    COMPARACAO      reduce using rule 38 (rexp -> rexp MENOR aexp .)
    DIFERENTE       reduce using rule 38 (rexp -> rexp MENOR aexp .)
    PONTOVIRGULA    reduce using rule 38 (rexp -> rexp MENOR aexp .)
    ECOMERCIAL      reduce using rule 38 (rexp -> rexp MENOR aexp .)
    COLCD           reduce using rule 38 (rexp -> rexp MENOR aexp .)
    PD              reduce using rule 38 (rexp -> rexp MENOR aexp .)
    VIRGULA         reduce using rule 38 (rexp -> rexp MENOR aexp .)
    MAIS            shift and go to state 106
    MENOS           shift and go to state 107


state 124

    (39) rexp -> rexp COMPARACAO aexp .
    (42) aexp -> aexp . MAIS mexp
    (43) aexp -> aexp . MENOS mexp

    MENOR           reduce using rule 39 (rexp -> rexp COMPARACAO aexp .)
    COMPARACAO      reduce using rule 39 (rexp -> rexp COMPARACAO aexp .)
    DIFERENTE       reduce using rule 39 (rexp -> rexp COMPARACAO aexp .)
    PONTOVIRGULA    reduce using rule 39 (rexp -> rexp COMPARACAO aexp .)
    ECOMERCIAL      reduce using rule 39 (rexp -> rexp COMPARACAO aexp .)
    COLCD           reduce using rule 39 (rexp -> rexp COMPARACAO aexp .)
    PD              reduce using rule 39 (rexp -> rexp COMPARACAO aexp .)
    VIRGULA         reduce using rule 39 (rexp -> rexp COMPARACAO aexp .)
    MAIS            shift and go to state 106
    MENOS           shift and go to state 107


state 125

    (40) rexp -> rexp DIFERENTE aexp .
    (42) aexp -> aexp . MAIS mexp
    (43) aexp -> aexp . MENOS mexp

    MENOR           reduce using rule 40 (rexp -> rexp DIFERENTE aexp .)
    COMPARACAO      reduce using rule 40 (rexp -> rexp DIFERENTE aexp .)
    DIFERENTE       reduce using rule 40 (rexp -> rexp DIFERENTE aexp .)
    PONTOVIRGULA    reduce using rule 40 (rexp -> rexp DIFERENTE aexp .)
    ECOMERCIAL      reduce using rule 40 (rexp -> rexp DIFERENTE aexp .)
    COLCD           reduce using rule 40 (rexp -> rexp DIFERENTE aexp .)
    PD              reduce using rule 40 (rexp -> rexp DIFERENTE aexp .)
    VIRGULA         reduce using rule 40 (rexp -> rexp DIFERENTE aexp .)
    MAIS            shift and go to state 106
    MENOS           shift and go to state 107


state 126

    (42) aexp -> aexp MAIS mexp .
    (45) mexp -> mexp . MULTIPLICA sexp
    (46) mexp -> mexp . DIVIDE sexp

    MAIS            reduce using rule 42 (aexp -> aexp MAIS mexp .)
    MENOS           reduce using rule 42 (aexp -> aexp MAIS mexp .)
    MENOR           reduce using rule 42 (aexp -> aexp MAIS mexp .)
    COMPARACAO      reduce using rule 42 (aexp -> aexp MAIS mexp .)
    DIFERENTE       reduce using rule 42 (aexp -> aexp MAIS mexp .)
    PONTOVIRGULA    reduce using rule 42 (aexp -> aexp MAIS mexp .)
    ECOMERCIAL      reduce using rule 42 (aexp -> aexp MAIS mexp .)
    COLCD           reduce using rule 42 (aexp -> aexp MAIS mexp .)
    PD              reduce using rule 42 (aexp -> aexp MAIS mexp .)
    VIRGULA         reduce using rule 42 (aexp -> aexp MAIS mexp .)
    MULTIPLICA      shift and go to state 108
    DIVIDE          shift and go to state 109


state 127

    (43) aexp -> aexp MENOS mexp .
    (45) mexp -> mexp . MULTIPLICA sexp
    (46) mexp -> mexp . DIVIDE sexp

    MAIS            reduce using rule 43 (aexp -> aexp MENOS mexp .)
    MENOS           reduce using rule 43 (aexp -> aexp MENOS mexp .)
    MENOR           reduce using rule 43 (aexp -> aexp MENOS mexp .)
    COMPARACAO      reduce using rule 43 (aexp -> aexp MENOS mexp .)
    DIFERENTE       reduce using rule 43 (aexp -> aexp MENOS mexp .)
    PONTOVIRGULA    reduce using rule 43 (aexp -> aexp MENOS mexp .)
    ECOMERCIAL      reduce using rule 43 (aexp -> aexp MENOS mexp .)
    COLCD           reduce using rule 43 (aexp -> aexp MENOS mexp .)
    PD              reduce using rule 43 (aexp -> aexp MENOS mexp .)
    VIRGULA         reduce using rule 43 (aexp -> aexp MENOS mexp .)
    MULTIPLICA      shift and go to state 108
    DIVIDE          shift and go to state 109


state 128

    (45) mexp -> mexp MULTIPLICA sexp .

    MULTIPLICA      reduce using rule 45 (mexp -> mexp MULTIPLICA sexp .)
    DIVIDE          reduce using rule 45 (mexp -> mexp MULTIPLICA sexp .)
    MAIS            reduce using rule 45 (mexp -> mexp MULTIPLICA sexp .)
    MENOS           reduce using rule 45 (mexp -> mexp MULTIPLICA sexp .)
    MENOR           reduce using rule 45 (mexp -> mexp MULTIPLICA sexp .)
    COMPARACAO      reduce using rule 45 (mexp -> mexp MULTIPLICA sexp .)
    DIFERENTE       reduce using rule 45 (mexp -> mexp MULTIPLICA sexp .)
    PONTOVIRGULA    reduce using rule 45 (mexp -> mexp MULTIPLICA sexp .)
    ECOMERCIAL      reduce using rule 45 (mexp -> mexp MULTIPLICA sexp .)
    COLCD           reduce using rule 45 (mexp -> mexp MULTIPLICA sexp .)
    PD              reduce using rule 45 (mexp -> mexp MULTIPLICA sexp .)
    VIRGULA         reduce using rule 45 (mexp -> mexp MULTIPLICA sexp .)


state 129

    (46) mexp -> mexp DIVIDE sexp .

    MULTIPLICA      reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    DIVIDE          reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    MAIS            reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    MENOS           reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    MENOR           reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    COMPARACAO      reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    DIFERENTE       reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    PONTOVIRGULA    reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    ECOMERCIAL      reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    COLCD           reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    PD              reduce using rule 46 (mexp -> mexp DIVIDE sexp .)
    VIRGULA         reduce using rule 46 (mexp -> mexp DIVIDE sexp .)


state 130

    (54) sexp -> NEW INT COLCE . exp COLCD
    (36) exp -> . exp ECOMERCIAL rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp MENOR aexp
    (39) rexp -> . rexp COMPARACAO aexp
    (40) rexp -> . rexp DIFERENTE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp MAIS mexp
    (43) aexp -> . aexp MENOS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp MULTIPLICA sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . NEGACAO sexp
    (49) sexp -> . MENOS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMERO
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT COLCE exp COLCD
    (55) sexp -> . pexp PONTO LENGTH
    (56) sexp -> . pexp COLCE exp COLCD
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID PE PD
    (61) pexp -> . PE exp PD
    (62) pexp -> . pexp PONTO ID
    (63) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 84
    MENOS           shift and go to state 82
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    NUMERO          shift and go to state 87
    NULL            shift and go to state 88
    NEW             shift and go to state 89
    ID              shift and go to state 77
    THIS            shift and go to state 91
    PE              shift and go to state 92

    exp                            shift and go to state 141
    rexp                           shift and go to state 79
    aexp                           shift and go to state 80
    mexp                           shift and go to state 81
    sexp                           shift and go to state 83
    pexp                           shift and go to state 90

state 131

    (60) pexp -> NEW ID PE . PD

    PD              shift and go to state 142


state 132

    (55) sexp -> pexp PONTO LENGTH .

    MULTIPLICA      reduce using rule 55 (sexp -> pexp PONTO LENGTH .)
    DIVIDE          reduce using rule 55 (sexp -> pexp PONTO LENGTH .)
    MAIS            reduce using rule 55 (sexp -> pexp PONTO LENGTH .)
    MENOS           reduce using rule 55 (sexp -> pexp PONTO LENGTH .)
    MENOR           reduce using rule 55 (sexp -> pexp PONTO LENGTH .)
    COMPARACAO      reduce using rule 55 (sexp -> pexp PONTO LENGTH .)
    DIFERENTE       reduce using rule 55 (sexp -> pexp PONTO LENGTH .)
    PONTOVIRGULA    reduce using rule 55 (sexp -> pexp PONTO LENGTH .)
    ECOMERCIAL      reduce using rule 55 (sexp -> pexp PONTO LENGTH .)
    COLCD           reduce using rule 55 (sexp -> pexp PONTO LENGTH .)
    PD              reduce using rule 55 (sexp -> pexp PONTO LENGTH .)
    VIRGULA         reduce using rule 55 (sexp -> pexp PONTO LENGTH .)


state 133

    (62) pexp -> pexp PONTO ID .
    (63) pexp -> pexp PONTO ID . PE pexp2 PD

    PONTO           reduce using rule 62 (pexp -> pexp PONTO ID .)
    COLCE           reduce using rule 62 (pexp -> pexp PONTO ID .)
    MULTIPLICA      reduce using rule 62 (pexp -> pexp PONTO ID .)
    DIVIDE          reduce using rule 62 (pexp -> pexp PONTO ID .)
    MAIS            reduce using rule 62 (pexp -> pexp PONTO ID .)
    MENOS           reduce using rule 62 (pexp -> pexp PONTO ID .)
    MENOR           reduce using rule 62 (pexp -> pexp PONTO ID .)
    COMPARACAO      reduce using rule 62 (pexp -> pexp PONTO ID .)
    DIFERENTE       reduce using rule 62 (pexp -> pexp PONTO ID .)
    PONTOVIRGULA    reduce using rule 62 (pexp -> pexp PONTO ID .)
    ECOMERCIAL      reduce using rule 62 (pexp -> pexp PONTO ID .)
    COLCD           reduce using rule 62 (pexp -> pexp PONTO ID .)
    PD              reduce using rule 62 (pexp -> pexp PONTO ID .)
    VIRGULA         reduce using rule 62 (pexp -> pexp PONTO ID .)
    PE              shift and go to state 143


state 134

    (56) sexp -> pexp COLCE exp . COLCD
    (36) exp -> exp . ECOMERCIAL rexp

    COLCD           shift and go to state 144
    ECOMERCIAL      shift and go to state 102


state 135

    (61) pexp -> PE exp PD .

    PONTO           reduce using rule 61 (pexp -> PE exp PD .)
    COLCE           reduce using rule 61 (pexp -> PE exp PD .)
    MULTIPLICA      reduce using rule 61 (pexp -> PE exp PD .)
    DIVIDE          reduce using rule 61 (pexp -> PE exp PD .)
    MAIS            reduce using rule 61 (pexp -> PE exp PD .)
    MENOS           reduce using rule 61 (pexp -> PE exp PD .)
    MENOR           reduce using rule 61 (pexp -> PE exp PD .)
    COMPARACAO      reduce using rule 61 (pexp -> PE exp PD .)
    DIFERENTE       reduce using rule 61 (pexp -> PE exp PD .)
    PONTOVIRGULA    reduce using rule 61 (pexp -> PE exp PD .)
    ECOMERCIAL      reduce using rule 61 (pexp -> PE exp PD .)
    COLCD           reduce using rule 61 (pexp -> PE exp PD .)
    PD              reduce using rule 61 (pexp -> PE exp PD .)
    VIRGULA         reduce using rule 61 (pexp -> PE exp PD .)


state 136

    (33) cmd -> ID COLCE exp COLCD IGUAL . exp PONTOVIRGULA
    (36) exp -> . exp ECOMERCIAL rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp MENOR aexp
    (39) rexp -> . rexp COMPARACAO aexp
    (40) rexp -> . rexp DIFERENTE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp MAIS mexp
    (43) aexp -> . aexp MENOS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp MULTIPLICA sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . NEGACAO sexp
    (49) sexp -> . MENOS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMERO
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT COLCE exp COLCD
    (55) sexp -> . pexp PONTO LENGTH
    (56) sexp -> . pexp COLCE exp COLCD
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID PE PD
    (61) pexp -> . PE exp PD
    (62) pexp -> . pexp PONTO ID
    (63) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 84
    MENOS           shift and go to state 82
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    NUMERO          shift and go to state 87
    NULL            shift and go to state 88
    NEW             shift and go to state 89
    ID              shift and go to state 77
    THIS            shift and go to state 91
    PE              shift and go to state 92

    exp                            shift and go to state 145
    rexp                           shift and go to state 79
    aexp                           shift and go to state 80
    mexp                           shift and go to state 81
    sexp                           shift and go to state 83
    pexp                           shift and go to state 90

state 137

    (13) method -> PUBLIC type ID PE method2 PD CE method3 method4 RETURN exp PONTOVIRGULA CD .

    PUBLIC          reduce using rule 13 (method -> PUBLIC type ID PE method2 PD CE method3 method4 RETURN exp PONTOVIRGULA CD .)
    CD              reduce using rule 13 (method -> PUBLIC type ID PE method2 PD CE method3 method4 RETURN exp PONTOVIRGULA CD .)


state 138

    (28) cmd -> IF PE exp PD cmd .
    (29) cmd -> IF PE exp PD cmd . ELSE cmd

  ! shift/reduce conflict for ELSE resolved as shift
    CE              reduce using rule 28 (cmd -> IF PE exp PD cmd .)
    IF              reduce using rule 28 (cmd -> IF PE exp PD cmd .)
    WHILE           reduce using rule 28 (cmd -> IF PE exp PD cmd .)
    SYSTEMOUTPRINTLN reduce using rule 28 (cmd -> IF PE exp PD cmd .)
    ID              reduce using rule 28 (cmd -> IF PE exp PD cmd .)
    RETURN          reduce using rule 28 (cmd -> IF PE exp PD cmd .)
    CD              reduce using rule 28 (cmd -> IF PE exp PD cmd .)
    ELSE            shift and go to state 146

  ! ELSE            [ reduce using rule 28 (cmd -> IF PE exp PD cmd .) ]


state 139

    (30) cmd -> WHILE PE exp PD cmd .

    CE              reduce using rule 30 (cmd -> WHILE PE exp PD cmd .)
    IF              reduce using rule 30 (cmd -> WHILE PE exp PD cmd .)
    WHILE           reduce using rule 30 (cmd -> WHILE PE exp PD cmd .)
    SYSTEMOUTPRINTLN reduce using rule 30 (cmd -> WHILE PE exp PD cmd .)
    ID              reduce using rule 30 (cmd -> WHILE PE exp PD cmd .)
    RETURN          reduce using rule 30 (cmd -> WHILE PE exp PD cmd .)
    CD              reduce using rule 30 (cmd -> WHILE PE exp PD cmd .)
    ELSE            reduce using rule 30 (cmd -> WHILE PE exp PD cmd .)


state 140

    (31) cmd -> SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA .

    CE              reduce using rule 31 (cmd -> SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA .)
    IF              reduce using rule 31 (cmd -> SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA .)
    WHILE           reduce using rule 31 (cmd -> SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA .)
    SYSTEMOUTPRINTLN reduce using rule 31 (cmd -> SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA .)
    ID              reduce using rule 31 (cmd -> SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA .)
    RETURN          reduce using rule 31 (cmd -> SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA .)
    CD              reduce using rule 31 (cmd -> SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA .)
    ELSE            reduce using rule 31 (cmd -> SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA .)


state 141

    (54) sexp -> NEW INT COLCE exp . COLCD
    (36) exp -> exp . ECOMERCIAL rexp

    COLCD           shift and go to state 147
    ECOMERCIAL      shift and go to state 102


state 142

    (60) pexp -> NEW ID PE PD .

    PONTO           reduce using rule 60 (pexp -> NEW ID PE PD .)
    COLCE           reduce using rule 60 (pexp -> NEW ID PE PD .)
    MULTIPLICA      reduce using rule 60 (pexp -> NEW ID PE PD .)
    DIVIDE          reduce using rule 60 (pexp -> NEW ID PE PD .)
    MAIS            reduce using rule 60 (pexp -> NEW ID PE PD .)
    MENOS           reduce using rule 60 (pexp -> NEW ID PE PD .)
    MENOR           reduce using rule 60 (pexp -> NEW ID PE PD .)
    COMPARACAO      reduce using rule 60 (pexp -> NEW ID PE PD .)
    DIFERENTE       reduce using rule 60 (pexp -> NEW ID PE PD .)
    PONTOVIRGULA    reduce using rule 60 (pexp -> NEW ID PE PD .)
    ECOMERCIAL      reduce using rule 60 (pexp -> NEW ID PE PD .)
    COLCD           reduce using rule 60 (pexp -> NEW ID PE PD .)
    PD              reduce using rule 60 (pexp -> NEW ID PE PD .)
    VIRGULA         reduce using rule 60 (pexp -> NEW ID PE PD .)


state 143

    (63) pexp -> pexp PONTO ID PE . pexp2 PD
    (64) pexp2 -> . exps
    (65) pexp2 -> .
    (66) exps -> . exp exps2
    (36) exp -> . exp ECOMERCIAL rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp MENOR aexp
    (39) rexp -> . rexp COMPARACAO aexp
    (40) rexp -> . rexp DIFERENTE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp MAIS mexp
    (43) aexp -> . aexp MENOS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp MULTIPLICA sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . NEGACAO sexp
    (49) sexp -> . MENOS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMERO
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT COLCE exp COLCD
    (55) sexp -> . pexp PONTO LENGTH
    (56) sexp -> . pexp COLCE exp COLCD
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID PE PD
    (61) pexp -> . PE exp PD
    (62) pexp -> . pexp PONTO ID
    (63) pexp -> . pexp PONTO ID PE pexp2 PD

    PD              reduce using rule 65 (pexp2 -> .)
    NEGACAO         shift and go to state 84
    MENOS           shift and go to state 82
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    NUMERO          shift and go to state 87
    NULL            shift and go to state 88
    NEW             shift and go to state 89
    ID              shift and go to state 77
    THIS            shift and go to state 91
    PE              shift and go to state 92

    pexp                           shift and go to state 90
    pexp2                          shift and go to state 148
    exps                           shift and go to state 149
    exp                            shift and go to state 150
    rexp                           shift and go to state 79
    aexp                           shift and go to state 80
    mexp                           shift and go to state 81
    sexp                           shift and go to state 83

state 144

    (56) sexp -> pexp COLCE exp COLCD .

    MULTIPLICA      reduce using rule 56 (sexp -> pexp COLCE exp COLCD .)
    DIVIDE          reduce using rule 56 (sexp -> pexp COLCE exp COLCD .)
    MAIS            reduce using rule 56 (sexp -> pexp COLCE exp COLCD .)
    MENOS           reduce using rule 56 (sexp -> pexp COLCE exp COLCD .)
    MENOR           reduce using rule 56 (sexp -> pexp COLCE exp COLCD .)
    COMPARACAO      reduce using rule 56 (sexp -> pexp COLCE exp COLCD .)
    DIFERENTE       reduce using rule 56 (sexp -> pexp COLCE exp COLCD .)
    PONTOVIRGULA    reduce using rule 56 (sexp -> pexp COLCE exp COLCD .)
    ECOMERCIAL      reduce using rule 56 (sexp -> pexp COLCE exp COLCD .)
    COLCD           reduce using rule 56 (sexp -> pexp COLCE exp COLCD .)
    PD              reduce using rule 56 (sexp -> pexp COLCE exp COLCD .)
    VIRGULA         reduce using rule 56 (sexp -> pexp COLCE exp COLCD .)


state 145

    (33) cmd -> ID COLCE exp COLCD IGUAL exp . PONTOVIRGULA
    (36) exp -> exp . ECOMERCIAL rexp

    PONTOVIRGULA    shift and go to state 151
    ECOMERCIAL      shift and go to state 102


state 146

    (29) cmd -> IF PE exp PD cmd ELSE . cmd
    (27) cmd -> . CE cmd2 CD
    (28) cmd -> . IF PE exp PD cmd
    (29) cmd -> . IF PE exp PD cmd ELSE cmd
    (30) cmd -> . WHILE PE exp PD cmd
    (31) cmd -> . SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA
    (32) cmd -> . ID IGUAL exp PONTOVIRGULA
    (33) cmd -> . ID COLCE exp COLCD IGUAL exp PONTOVIRGULA

    CE              shift and go to state 58
    IF              shift and go to state 61
    WHILE           shift and go to state 62
    SYSTEMOUTPRINTLN shift and go to state 63
    ID              shift and go to state 57

    cmd                            shift and go to state 152

state 147

    (54) sexp -> NEW INT COLCE exp COLCD .

    MULTIPLICA      reduce using rule 54 (sexp -> NEW INT COLCE exp COLCD .)
    DIVIDE          reduce using rule 54 (sexp -> NEW INT COLCE exp COLCD .)
    MAIS            reduce using rule 54 (sexp -> NEW INT COLCE exp COLCD .)
    MENOS           reduce using rule 54 (sexp -> NEW INT COLCE exp COLCD .)
    MENOR           reduce using rule 54 (sexp -> NEW INT COLCE exp COLCD .)
    COMPARACAO      reduce using rule 54 (sexp -> NEW INT COLCE exp COLCD .)
    DIFERENTE       reduce using rule 54 (sexp -> NEW INT COLCE exp COLCD .)
    PONTOVIRGULA    reduce using rule 54 (sexp -> NEW INT COLCE exp COLCD .)
    ECOMERCIAL      reduce using rule 54 (sexp -> NEW INT COLCE exp COLCD .)
    COLCD           reduce using rule 54 (sexp -> NEW INT COLCE exp COLCD .)
    PD              reduce using rule 54 (sexp -> NEW INT COLCE exp COLCD .)
    VIRGULA         reduce using rule 54 (sexp -> NEW INT COLCE exp COLCD .)


state 148

    (63) pexp -> pexp PONTO ID PE pexp2 . PD

    PD              shift and go to state 153


state 149

    (64) pexp2 -> exps .

    PD              reduce using rule 64 (pexp2 -> exps .)


state 150

    (66) exps -> exp . exps2
    (36) exp -> exp . ECOMERCIAL rexp
    (67) exps2 -> . VIRGULA exp exps2
    (68) exps2 -> .

    ECOMERCIAL      shift and go to state 102
    VIRGULA         shift and go to state 155
    PD              reduce using rule 68 (exps2 -> .)

    exps2                          shift and go to state 154

state 151

    (33) cmd -> ID COLCE exp COLCD IGUAL exp PONTOVIRGULA .

    CE              reduce using rule 33 (cmd -> ID COLCE exp COLCD IGUAL exp PONTOVIRGULA .)
    IF              reduce using rule 33 (cmd -> ID COLCE exp COLCD IGUAL exp PONTOVIRGULA .)
    WHILE           reduce using rule 33 (cmd -> ID COLCE exp COLCD IGUAL exp PONTOVIRGULA .)
    SYSTEMOUTPRINTLN reduce using rule 33 (cmd -> ID COLCE exp COLCD IGUAL exp PONTOVIRGULA .)
    ID              reduce using rule 33 (cmd -> ID COLCE exp COLCD IGUAL exp PONTOVIRGULA .)
    RETURN          reduce using rule 33 (cmd -> ID COLCE exp COLCD IGUAL exp PONTOVIRGULA .)
    CD              reduce using rule 33 (cmd -> ID COLCE exp COLCD IGUAL exp PONTOVIRGULA .)
    ELSE            reduce using rule 33 (cmd -> ID COLCE exp COLCD IGUAL exp PONTOVIRGULA .)


state 152

    (29) cmd -> IF PE exp PD cmd ELSE cmd .

    CE              reduce using rule 29 (cmd -> IF PE exp PD cmd ELSE cmd .)
    IF              reduce using rule 29 (cmd -> IF PE exp PD cmd ELSE cmd .)
    WHILE           reduce using rule 29 (cmd -> IF PE exp PD cmd ELSE cmd .)
    SYSTEMOUTPRINTLN reduce using rule 29 (cmd -> IF PE exp PD cmd ELSE cmd .)
    ID              reduce using rule 29 (cmd -> IF PE exp PD cmd ELSE cmd .)
    RETURN          reduce using rule 29 (cmd -> IF PE exp PD cmd ELSE cmd .)
    CD              reduce using rule 29 (cmd -> IF PE exp PD cmd ELSE cmd .)
    ELSE            reduce using rule 29 (cmd -> IF PE exp PD cmd ELSE cmd .)


state 153

    (63) pexp -> pexp PONTO ID PE pexp2 PD .

    PONTO           reduce using rule 63 (pexp -> pexp PONTO ID PE pexp2 PD .)
    COLCE           reduce using rule 63 (pexp -> pexp PONTO ID PE pexp2 PD .)
    MULTIPLICA      reduce using rule 63 (pexp -> pexp PONTO ID PE pexp2 PD .)
    DIVIDE          reduce using rule 63 (pexp -> pexp PONTO ID PE pexp2 PD .)
    MAIS            reduce using rule 63 (pexp -> pexp PONTO ID PE pexp2 PD .)
    MENOS           reduce using rule 63 (pexp -> pexp PONTO ID PE pexp2 PD .)
    MENOR           reduce using rule 63 (pexp -> pexp PONTO ID PE pexp2 PD .)
    COMPARACAO      reduce using rule 63 (pexp -> pexp PONTO ID PE pexp2 PD .)
    DIFERENTE       reduce using rule 63 (pexp -> pexp PONTO ID PE pexp2 PD .)
    PONTOVIRGULA    reduce using rule 63 (pexp -> pexp PONTO ID PE pexp2 PD .)
    ECOMERCIAL      reduce using rule 63 (pexp -> pexp PONTO ID PE pexp2 PD .)
    COLCD           reduce using rule 63 (pexp -> pexp PONTO ID PE pexp2 PD .)
    PD              reduce using rule 63 (pexp -> pexp PONTO ID PE pexp2 PD .)
    VIRGULA         reduce using rule 63 (pexp -> pexp PONTO ID PE pexp2 PD .)


state 154

    (66) exps -> exp exps2 .

    PD              reduce using rule 66 (exps -> exp exps2 .)


state 155

    (67) exps2 -> VIRGULA . exp exps2
    (36) exp -> . exp ECOMERCIAL rexp
    (37) exp -> . rexp
    (38) rexp -> . rexp MENOR aexp
    (39) rexp -> . rexp COMPARACAO aexp
    (40) rexp -> . rexp DIFERENTE aexp
    (41) rexp -> . aexp
    (42) aexp -> . aexp MAIS mexp
    (43) aexp -> . aexp MENOS mexp
    (44) aexp -> . mexp
    (45) mexp -> . mexp MULTIPLICA sexp
    (46) mexp -> . mexp DIVIDE sexp
    (47) mexp -> . sexp
    (48) sexp -> . NEGACAO sexp
    (49) sexp -> . MENOS sexp
    (50) sexp -> . TRUE
    (51) sexp -> . FALSE
    (52) sexp -> . NUMERO
    (53) sexp -> . NULL
    (54) sexp -> . NEW INT COLCE exp COLCD
    (55) sexp -> . pexp PONTO LENGTH
    (56) sexp -> . pexp COLCE exp COLCD
    (57) sexp -> . pexp
    (58) pexp -> . ID
    (59) pexp -> . THIS
    (60) pexp -> . NEW ID PE PD
    (61) pexp -> . PE exp PD
    (62) pexp -> . pexp PONTO ID
    (63) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 84
    MENOS           shift and go to state 82
    TRUE            shift and go to state 85
    FALSE           shift and go to state 86
    NUMERO          shift and go to state 87
    NULL            shift and go to state 88
    NEW             shift and go to state 89
    ID              shift and go to state 77
    THIS            shift and go to state 91
    PE              shift and go to state 92

    exp                            shift and go to state 156
    rexp                           shift and go to state 79
    aexp                           shift and go to state 80
    mexp                           shift and go to state 81
    sexp                           shift and go to state 83
    pexp                           shift and go to state 90

state 156

    (67) exps2 -> VIRGULA exp . exps2
    (36) exp -> exp . ECOMERCIAL rexp
    (67) exps2 -> . VIRGULA exp exps2
    (68) exps2 -> .

    ECOMERCIAL      shift and go to state 102
    VIRGULA         shift and go to state 155
    PD              reduce using rule 68 (exps2 -> .)

    exps2                          shift and go to state 157

state 157

    (67) exps2 -> VIRGULA exp exps2 .

    PD              reduce using rule 67 (exps2 -> VIRGULA exp exps2 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 50 resolved as shift
WARNING: shift/reduce conflict for ID in state 54 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 138 resolved as shift
