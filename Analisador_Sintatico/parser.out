Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ASSERT
    BREAK
    BYTE
    CASE
    CATCH
    CHAR
    CONST
    CONTINUE
    DEFAULT
    DO
    DOUBLE
    ENUM
    FINAL
    FINALLY
    FLOAT
    FOR
    GOTO
    IMPLEMENTS
    IMPORT
    INSTANCEOF
    INTERFACE
    LONG
    MAIOR
    MAIORIGUAL
    MENORIGUAL
    NATIVE
    OUT
    PACKAGE
    PONTOPONTO
    PRINTLN
    PRIVATE
    PROTECTED
    SHORT
    STRICTFP
    SUPER
    SWITCH
    SYNCHRONIZED
    SYSTEM
    THROW
    THROWS
    TRANSIENT
    TRY
    VOLATILE

Grammar

Rule 0     S' -> prog
Rule 1     prog -> main prog2
Rule 2     prog2 -> class prog2
Rule 3     prog2 -> empty
Rule 4     main -> CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID PD CE cmd CD CD
Rule 5     class -> CLASS ID class2 CE class3 class4 CD
Rule 6     class2 -> EXTENDS ID
Rule 7     class2 -> empty
Rule 8     class3 -> var class3
Rule 9     class3 -> empty
Rule 10    class4 -> method class4
Rule 11    class4 -> empty
Rule 12    var -> type ID PONTOVIRGULA
Rule 13    method -> PUBLIC type ID PE method2 PD CE method3 method4 RETURN exp PONTOVIRGULA CD
Rule 14    method2 -> params
Rule 15    method2 -> empty
Rule 16    method3 -> var method3
Rule 17    method3 -> empty
Rule 18    method4 -> cmd method4
Rule 19    method4 -> empty
Rule 20    params -> type ID params2
Rule 21    params2 -> VIRGULA type ID params2
Rule 22    params2 -> empty
Rule 23    type -> INT COLCE COLCD
Rule 24    type -> BOOLEAN
Rule 25    type -> INT
Rule 26    cmd -> CE cmd2 CD
Rule 27    cmd -> IF PE exp PD cmd
Rule 28    cmd -> IF PE exp PD cmd ELSE cmd
Rule 29    cmd -> WHILE PE exp PD cmd
Rule 30    cmd -> SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA
Rule 31    cmd -> ID IGUAL exp PONTOVIRGULA
Rule 32    cmd -> ID COLCE exp COLCD IGUAL exp PONTOVIRGULA
Rule 33    cmd2 -> cmd cmd2
Rule 34    cmd2 -> empty
Rule 35    exp -> exp ECOMERCIAL rexp
Rule 36    exp -> rexp
Rule 37    rexp -> rexp MENOR aexp
Rule 38    rexp -> rexp COMPARACAO aexp
Rule 39    rexp -> rexp DIFERENTE aexp
Rule 40    rexp -> aexp
Rule 41    aexp -> aexp MAIS mexp
Rule 42    aexp -> aexp MENOS mexp
Rule 43    aexp -> mexp
Rule 44    mexp -> mexp MULTIPLICA sexp
Rule 45    mexp -> mexp DIVIDE sexp
Rule 46    mexp -> sexp
Rule 47    sexp -> NEGACAO sexp
Rule 48    sexp -> MENOS sexp
Rule 49    sexp -> TRUE
Rule 50    sexp -> FALSE
Rule 51    sexp -> NUMERO
Rule 52    sexp -> NULL
Rule 53    sexp -> NEW INT COLCE exp COLCD
Rule 54    sexp -> pexp PONTO LENGTH
Rule 55    sexp -> pexp COLCE exp COLCD
Rule 56    sexp -> pexp
Rule 57    pexp -> ID
Rule 58    pexp -> THIS
Rule 59    pexp -> NEW ID PE PD
Rule 60    pexp -> PE exp PD
Rule 61    pexp -> pexp PONTO ID
Rule 62    pexp -> pexp PONTO ID PE pexp2 PD
Rule 63    pexp2 -> exps
Rule 64    pexp2 -> empty
Rule 65    exps -> exp exps2
Rule 66    exps2 -> VIRGULA exp exps2
Rule 67    exps2 -> empty
Rule 68    empty -> <empty>

Terminals, with rules where they appear

ABSTRACT             : 
ASSERT               : 
BOOLEAN              : 24
BREAK                : 
BYTE                 : 
CASE                 : 
CATCH                : 
CD                   : 4 4 5 13 26
CE                   : 4 4 5 13 26
CHAR                 : 
CLASS                : 4 5
COLCD                : 4 23 32 53 55
COLCE                : 4 23 32 53 55
COMPARACAO           : 38
CONST                : 
CONTINUE             : 
DEFAULT              : 
DIFERENTE            : 39
DIVIDE               : 45
DO                   : 
DOUBLE               : 
ECOMERCIAL           : 35
ELSE                 : 28
ENUM                 : 
EXTENDS              : 6
FALSE                : 50
FINAL                : 
FINALLY              : 
FLOAT                : 
FOR                  : 
GOTO                 : 
ID                   : 4 4 5 6 12 13 20 21 31 32 57 59 61 62
IF                   : 27 28
IGUAL                : 31 32
IMPLEMENTS           : 
IMPORT               : 
INSTANCEOF           : 
INT                  : 23 25 53
INTERFACE            : 
LENGTH               : 54
LONG                 : 
MAIN                 : 4
MAIOR                : 
MAIORIGUAL           : 
MAIS                 : 41
MENOR                : 37
MENORIGUAL           : 
MENOS                : 42 48
MULTIPLICA           : 44
NATIVE               : 
NEGACAO              : 47
NEW                  : 53 59
NULL                 : 52
NUMERO               : 51
OUT                  : 
PACKAGE              : 
PD                   : 4 13 27 28 29 30 59 60 62
PE                   : 4 13 27 28 29 30 59 60 62
PONTO                : 54 61 62
PONTOPONTO           : 
PONTOVIRGULA         : 12 13 30 31 32
PRINTLN              : 
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 4 13
RETURN               : 13
SHORT                : 
STATIC               : 4
STRICTFP             : 
STRING               : 4
SUPER                : 
SWITCH               : 
SYNCHRONIZED         : 
SYSTEM               : 
SYSTEMOUTPRINTLN     : 30
THIS                 : 58
THROW                : 
THROWS               : 
TRANSIENT            : 
TRUE                 : 49
TRY                  : 
VIRGULA              : 21 66
VOID                 : 4
VOLATILE             : 
WHILE                : 29
error                : 

Nonterminals, with rules where they appear

aexp                 : 37 38 39 40 41 42
class                : 2
class2               : 5
class3               : 5 8
class4               : 5 10
cmd                  : 4 18 27 28 28 29 33
cmd2                 : 26 33
empty                : 3 7 9 11 15 17 19 22 34 64 67
exp                  : 13 27 28 29 30 31 32 32 35 53 55 60 65 66
exps                 : 63
exps2                : 65 66
main                 : 1
method               : 10
method2              : 13
method3              : 13 16
method4              : 13 18
mexp                 : 41 42 43 44 45
params               : 14
params2              : 20 21
pexp                 : 54 55 56 61 62
pexp2                : 62
prog                 : 0
prog2                : 1 2
rexp                 : 35 36 37 38 39
sexp                 : 44 45 46 47 48
type                 : 12 13 20 21
var                  : 8 16

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . main prog2
    (4) main -> . CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID PD CE cmd CD CD

    CLASS           shift and go to state 3

    prog                           shift and go to state 1
    main                           shift and go to state 2

state 1

    (0) S' -> prog .



state 2

    (1) prog -> main . prog2
    (2) prog2 -> . class prog2
    (3) prog2 -> . empty
    (5) class -> . CLASS ID class2 CE class3 class4 CD
    (68) empty -> .

    CLASS           shift and go to state 7
    $end            reduce using rule 68 (empty -> .)

    prog2                          shift and go to state 4
    class                          shift and go to state 5
    empty                          shift and go to state 6

state 3

    (4) main -> CLASS . ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID PD CE cmd CD CD

    ID              shift and go to state 8


state 4

    (1) prog -> main prog2 .

    $end            reduce using rule 1 (prog -> main prog2 .)


state 5

    (2) prog2 -> class . prog2
    (2) prog2 -> . class prog2
    (3) prog2 -> . empty
    (5) class -> . CLASS ID class2 CE class3 class4 CD
    (68) empty -> .

    CLASS           shift and go to state 7
    $end            reduce using rule 68 (empty -> .)

    class                          shift and go to state 5
    prog2                          shift and go to state 9
    empty                          shift and go to state 6

state 6

    (3) prog2 -> empty .

    $end            reduce using rule 3 (prog2 -> empty .)


state 7

    (5) class -> CLASS . ID class2 CE class3 class4 CD

    ID              shift and go to state 10


state 8

    (4) main -> CLASS ID . CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID PD CE cmd CD CD

    CE              shift and go to state 11


state 9

    (2) prog2 -> class prog2 .

    $end            reduce using rule 2 (prog2 -> class prog2 .)


state 10

    (5) class -> CLASS ID . class2 CE class3 class4 CD
    (6) class2 -> . EXTENDS ID
    (7) class2 -> . empty
    (68) empty -> .

    EXTENDS         shift and go to state 13
    CE              reduce using rule 68 (empty -> .)

    class2                         shift and go to state 12
    empty                          shift and go to state 14

state 11

    (4) main -> CLASS ID CE . PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID PD CE cmd CD CD

    PUBLIC          shift and go to state 15


state 12

    (5) class -> CLASS ID class2 . CE class3 class4 CD

    CE              shift and go to state 16


state 13

    (6) class2 -> EXTENDS . ID

    ID              shift and go to state 17


state 14

    (7) class2 -> empty .

    CE              reduce using rule 7 (class2 -> empty .)


state 15

    (4) main -> CLASS ID CE PUBLIC . STATIC VOID MAIN PE STRING COLCE COLCD ID PD CE cmd CD CD

    STATIC          shift and go to state 18


state 16

    (5) class -> CLASS ID class2 CE . class3 class4 CD
    (8) class3 -> . var class3
    (9) class3 -> . empty
    (12) var -> . type ID PONTOVIRGULA
    (68) empty -> .
    (23) type -> . INT COLCE COLCD
    (24) type -> . BOOLEAN
    (25) type -> . INT

    PUBLIC          reduce using rule 68 (empty -> .)
    CD              reduce using rule 68 (empty -> .)
    INT             shift and go to state 23
    BOOLEAN         shift and go to state 24

    class3                         shift and go to state 19
    var                            shift and go to state 20
    empty                          shift and go to state 21
    type                           shift and go to state 22

state 17

    (6) class2 -> EXTENDS ID .

    CE              reduce using rule 6 (class2 -> EXTENDS ID .)


state 18

    (4) main -> CLASS ID CE PUBLIC STATIC . VOID MAIN PE STRING COLCE COLCD ID PD CE cmd CD CD

    VOID            shift and go to state 25


state 19

    (5) class -> CLASS ID class2 CE class3 . class4 CD
    (10) class4 -> . method class4
    (11) class4 -> . empty
    (13) method -> . PUBLIC type ID PE method2 PD CE method3 method4 RETURN exp PONTOVIRGULA CD
    (68) empty -> .

    PUBLIC          shift and go to state 29
    CD              reduce using rule 68 (empty -> .)

    class4                         shift and go to state 26
    method                         shift and go to state 27
    empty                          shift and go to state 28

state 20

    (8) class3 -> var . class3
    (8) class3 -> . var class3
    (9) class3 -> . empty
    (12) var -> . type ID PONTOVIRGULA
    (68) empty -> .
    (23) type -> . INT COLCE COLCD
    (24) type -> . BOOLEAN
    (25) type -> . INT

    PUBLIC          reduce using rule 68 (empty -> .)
    CD              reduce using rule 68 (empty -> .)
    INT             shift and go to state 23
    BOOLEAN         shift and go to state 24

    var                            shift and go to state 20
    class3                         shift and go to state 30
    empty                          shift and go to state 21
    type                           shift and go to state 22

state 21

    (9) class3 -> empty .

    PUBLIC          reduce using rule 9 (class3 -> empty .)
    CD              reduce using rule 9 (class3 -> empty .)


state 22

    (12) var -> type . ID PONTOVIRGULA

    ID              shift and go to state 31


state 23

    (23) type -> INT . COLCE COLCD
    (25) type -> INT .

    COLCE           shift and go to state 32
    ID              reduce using rule 25 (type -> INT .)


state 24

    (24) type -> BOOLEAN .

    ID              reduce using rule 24 (type -> BOOLEAN .)


state 25

    (4) main -> CLASS ID CE PUBLIC STATIC VOID . MAIN PE STRING COLCE COLCD ID PD CE cmd CD CD

    MAIN            shift and go to state 33


state 26

    (5) class -> CLASS ID class2 CE class3 class4 . CD

    CD              shift and go to state 34


state 27

    (10) class4 -> method . class4
    (10) class4 -> . method class4
    (11) class4 -> . empty
    (13) method -> . PUBLIC type ID PE method2 PD CE method3 method4 RETURN exp PONTOVIRGULA CD
    (68) empty -> .

    PUBLIC          shift and go to state 29
    CD              reduce using rule 68 (empty -> .)

    method                         shift and go to state 27
    class4                         shift and go to state 35
    empty                          shift and go to state 28

state 28

    (11) class4 -> empty .

    CD              reduce using rule 11 (class4 -> empty .)


state 29

    (13) method -> PUBLIC . type ID PE method2 PD CE method3 method4 RETURN exp PONTOVIRGULA CD
    (23) type -> . INT COLCE COLCD
    (24) type -> . BOOLEAN
    (25) type -> . INT

    INT             shift and go to state 23
    BOOLEAN         shift and go to state 24

    type                           shift and go to state 36

state 30

    (8) class3 -> var class3 .

    PUBLIC          reduce using rule 8 (class3 -> var class3 .)
    CD              reduce using rule 8 (class3 -> var class3 .)


state 31

    (12) var -> type ID . PONTOVIRGULA

    PONTOVIRGULA    shift and go to state 37


state 32

    (23) type -> INT COLCE . COLCD

    COLCD           shift and go to state 38


state 33

    (4) main -> CLASS ID CE PUBLIC STATIC VOID MAIN . PE STRING COLCE COLCD ID PD CE cmd CD CD

    PE              shift and go to state 39


state 34

    (5) class -> CLASS ID class2 CE class3 class4 CD .

    CLASS           reduce using rule 5 (class -> CLASS ID class2 CE class3 class4 CD .)
    $end            reduce using rule 5 (class -> CLASS ID class2 CE class3 class4 CD .)


state 35

    (10) class4 -> method class4 .

    CD              reduce using rule 10 (class4 -> method class4 .)


state 36

    (13) method -> PUBLIC type . ID PE method2 PD CE method3 method4 RETURN exp PONTOVIRGULA CD

    ID              shift and go to state 40


state 37

    (12) var -> type ID PONTOVIRGULA .

    INT             reduce using rule 12 (var -> type ID PONTOVIRGULA .)
    BOOLEAN         reduce using rule 12 (var -> type ID PONTOVIRGULA .)
    PUBLIC          reduce using rule 12 (var -> type ID PONTOVIRGULA .)
    CD              reduce using rule 12 (var -> type ID PONTOVIRGULA .)
    CE              reduce using rule 12 (var -> type ID PONTOVIRGULA .)
    IF              reduce using rule 12 (var -> type ID PONTOVIRGULA .)
    WHILE           reduce using rule 12 (var -> type ID PONTOVIRGULA .)
    SYSTEMOUTPRINTLN reduce using rule 12 (var -> type ID PONTOVIRGULA .)
    ID              reduce using rule 12 (var -> type ID PONTOVIRGULA .)
    RETURN          reduce using rule 12 (var -> type ID PONTOVIRGULA .)


state 38

    (23) type -> INT COLCE COLCD .

    ID              reduce using rule 23 (type -> INT COLCE COLCD .)


state 39

    (4) main -> CLASS ID CE PUBLIC STATIC VOID MAIN PE . STRING COLCE COLCD ID PD CE cmd CD CD

    STRING          shift and go to state 41


state 40

    (13) method -> PUBLIC type ID . PE method2 PD CE method3 method4 RETURN exp PONTOVIRGULA CD

    PE              shift and go to state 42


state 41

    (4) main -> CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING . COLCE COLCD ID PD CE cmd CD CD

    COLCE           shift and go to state 43


state 42

    (13) method -> PUBLIC type ID PE . method2 PD CE method3 method4 RETURN exp PONTOVIRGULA CD
    (14) method2 -> . params
    (15) method2 -> . empty
    (20) params -> . type ID params2
    (68) empty -> .
    (23) type -> . INT COLCE COLCD
    (24) type -> . BOOLEAN
    (25) type -> . INT

    PD              reduce using rule 68 (empty -> .)
    INT             shift and go to state 23
    BOOLEAN         shift and go to state 24

    type                           shift and go to state 44
    method2                        shift and go to state 45
    params                         shift and go to state 46
    empty                          shift and go to state 47

state 43

    (4) main -> CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE . COLCD ID PD CE cmd CD CD

    COLCD           shift and go to state 48


state 44

    (20) params -> type . ID params2

    ID              shift and go to state 49


state 45

    (13) method -> PUBLIC type ID PE method2 . PD CE method3 method4 RETURN exp PONTOVIRGULA CD

    PD              shift and go to state 50


state 46

    (14) method2 -> params .

    PD              reduce using rule 14 (method2 -> params .)


state 47

    (15) method2 -> empty .

    PD              reduce using rule 15 (method2 -> empty .)


state 48

    (4) main -> CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD . ID PD CE cmd CD CD

    ID              shift and go to state 51


state 49

    (20) params -> type ID . params2
    (21) params2 -> . VIRGULA type ID params2
    (22) params2 -> . empty
    (68) empty -> .

    VIRGULA         shift and go to state 53
    PD              reduce using rule 68 (empty -> .)

    params2                        shift and go to state 52
    empty                          shift and go to state 54

state 50

    (13) method -> PUBLIC type ID PE method2 PD . CE method3 method4 RETURN exp PONTOVIRGULA CD

    CE              shift and go to state 55


state 51

    (4) main -> CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID . PD CE cmd CD CD

    PD              shift and go to state 56


state 52

    (20) params -> type ID params2 .

    PD              reduce using rule 20 (params -> type ID params2 .)


state 53

    (21) params2 -> VIRGULA . type ID params2
    (23) type -> . INT COLCE COLCD
    (24) type -> . BOOLEAN
    (25) type -> . INT

    INT             shift and go to state 23
    BOOLEAN         shift and go to state 24

    type                           shift and go to state 57

state 54

    (22) params2 -> empty .

    PD              reduce using rule 22 (params2 -> empty .)


state 55

    (13) method -> PUBLIC type ID PE method2 PD CE . method3 method4 RETURN exp PONTOVIRGULA CD
    (16) method3 -> . var method3
    (17) method3 -> . empty
    (12) var -> . type ID PONTOVIRGULA
    (68) empty -> .
    (23) type -> . INT COLCE COLCD
    (24) type -> . BOOLEAN
    (25) type -> . INT

    CE              reduce using rule 68 (empty -> .)
    IF              reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    SYSTEMOUTPRINTLN reduce using rule 68 (empty -> .)
    ID              reduce using rule 68 (empty -> .)
    RETURN          reduce using rule 68 (empty -> .)
    INT             shift and go to state 23
    BOOLEAN         shift and go to state 24

    type                           shift and go to state 22
    method3                        shift and go to state 58
    var                            shift and go to state 59
    empty                          shift and go to state 60

state 56

    (4) main -> CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID PD . CE cmd CD CD

    CE              shift and go to state 61


state 57

    (21) params2 -> VIRGULA type . ID params2

    ID              shift and go to state 62


state 58

    (13) method -> PUBLIC type ID PE method2 PD CE method3 . method4 RETURN exp PONTOVIRGULA CD
    (18) method4 -> . cmd method4
    (19) method4 -> . empty
    (26) cmd -> . CE cmd2 CD
    (27) cmd -> . IF PE exp PD cmd
    (28) cmd -> . IF PE exp PD cmd ELSE cmd
    (29) cmd -> . WHILE PE exp PD cmd
    (30) cmd -> . SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA
    (31) cmd -> . ID IGUAL exp PONTOVIRGULA
    (32) cmd -> . ID COLCE exp COLCD IGUAL exp PONTOVIRGULA
    (68) empty -> .

    CE              shift and go to state 64
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    SYSTEMOUTPRINTLN shift and go to state 70
    ID              shift and go to state 63
    RETURN          reduce using rule 68 (empty -> .)

    method4                        shift and go to state 65
    cmd                            shift and go to state 66
    empty                          shift and go to state 67

state 59

    (16) method3 -> var . method3
    (16) method3 -> . var method3
    (17) method3 -> . empty
    (12) var -> . type ID PONTOVIRGULA
    (68) empty -> .
    (23) type -> . INT COLCE COLCD
    (24) type -> . BOOLEAN
    (25) type -> . INT

    CE              reduce using rule 68 (empty -> .)
    IF              reduce using rule 68 (empty -> .)
    WHILE           reduce using rule 68 (empty -> .)
    SYSTEMOUTPRINTLN reduce using rule 68 (empty -> .)
    ID              reduce using rule 68 (empty -> .)
    RETURN          reduce using rule 68 (empty -> .)
    INT             shift and go to state 23
    BOOLEAN         shift and go to state 24

    var                            shift and go to state 59
    method3                        shift and go to state 71
    empty                          shift and go to state 60
    type                           shift and go to state 22

state 60

    (17) method3 -> empty .

    CE              reduce using rule 17 (method3 -> empty .)
    IF              reduce using rule 17 (method3 -> empty .)
    WHILE           reduce using rule 17 (method3 -> empty .)
    SYSTEMOUTPRINTLN reduce using rule 17 (method3 -> empty .)
    ID              reduce using rule 17 (method3 -> empty .)
    RETURN          reduce using rule 17 (method3 -> empty .)


state 61

    (4) main -> CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID PD CE . cmd CD CD
    (26) cmd -> . CE cmd2 CD
    (27) cmd -> . IF PE exp PD cmd
    (28) cmd -> . IF PE exp PD cmd ELSE cmd
    (29) cmd -> . WHILE PE exp PD cmd
    (30) cmd -> . SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA
    (31) cmd -> . ID IGUAL exp PONTOVIRGULA
    (32) cmd -> . ID COLCE exp COLCD IGUAL exp PONTOVIRGULA

    CE              shift and go to state 64
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    SYSTEMOUTPRINTLN shift and go to state 70
    ID              shift and go to state 63

    cmd                            shift and go to state 72

state 62

    (21) params2 -> VIRGULA type ID . params2
    (21) params2 -> . VIRGULA type ID params2
    (22) params2 -> . empty
    (68) empty -> .

    VIRGULA         shift and go to state 53
    PD              reduce using rule 68 (empty -> .)

    params2                        shift and go to state 73
    empty                          shift and go to state 54

state 63

    (31) cmd -> ID . IGUAL exp PONTOVIRGULA
    (32) cmd -> ID . COLCE exp COLCD IGUAL exp PONTOVIRGULA

    IGUAL           shift and go to state 74
    COLCE           shift and go to state 75


state 64

    (26) cmd -> CE . cmd2 CD
    (33) cmd2 -> . cmd cmd2
    (34) cmd2 -> . empty
    (26) cmd -> . CE cmd2 CD
    (27) cmd -> . IF PE exp PD cmd
    (28) cmd -> . IF PE exp PD cmd ELSE cmd
    (29) cmd -> . WHILE PE exp PD cmd
    (30) cmd -> . SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA
    (31) cmd -> . ID IGUAL exp PONTOVIRGULA
    (32) cmd -> . ID COLCE exp COLCD IGUAL exp PONTOVIRGULA
    (68) empty -> .

    CE              shift and go to state 64
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    SYSTEMOUTPRINTLN shift and go to state 70
    ID              shift and go to state 63
    CD              reduce using rule 68 (empty -> .)

    cmd2                           shift and go to state 76
    cmd                            shift and go to state 77
    empty                          shift and go to state 78

state 65

    (13) method -> PUBLIC type ID PE method2 PD CE method3 method4 . RETURN exp PONTOVIRGULA CD

    RETURN          shift and go to state 79


state 66

    (18) method4 -> cmd . method4
    (18) method4 -> . cmd method4
    (19) method4 -> . empty
    (26) cmd -> . CE cmd2 CD
    (27) cmd -> . IF PE exp PD cmd
    (28) cmd -> . IF PE exp PD cmd ELSE cmd
    (29) cmd -> . WHILE PE exp PD cmd
    (30) cmd -> . SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA
    (31) cmd -> . ID IGUAL exp PONTOVIRGULA
    (32) cmd -> . ID COLCE exp COLCD IGUAL exp PONTOVIRGULA
    (68) empty -> .

    CE              shift and go to state 64
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    SYSTEMOUTPRINTLN shift and go to state 70
    ID              shift and go to state 63
    RETURN          reduce using rule 68 (empty -> .)

    cmd                            shift and go to state 66
    method4                        shift and go to state 80
    empty                          shift and go to state 67

state 67

    (19) method4 -> empty .

    RETURN          reduce using rule 19 (method4 -> empty .)


state 68

    (27) cmd -> IF . PE exp PD cmd
    (28) cmd -> IF . PE exp PD cmd ELSE cmd

    PE              shift and go to state 81


state 69

    (29) cmd -> WHILE . PE exp PD cmd

    PE              shift and go to state 82


state 70

    (30) cmd -> SYSTEMOUTPRINTLN . PE exp PD PONTOVIRGULA

    PE              shift and go to state 83


state 71

    (16) method3 -> var method3 .

    CE              reduce using rule 16 (method3 -> var method3 .)
    IF              reduce using rule 16 (method3 -> var method3 .)
    WHILE           reduce using rule 16 (method3 -> var method3 .)
    SYSTEMOUTPRINTLN reduce using rule 16 (method3 -> var method3 .)
    ID              reduce using rule 16 (method3 -> var method3 .)
    RETURN          reduce using rule 16 (method3 -> var method3 .)


state 72

    (4) main -> CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID PD CE cmd . CD CD

    CD              shift and go to state 84


state 73

    (21) params2 -> VIRGULA type ID params2 .

    PD              reduce using rule 21 (params2 -> VIRGULA type ID params2 .)


state 74

    (31) cmd -> ID IGUAL . exp PONTOVIRGULA
    (35) exp -> . exp ECOMERCIAL rexp
    (36) exp -> . rexp
    (37) rexp -> . rexp MENOR aexp
    (38) rexp -> . rexp COMPARACAO aexp
    (39) rexp -> . rexp DIFERENTE aexp
    (40) rexp -> . aexp
    (41) aexp -> . aexp MAIS mexp
    (42) aexp -> . aexp MENOS mexp
    (43) aexp -> . mexp
    (44) mexp -> . mexp MULTIPLICA sexp
    (45) mexp -> . mexp DIVIDE sexp
    (46) mexp -> . sexp
    (47) sexp -> . NEGACAO sexp
    (48) sexp -> . MENOS sexp
    (49) sexp -> . TRUE
    (50) sexp -> . FALSE
    (51) sexp -> . NUMERO
    (52) sexp -> . NULL
    (53) sexp -> . NEW INT COLCE exp COLCD
    (54) sexp -> . pexp PONTO LENGTH
    (55) sexp -> . pexp COLCE exp COLCD
    (56) sexp -> . pexp
    (57) pexp -> . ID
    (58) pexp -> . THIS
    (59) pexp -> . NEW ID PE PD
    (60) pexp -> . PE exp PD
    (61) pexp -> . pexp PONTO ID
    (62) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 92
    MENOS           shift and go to state 90
    TRUE            shift and go to state 93
    FALSE           shift and go to state 94
    NUMERO          shift and go to state 95
    NULL            shift and go to state 96
    NEW             shift and go to state 97
    ID              shift and go to state 85
    THIS            shift and go to state 99
    PE              shift and go to state 100

    exp                            shift and go to state 86
    rexp                           shift and go to state 87
    aexp                           shift and go to state 88
    mexp                           shift and go to state 89
    sexp                           shift and go to state 91
    pexp                           shift and go to state 98

state 75

    (32) cmd -> ID COLCE . exp COLCD IGUAL exp PONTOVIRGULA
    (35) exp -> . exp ECOMERCIAL rexp
    (36) exp -> . rexp
    (37) rexp -> . rexp MENOR aexp
    (38) rexp -> . rexp COMPARACAO aexp
    (39) rexp -> . rexp DIFERENTE aexp
    (40) rexp -> . aexp
    (41) aexp -> . aexp MAIS mexp
    (42) aexp -> . aexp MENOS mexp
    (43) aexp -> . mexp
    (44) mexp -> . mexp MULTIPLICA sexp
    (45) mexp -> . mexp DIVIDE sexp
    (46) mexp -> . sexp
    (47) sexp -> . NEGACAO sexp
    (48) sexp -> . MENOS sexp
    (49) sexp -> . TRUE
    (50) sexp -> . FALSE
    (51) sexp -> . NUMERO
    (52) sexp -> . NULL
    (53) sexp -> . NEW INT COLCE exp COLCD
    (54) sexp -> . pexp PONTO LENGTH
    (55) sexp -> . pexp COLCE exp COLCD
    (56) sexp -> . pexp
    (57) pexp -> . ID
    (58) pexp -> . THIS
    (59) pexp -> . NEW ID PE PD
    (60) pexp -> . PE exp PD
    (61) pexp -> . pexp PONTO ID
    (62) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 92
    MENOS           shift and go to state 90
    TRUE            shift and go to state 93
    FALSE           shift and go to state 94
    NUMERO          shift and go to state 95
    NULL            shift and go to state 96
    NEW             shift and go to state 97
    ID              shift and go to state 85
    THIS            shift and go to state 99
    PE              shift and go to state 100

    exp                            shift and go to state 101
    rexp                           shift and go to state 87
    aexp                           shift and go to state 88
    mexp                           shift and go to state 89
    sexp                           shift and go to state 91
    pexp                           shift and go to state 98

state 76

    (26) cmd -> CE cmd2 . CD

    CD              shift and go to state 102


state 77

    (33) cmd2 -> cmd . cmd2
    (33) cmd2 -> . cmd cmd2
    (34) cmd2 -> . empty
    (26) cmd -> . CE cmd2 CD
    (27) cmd -> . IF PE exp PD cmd
    (28) cmd -> . IF PE exp PD cmd ELSE cmd
    (29) cmd -> . WHILE PE exp PD cmd
    (30) cmd -> . SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA
    (31) cmd -> . ID IGUAL exp PONTOVIRGULA
    (32) cmd -> . ID COLCE exp COLCD IGUAL exp PONTOVIRGULA
    (68) empty -> .

    CE              shift and go to state 64
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    SYSTEMOUTPRINTLN shift and go to state 70
    ID              shift and go to state 63
    CD              reduce using rule 68 (empty -> .)

    cmd                            shift and go to state 77
    cmd2                           shift and go to state 103
    empty                          shift and go to state 78

state 78

    (34) cmd2 -> empty .

    CD              reduce using rule 34 (cmd2 -> empty .)


state 79

    (13) method -> PUBLIC type ID PE method2 PD CE method3 method4 RETURN . exp PONTOVIRGULA CD
    (35) exp -> . exp ECOMERCIAL rexp
    (36) exp -> . rexp
    (37) rexp -> . rexp MENOR aexp
    (38) rexp -> . rexp COMPARACAO aexp
    (39) rexp -> . rexp DIFERENTE aexp
    (40) rexp -> . aexp
    (41) aexp -> . aexp MAIS mexp
    (42) aexp -> . aexp MENOS mexp
    (43) aexp -> . mexp
    (44) mexp -> . mexp MULTIPLICA sexp
    (45) mexp -> . mexp DIVIDE sexp
    (46) mexp -> . sexp
    (47) sexp -> . NEGACAO sexp
    (48) sexp -> . MENOS sexp
    (49) sexp -> . TRUE
    (50) sexp -> . FALSE
    (51) sexp -> . NUMERO
    (52) sexp -> . NULL
    (53) sexp -> . NEW INT COLCE exp COLCD
    (54) sexp -> . pexp PONTO LENGTH
    (55) sexp -> . pexp COLCE exp COLCD
    (56) sexp -> . pexp
    (57) pexp -> . ID
    (58) pexp -> . THIS
    (59) pexp -> . NEW ID PE PD
    (60) pexp -> . PE exp PD
    (61) pexp -> . pexp PONTO ID
    (62) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 92
    MENOS           shift and go to state 90
    TRUE            shift and go to state 93
    FALSE           shift and go to state 94
    NUMERO          shift and go to state 95
    NULL            shift and go to state 96
    NEW             shift and go to state 97
    ID              shift and go to state 85
    THIS            shift and go to state 99
    PE              shift and go to state 100

    exp                            shift and go to state 104
    rexp                           shift and go to state 87
    aexp                           shift and go to state 88
    mexp                           shift and go to state 89
    sexp                           shift and go to state 91
    pexp                           shift and go to state 98

state 80

    (18) method4 -> cmd method4 .

    RETURN          reduce using rule 18 (method4 -> cmd method4 .)


state 81

    (27) cmd -> IF PE . exp PD cmd
    (28) cmd -> IF PE . exp PD cmd ELSE cmd
    (35) exp -> . exp ECOMERCIAL rexp
    (36) exp -> . rexp
    (37) rexp -> . rexp MENOR aexp
    (38) rexp -> . rexp COMPARACAO aexp
    (39) rexp -> . rexp DIFERENTE aexp
    (40) rexp -> . aexp
    (41) aexp -> . aexp MAIS mexp
    (42) aexp -> . aexp MENOS mexp
    (43) aexp -> . mexp
    (44) mexp -> . mexp MULTIPLICA sexp
    (45) mexp -> . mexp DIVIDE sexp
    (46) mexp -> . sexp
    (47) sexp -> . NEGACAO sexp
    (48) sexp -> . MENOS sexp
    (49) sexp -> . TRUE
    (50) sexp -> . FALSE
    (51) sexp -> . NUMERO
    (52) sexp -> . NULL
    (53) sexp -> . NEW INT COLCE exp COLCD
    (54) sexp -> . pexp PONTO LENGTH
    (55) sexp -> . pexp COLCE exp COLCD
    (56) sexp -> . pexp
    (57) pexp -> . ID
    (58) pexp -> . THIS
    (59) pexp -> . NEW ID PE PD
    (60) pexp -> . PE exp PD
    (61) pexp -> . pexp PONTO ID
    (62) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 92
    MENOS           shift and go to state 90
    TRUE            shift and go to state 93
    FALSE           shift and go to state 94
    NUMERO          shift and go to state 95
    NULL            shift and go to state 96
    NEW             shift and go to state 97
    ID              shift and go to state 85
    THIS            shift and go to state 99
    PE              shift and go to state 100

    exp                            shift and go to state 105
    rexp                           shift and go to state 87
    aexp                           shift and go to state 88
    mexp                           shift and go to state 89
    sexp                           shift and go to state 91
    pexp                           shift and go to state 98

state 82

    (29) cmd -> WHILE PE . exp PD cmd
    (35) exp -> . exp ECOMERCIAL rexp
    (36) exp -> . rexp
    (37) rexp -> . rexp MENOR aexp
    (38) rexp -> . rexp COMPARACAO aexp
    (39) rexp -> . rexp DIFERENTE aexp
    (40) rexp -> . aexp
    (41) aexp -> . aexp MAIS mexp
    (42) aexp -> . aexp MENOS mexp
    (43) aexp -> . mexp
    (44) mexp -> . mexp MULTIPLICA sexp
    (45) mexp -> . mexp DIVIDE sexp
    (46) mexp -> . sexp
    (47) sexp -> . NEGACAO sexp
    (48) sexp -> . MENOS sexp
    (49) sexp -> . TRUE
    (50) sexp -> . FALSE
    (51) sexp -> . NUMERO
    (52) sexp -> . NULL
    (53) sexp -> . NEW INT COLCE exp COLCD
    (54) sexp -> . pexp PONTO LENGTH
    (55) sexp -> . pexp COLCE exp COLCD
    (56) sexp -> . pexp
    (57) pexp -> . ID
    (58) pexp -> . THIS
    (59) pexp -> . NEW ID PE PD
    (60) pexp -> . PE exp PD
    (61) pexp -> . pexp PONTO ID
    (62) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 92
    MENOS           shift and go to state 90
    TRUE            shift and go to state 93
    FALSE           shift and go to state 94
    NUMERO          shift and go to state 95
    NULL            shift and go to state 96
    NEW             shift and go to state 97
    ID              shift and go to state 85
    THIS            shift and go to state 99
    PE              shift and go to state 100

    exp                            shift and go to state 106
    rexp                           shift and go to state 87
    aexp                           shift and go to state 88
    mexp                           shift and go to state 89
    sexp                           shift and go to state 91
    pexp                           shift and go to state 98

state 83

    (30) cmd -> SYSTEMOUTPRINTLN PE . exp PD PONTOVIRGULA
    (35) exp -> . exp ECOMERCIAL rexp
    (36) exp -> . rexp
    (37) rexp -> . rexp MENOR aexp
    (38) rexp -> . rexp COMPARACAO aexp
    (39) rexp -> . rexp DIFERENTE aexp
    (40) rexp -> . aexp
    (41) aexp -> . aexp MAIS mexp
    (42) aexp -> . aexp MENOS mexp
    (43) aexp -> . mexp
    (44) mexp -> . mexp MULTIPLICA sexp
    (45) mexp -> . mexp DIVIDE sexp
    (46) mexp -> . sexp
    (47) sexp -> . NEGACAO sexp
    (48) sexp -> . MENOS sexp
    (49) sexp -> . TRUE
    (50) sexp -> . FALSE
    (51) sexp -> . NUMERO
    (52) sexp -> . NULL
    (53) sexp -> . NEW INT COLCE exp COLCD
    (54) sexp -> . pexp PONTO LENGTH
    (55) sexp -> . pexp COLCE exp COLCD
    (56) sexp -> . pexp
    (57) pexp -> . ID
    (58) pexp -> . THIS
    (59) pexp -> . NEW ID PE PD
    (60) pexp -> . PE exp PD
    (61) pexp -> . pexp PONTO ID
    (62) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 92
    MENOS           shift and go to state 90
    TRUE            shift and go to state 93
    FALSE           shift and go to state 94
    NUMERO          shift and go to state 95
    NULL            shift and go to state 96
    NEW             shift and go to state 97
    ID              shift and go to state 85
    THIS            shift and go to state 99
    PE              shift and go to state 100

    exp                            shift and go to state 107
    rexp                           shift and go to state 87
    aexp                           shift and go to state 88
    mexp                           shift and go to state 89
    sexp                           shift and go to state 91
    pexp                           shift and go to state 98

state 84

    (4) main -> CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID PD CE cmd CD . CD

    CD              shift and go to state 108


state 85

    (57) pexp -> ID .

    PONTO           reduce using rule 57 (pexp -> ID .)
    COLCE           reduce using rule 57 (pexp -> ID .)
    MULTIPLICA      reduce using rule 57 (pexp -> ID .)
    DIVIDE          reduce using rule 57 (pexp -> ID .)
    MAIS            reduce using rule 57 (pexp -> ID .)
    MENOS           reduce using rule 57 (pexp -> ID .)
    MENOR           reduce using rule 57 (pexp -> ID .)
    COMPARACAO      reduce using rule 57 (pexp -> ID .)
    DIFERENTE       reduce using rule 57 (pexp -> ID .)
    PONTOVIRGULA    reduce using rule 57 (pexp -> ID .)
    ECOMERCIAL      reduce using rule 57 (pexp -> ID .)
    COLCD           reduce using rule 57 (pexp -> ID .)
    PD              reduce using rule 57 (pexp -> ID .)
    VIRGULA         reduce using rule 57 (pexp -> ID .)


state 86

    (31) cmd -> ID IGUAL exp . PONTOVIRGULA
    (35) exp -> exp . ECOMERCIAL rexp

    PONTOVIRGULA    shift and go to state 109
    ECOMERCIAL      shift and go to state 110


state 87

    (36) exp -> rexp .
    (37) rexp -> rexp . MENOR aexp
    (38) rexp -> rexp . COMPARACAO aexp
    (39) rexp -> rexp . DIFERENTE aexp

    PONTOVIRGULA    reduce using rule 36 (exp -> rexp .)
    ECOMERCIAL      reduce using rule 36 (exp -> rexp .)
    COLCD           reduce using rule 36 (exp -> rexp .)
    PD              reduce using rule 36 (exp -> rexp .)
    VIRGULA         reduce using rule 36 (exp -> rexp .)
    MENOR           shift and go to state 111
    COMPARACAO      shift and go to state 112
    DIFERENTE       shift and go to state 113


state 88

    (40) rexp -> aexp .
    (41) aexp -> aexp . MAIS mexp
    (42) aexp -> aexp . MENOS mexp

    MENOR           reduce using rule 40 (rexp -> aexp .)
    COMPARACAO      reduce using rule 40 (rexp -> aexp .)
    DIFERENTE       reduce using rule 40 (rexp -> aexp .)
    PONTOVIRGULA    reduce using rule 40 (rexp -> aexp .)
    ECOMERCIAL      reduce using rule 40 (rexp -> aexp .)
    COLCD           reduce using rule 40 (rexp -> aexp .)
    PD              reduce using rule 40 (rexp -> aexp .)
    VIRGULA         reduce using rule 40 (rexp -> aexp .)
    MAIS            shift and go to state 114
    MENOS           shift and go to state 115


state 89

    (43) aexp -> mexp .
    (44) mexp -> mexp . MULTIPLICA sexp
    (45) mexp -> mexp . DIVIDE sexp

    MAIS            reduce using rule 43 (aexp -> mexp .)
    MENOS           reduce using rule 43 (aexp -> mexp .)
    MENOR           reduce using rule 43 (aexp -> mexp .)
    COMPARACAO      reduce using rule 43 (aexp -> mexp .)
    DIFERENTE       reduce using rule 43 (aexp -> mexp .)
    PONTOVIRGULA    reduce using rule 43 (aexp -> mexp .)
    ECOMERCIAL      reduce using rule 43 (aexp -> mexp .)
    COLCD           reduce using rule 43 (aexp -> mexp .)
    PD              reduce using rule 43 (aexp -> mexp .)
    VIRGULA         reduce using rule 43 (aexp -> mexp .)
    MULTIPLICA      shift and go to state 116
    DIVIDE          shift and go to state 117


state 90

    (48) sexp -> MENOS . sexp
    (47) sexp -> . NEGACAO sexp
    (48) sexp -> . MENOS sexp
    (49) sexp -> . TRUE
    (50) sexp -> . FALSE
    (51) sexp -> . NUMERO
    (52) sexp -> . NULL
    (53) sexp -> . NEW INT COLCE exp COLCD
    (54) sexp -> . pexp PONTO LENGTH
    (55) sexp -> . pexp COLCE exp COLCD
    (56) sexp -> . pexp
    (57) pexp -> . ID
    (58) pexp -> . THIS
    (59) pexp -> . NEW ID PE PD
    (60) pexp -> . PE exp PD
    (61) pexp -> . pexp PONTO ID
    (62) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 92
    MENOS           shift and go to state 90
    TRUE            shift and go to state 93
    FALSE           shift and go to state 94
    NUMERO          shift and go to state 95
    NULL            shift and go to state 96
    NEW             shift and go to state 97
    ID              shift and go to state 85
    THIS            shift and go to state 99
    PE              shift and go to state 100

    sexp                           shift and go to state 118
    pexp                           shift and go to state 98

state 91

    (46) mexp -> sexp .

    MULTIPLICA      reduce using rule 46 (mexp -> sexp .)
    DIVIDE          reduce using rule 46 (mexp -> sexp .)
    MAIS            reduce using rule 46 (mexp -> sexp .)
    MENOS           reduce using rule 46 (mexp -> sexp .)
    MENOR           reduce using rule 46 (mexp -> sexp .)
    COMPARACAO      reduce using rule 46 (mexp -> sexp .)
    DIFERENTE       reduce using rule 46 (mexp -> sexp .)
    PONTOVIRGULA    reduce using rule 46 (mexp -> sexp .)
    ECOMERCIAL      reduce using rule 46 (mexp -> sexp .)
    COLCD           reduce using rule 46 (mexp -> sexp .)
    PD              reduce using rule 46 (mexp -> sexp .)
    VIRGULA         reduce using rule 46 (mexp -> sexp .)


state 92

    (47) sexp -> NEGACAO . sexp
    (47) sexp -> . NEGACAO sexp
    (48) sexp -> . MENOS sexp
    (49) sexp -> . TRUE
    (50) sexp -> . FALSE
    (51) sexp -> . NUMERO
    (52) sexp -> . NULL
    (53) sexp -> . NEW INT COLCE exp COLCD
    (54) sexp -> . pexp PONTO LENGTH
    (55) sexp -> . pexp COLCE exp COLCD
    (56) sexp -> . pexp
    (57) pexp -> . ID
    (58) pexp -> . THIS
    (59) pexp -> . NEW ID PE PD
    (60) pexp -> . PE exp PD
    (61) pexp -> . pexp PONTO ID
    (62) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 92
    MENOS           shift and go to state 90
    TRUE            shift and go to state 93
    FALSE           shift and go to state 94
    NUMERO          shift and go to state 95
    NULL            shift and go to state 96
    NEW             shift and go to state 97
    ID              shift and go to state 85
    THIS            shift and go to state 99
    PE              shift and go to state 100

    sexp                           shift and go to state 119
    pexp                           shift and go to state 98

state 93

    (49) sexp -> TRUE .

    MULTIPLICA      reduce using rule 49 (sexp -> TRUE .)
    DIVIDE          reduce using rule 49 (sexp -> TRUE .)
    MAIS            reduce using rule 49 (sexp -> TRUE .)
    MENOS           reduce using rule 49 (sexp -> TRUE .)
    MENOR           reduce using rule 49 (sexp -> TRUE .)
    COMPARACAO      reduce using rule 49 (sexp -> TRUE .)
    DIFERENTE       reduce using rule 49 (sexp -> TRUE .)
    PONTOVIRGULA    reduce using rule 49 (sexp -> TRUE .)
    ECOMERCIAL      reduce using rule 49 (sexp -> TRUE .)
    COLCD           reduce using rule 49 (sexp -> TRUE .)
    PD              reduce using rule 49 (sexp -> TRUE .)
    VIRGULA         reduce using rule 49 (sexp -> TRUE .)


state 94

    (50) sexp -> FALSE .

    MULTIPLICA      reduce using rule 50 (sexp -> FALSE .)
    DIVIDE          reduce using rule 50 (sexp -> FALSE .)
    MAIS            reduce using rule 50 (sexp -> FALSE .)
    MENOS           reduce using rule 50 (sexp -> FALSE .)
    MENOR           reduce using rule 50 (sexp -> FALSE .)
    COMPARACAO      reduce using rule 50 (sexp -> FALSE .)
    DIFERENTE       reduce using rule 50 (sexp -> FALSE .)
    PONTOVIRGULA    reduce using rule 50 (sexp -> FALSE .)
    ECOMERCIAL      reduce using rule 50 (sexp -> FALSE .)
    COLCD           reduce using rule 50 (sexp -> FALSE .)
    PD              reduce using rule 50 (sexp -> FALSE .)
    VIRGULA         reduce using rule 50 (sexp -> FALSE .)


state 95

    (51) sexp -> NUMERO .

    MULTIPLICA      reduce using rule 51 (sexp -> NUMERO .)
    DIVIDE          reduce using rule 51 (sexp -> NUMERO .)
    MAIS            reduce using rule 51 (sexp -> NUMERO .)
    MENOS           reduce using rule 51 (sexp -> NUMERO .)
    MENOR           reduce using rule 51 (sexp -> NUMERO .)
    COMPARACAO      reduce using rule 51 (sexp -> NUMERO .)
    DIFERENTE       reduce using rule 51 (sexp -> NUMERO .)
    PONTOVIRGULA    reduce using rule 51 (sexp -> NUMERO .)
    ECOMERCIAL      reduce using rule 51 (sexp -> NUMERO .)
    COLCD           reduce using rule 51 (sexp -> NUMERO .)
    PD              reduce using rule 51 (sexp -> NUMERO .)
    VIRGULA         reduce using rule 51 (sexp -> NUMERO .)


state 96

    (52) sexp -> NULL .

    MULTIPLICA      reduce using rule 52 (sexp -> NULL .)
    DIVIDE          reduce using rule 52 (sexp -> NULL .)
    MAIS            reduce using rule 52 (sexp -> NULL .)
    MENOS           reduce using rule 52 (sexp -> NULL .)
    MENOR           reduce using rule 52 (sexp -> NULL .)
    COMPARACAO      reduce using rule 52 (sexp -> NULL .)
    DIFERENTE       reduce using rule 52 (sexp -> NULL .)
    PONTOVIRGULA    reduce using rule 52 (sexp -> NULL .)
    ECOMERCIAL      reduce using rule 52 (sexp -> NULL .)
    COLCD           reduce using rule 52 (sexp -> NULL .)
    PD              reduce using rule 52 (sexp -> NULL .)
    VIRGULA         reduce using rule 52 (sexp -> NULL .)


state 97

    (53) sexp -> NEW . INT COLCE exp COLCD
    (59) pexp -> NEW . ID PE PD

    INT             shift and go to state 120
    ID              shift and go to state 121


state 98

    (54) sexp -> pexp . PONTO LENGTH
    (55) sexp -> pexp . COLCE exp COLCD
    (56) sexp -> pexp .
    (61) pexp -> pexp . PONTO ID
    (62) pexp -> pexp . PONTO ID PE pexp2 PD

    PONTO           shift and go to state 122
    COLCE           shift and go to state 123
    MULTIPLICA      reduce using rule 56 (sexp -> pexp .)
    DIVIDE          reduce using rule 56 (sexp -> pexp .)
    MAIS            reduce using rule 56 (sexp -> pexp .)
    MENOS           reduce using rule 56 (sexp -> pexp .)
    MENOR           reduce using rule 56 (sexp -> pexp .)
    COMPARACAO      reduce using rule 56 (sexp -> pexp .)
    DIFERENTE       reduce using rule 56 (sexp -> pexp .)
    PONTOVIRGULA    reduce using rule 56 (sexp -> pexp .)
    ECOMERCIAL      reduce using rule 56 (sexp -> pexp .)
    COLCD           reduce using rule 56 (sexp -> pexp .)
    PD              reduce using rule 56 (sexp -> pexp .)
    VIRGULA         reduce using rule 56 (sexp -> pexp .)


state 99

    (58) pexp -> THIS .

    PONTO           reduce using rule 58 (pexp -> THIS .)
    COLCE           reduce using rule 58 (pexp -> THIS .)
    MULTIPLICA      reduce using rule 58 (pexp -> THIS .)
    DIVIDE          reduce using rule 58 (pexp -> THIS .)
    MAIS            reduce using rule 58 (pexp -> THIS .)
    MENOS           reduce using rule 58 (pexp -> THIS .)
    MENOR           reduce using rule 58 (pexp -> THIS .)
    COMPARACAO      reduce using rule 58 (pexp -> THIS .)
    DIFERENTE       reduce using rule 58 (pexp -> THIS .)
    PONTOVIRGULA    reduce using rule 58 (pexp -> THIS .)
    ECOMERCIAL      reduce using rule 58 (pexp -> THIS .)
    COLCD           reduce using rule 58 (pexp -> THIS .)
    PD              reduce using rule 58 (pexp -> THIS .)
    VIRGULA         reduce using rule 58 (pexp -> THIS .)


state 100

    (60) pexp -> PE . exp PD
    (35) exp -> . exp ECOMERCIAL rexp
    (36) exp -> . rexp
    (37) rexp -> . rexp MENOR aexp
    (38) rexp -> . rexp COMPARACAO aexp
    (39) rexp -> . rexp DIFERENTE aexp
    (40) rexp -> . aexp
    (41) aexp -> . aexp MAIS mexp
    (42) aexp -> . aexp MENOS mexp
    (43) aexp -> . mexp
    (44) mexp -> . mexp MULTIPLICA sexp
    (45) mexp -> . mexp DIVIDE sexp
    (46) mexp -> . sexp
    (47) sexp -> . NEGACAO sexp
    (48) sexp -> . MENOS sexp
    (49) sexp -> . TRUE
    (50) sexp -> . FALSE
    (51) sexp -> . NUMERO
    (52) sexp -> . NULL
    (53) sexp -> . NEW INT COLCE exp COLCD
    (54) sexp -> . pexp PONTO LENGTH
    (55) sexp -> . pexp COLCE exp COLCD
    (56) sexp -> . pexp
    (57) pexp -> . ID
    (58) pexp -> . THIS
    (59) pexp -> . NEW ID PE PD
    (60) pexp -> . PE exp PD
    (61) pexp -> . pexp PONTO ID
    (62) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 92
    MENOS           shift and go to state 90
    TRUE            shift and go to state 93
    FALSE           shift and go to state 94
    NUMERO          shift and go to state 95
    NULL            shift and go to state 96
    NEW             shift and go to state 97
    ID              shift and go to state 85
    THIS            shift and go to state 99
    PE              shift and go to state 100

    exp                            shift and go to state 124
    rexp                           shift and go to state 87
    aexp                           shift and go to state 88
    mexp                           shift and go to state 89
    sexp                           shift and go to state 91
    pexp                           shift and go to state 98

state 101

    (32) cmd -> ID COLCE exp . COLCD IGUAL exp PONTOVIRGULA
    (35) exp -> exp . ECOMERCIAL rexp

    COLCD           shift and go to state 125
    ECOMERCIAL      shift and go to state 110


state 102

    (26) cmd -> CE cmd2 CD .

    CE              reduce using rule 26 (cmd -> CE cmd2 CD .)
    IF              reduce using rule 26 (cmd -> CE cmd2 CD .)
    WHILE           reduce using rule 26 (cmd -> CE cmd2 CD .)
    SYSTEMOUTPRINTLN reduce using rule 26 (cmd -> CE cmd2 CD .)
    ID              reduce using rule 26 (cmd -> CE cmd2 CD .)
    RETURN          reduce using rule 26 (cmd -> CE cmd2 CD .)
    CD              reduce using rule 26 (cmd -> CE cmd2 CD .)
    ELSE            reduce using rule 26 (cmd -> CE cmd2 CD .)


state 103

    (33) cmd2 -> cmd cmd2 .

    CD              reduce using rule 33 (cmd2 -> cmd cmd2 .)


state 104

    (13) method -> PUBLIC type ID PE method2 PD CE method3 method4 RETURN exp . PONTOVIRGULA CD
    (35) exp -> exp . ECOMERCIAL rexp

    PONTOVIRGULA    shift and go to state 126
    ECOMERCIAL      shift and go to state 110


state 105

    (27) cmd -> IF PE exp . PD cmd
    (28) cmd -> IF PE exp . PD cmd ELSE cmd
    (35) exp -> exp . ECOMERCIAL rexp

    PD              shift and go to state 127
    ECOMERCIAL      shift and go to state 110


state 106

    (29) cmd -> WHILE PE exp . PD cmd
    (35) exp -> exp . ECOMERCIAL rexp

    PD              shift and go to state 128
    ECOMERCIAL      shift and go to state 110


state 107

    (30) cmd -> SYSTEMOUTPRINTLN PE exp . PD PONTOVIRGULA
    (35) exp -> exp . ECOMERCIAL rexp

    PD              shift and go to state 129
    ECOMERCIAL      shift and go to state 110


state 108

    (4) main -> CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID PD CE cmd CD CD .

    CLASS           reduce using rule 4 (main -> CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID PD CE cmd CD CD .)
    $end            reduce using rule 4 (main -> CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID PD CE cmd CD CD .)


state 109

    (31) cmd -> ID IGUAL exp PONTOVIRGULA .

    CE              reduce using rule 31 (cmd -> ID IGUAL exp PONTOVIRGULA .)
    IF              reduce using rule 31 (cmd -> ID IGUAL exp PONTOVIRGULA .)
    WHILE           reduce using rule 31 (cmd -> ID IGUAL exp PONTOVIRGULA .)
    SYSTEMOUTPRINTLN reduce using rule 31 (cmd -> ID IGUAL exp PONTOVIRGULA .)
    ID              reduce using rule 31 (cmd -> ID IGUAL exp PONTOVIRGULA .)
    RETURN          reduce using rule 31 (cmd -> ID IGUAL exp PONTOVIRGULA .)
    CD              reduce using rule 31 (cmd -> ID IGUAL exp PONTOVIRGULA .)
    ELSE            reduce using rule 31 (cmd -> ID IGUAL exp PONTOVIRGULA .)


state 110

    (35) exp -> exp ECOMERCIAL . rexp
    (37) rexp -> . rexp MENOR aexp
    (38) rexp -> . rexp COMPARACAO aexp
    (39) rexp -> . rexp DIFERENTE aexp
    (40) rexp -> . aexp
    (41) aexp -> . aexp MAIS mexp
    (42) aexp -> . aexp MENOS mexp
    (43) aexp -> . mexp
    (44) mexp -> . mexp MULTIPLICA sexp
    (45) mexp -> . mexp DIVIDE sexp
    (46) mexp -> . sexp
    (47) sexp -> . NEGACAO sexp
    (48) sexp -> . MENOS sexp
    (49) sexp -> . TRUE
    (50) sexp -> . FALSE
    (51) sexp -> . NUMERO
    (52) sexp -> . NULL
    (53) sexp -> . NEW INT COLCE exp COLCD
    (54) sexp -> . pexp PONTO LENGTH
    (55) sexp -> . pexp COLCE exp COLCD
    (56) sexp -> . pexp
    (57) pexp -> . ID
    (58) pexp -> . THIS
    (59) pexp -> . NEW ID PE PD
    (60) pexp -> . PE exp PD
    (61) pexp -> . pexp PONTO ID
    (62) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 92
    MENOS           shift and go to state 90
    TRUE            shift and go to state 93
    FALSE           shift and go to state 94
    NUMERO          shift and go to state 95
    NULL            shift and go to state 96
    NEW             shift and go to state 97
    ID              shift and go to state 85
    THIS            shift and go to state 99
    PE              shift and go to state 100

    rexp                           shift and go to state 130
    aexp                           shift and go to state 88
    mexp                           shift and go to state 89
    sexp                           shift and go to state 91
    pexp                           shift and go to state 98

state 111

    (37) rexp -> rexp MENOR . aexp
    (41) aexp -> . aexp MAIS mexp
    (42) aexp -> . aexp MENOS mexp
    (43) aexp -> . mexp
    (44) mexp -> . mexp MULTIPLICA sexp
    (45) mexp -> . mexp DIVIDE sexp
    (46) mexp -> . sexp
    (47) sexp -> . NEGACAO sexp
    (48) sexp -> . MENOS sexp
    (49) sexp -> . TRUE
    (50) sexp -> . FALSE
    (51) sexp -> . NUMERO
    (52) sexp -> . NULL
    (53) sexp -> . NEW INT COLCE exp COLCD
    (54) sexp -> . pexp PONTO LENGTH
    (55) sexp -> . pexp COLCE exp COLCD
    (56) sexp -> . pexp
    (57) pexp -> . ID
    (58) pexp -> . THIS
    (59) pexp -> . NEW ID PE PD
    (60) pexp -> . PE exp PD
    (61) pexp -> . pexp PONTO ID
    (62) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 92
    MENOS           shift and go to state 90
    TRUE            shift and go to state 93
    FALSE           shift and go to state 94
    NUMERO          shift and go to state 95
    NULL            shift and go to state 96
    NEW             shift and go to state 97
    ID              shift and go to state 85
    THIS            shift and go to state 99
    PE              shift and go to state 100

    aexp                           shift and go to state 131
    mexp                           shift and go to state 89
    sexp                           shift and go to state 91
    pexp                           shift and go to state 98

state 112

    (38) rexp -> rexp COMPARACAO . aexp
    (41) aexp -> . aexp MAIS mexp
    (42) aexp -> . aexp MENOS mexp
    (43) aexp -> . mexp
    (44) mexp -> . mexp MULTIPLICA sexp
    (45) mexp -> . mexp DIVIDE sexp
    (46) mexp -> . sexp
    (47) sexp -> . NEGACAO sexp
    (48) sexp -> . MENOS sexp
    (49) sexp -> . TRUE
    (50) sexp -> . FALSE
    (51) sexp -> . NUMERO
    (52) sexp -> . NULL
    (53) sexp -> . NEW INT COLCE exp COLCD
    (54) sexp -> . pexp PONTO LENGTH
    (55) sexp -> . pexp COLCE exp COLCD
    (56) sexp -> . pexp
    (57) pexp -> . ID
    (58) pexp -> . THIS
    (59) pexp -> . NEW ID PE PD
    (60) pexp -> . PE exp PD
    (61) pexp -> . pexp PONTO ID
    (62) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 92
    MENOS           shift and go to state 90
    TRUE            shift and go to state 93
    FALSE           shift and go to state 94
    NUMERO          shift and go to state 95
    NULL            shift and go to state 96
    NEW             shift and go to state 97
    ID              shift and go to state 85
    THIS            shift and go to state 99
    PE              shift and go to state 100

    aexp                           shift and go to state 132
    mexp                           shift and go to state 89
    sexp                           shift and go to state 91
    pexp                           shift and go to state 98

state 113

    (39) rexp -> rexp DIFERENTE . aexp
    (41) aexp -> . aexp MAIS mexp
    (42) aexp -> . aexp MENOS mexp
    (43) aexp -> . mexp
    (44) mexp -> . mexp MULTIPLICA sexp
    (45) mexp -> . mexp DIVIDE sexp
    (46) mexp -> . sexp
    (47) sexp -> . NEGACAO sexp
    (48) sexp -> . MENOS sexp
    (49) sexp -> . TRUE
    (50) sexp -> . FALSE
    (51) sexp -> . NUMERO
    (52) sexp -> . NULL
    (53) sexp -> . NEW INT COLCE exp COLCD
    (54) sexp -> . pexp PONTO LENGTH
    (55) sexp -> . pexp COLCE exp COLCD
    (56) sexp -> . pexp
    (57) pexp -> . ID
    (58) pexp -> . THIS
    (59) pexp -> . NEW ID PE PD
    (60) pexp -> . PE exp PD
    (61) pexp -> . pexp PONTO ID
    (62) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 92
    MENOS           shift and go to state 90
    TRUE            shift and go to state 93
    FALSE           shift and go to state 94
    NUMERO          shift and go to state 95
    NULL            shift and go to state 96
    NEW             shift and go to state 97
    ID              shift and go to state 85
    THIS            shift and go to state 99
    PE              shift and go to state 100

    aexp                           shift and go to state 133
    mexp                           shift and go to state 89
    sexp                           shift and go to state 91
    pexp                           shift and go to state 98

state 114

    (41) aexp -> aexp MAIS . mexp
    (44) mexp -> . mexp MULTIPLICA sexp
    (45) mexp -> . mexp DIVIDE sexp
    (46) mexp -> . sexp
    (47) sexp -> . NEGACAO sexp
    (48) sexp -> . MENOS sexp
    (49) sexp -> . TRUE
    (50) sexp -> . FALSE
    (51) sexp -> . NUMERO
    (52) sexp -> . NULL
    (53) sexp -> . NEW INT COLCE exp COLCD
    (54) sexp -> . pexp PONTO LENGTH
    (55) sexp -> . pexp COLCE exp COLCD
    (56) sexp -> . pexp
    (57) pexp -> . ID
    (58) pexp -> . THIS
    (59) pexp -> . NEW ID PE PD
    (60) pexp -> . PE exp PD
    (61) pexp -> . pexp PONTO ID
    (62) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 92
    MENOS           shift and go to state 90
    TRUE            shift and go to state 93
    FALSE           shift and go to state 94
    NUMERO          shift and go to state 95
    NULL            shift and go to state 96
    NEW             shift and go to state 97
    ID              shift and go to state 85
    THIS            shift and go to state 99
    PE              shift and go to state 100

    mexp                           shift and go to state 134
    sexp                           shift and go to state 91
    pexp                           shift and go to state 98

state 115

    (42) aexp -> aexp MENOS . mexp
    (44) mexp -> . mexp MULTIPLICA sexp
    (45) mexp -> . mexp DIVIDE sexp
    (46) mexp -> . sexp
    (47) sexp -> . NEGACAO sexp
    (48) sexp -> . MENOS sexp
    (49) sexp -> . TRUE
    (50) sexp -> . FALSE
    (51) sexp -> . NUMERO
    (52) sexp -> . NULL
    (53) sexp -> . NEW INT COLCE exp COLCD
    (54) sexp -> . pexp PONTO LENGTH
    (55) sexp -> . pexp COLCE exp COLCD
    (56) sexp -> . pexp
    (57) pexp -> . ID
    (58) pexp -> . THIS
    (59) pexp -> . NEW ID PE PD
    (60) pexp -> . PE exp PD
    (61) pexp -> . pexp PONTO ID
    (62) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 92
    MENOS           shift and go to state 90
    TRUE            shift and go to state 93
    FALSE           shift and go to state 94
    NUMERO          shift and go to state 95
    NULL            shift and go to state 96
    NEW             shift and go to state 97
    ID              shift and go to state 85
    THIS            shift and go to state 99
    PE              shift and go to state 100

    mexp                           shift and go to state 135
    sexp                           shift and go to state 91
    pexp                           shift and go to state 98

state 116

    (44) mexp -> mexp MULTIPLICA . sexp
    (47) sexp -> . NEGACAO sexp
    (48) sexp -> . MENOS sexp
    (49) sexp -> . TRUE
    (50) sexp -> . FALSE
    (51) sexp -> . NUMERO
    (52) sexp -> . NULL
    (53) sexp -> . NEW INT COLCE exp COLCD
    (54) sexp -> . pexp PONTO LENGTH
    (55) sexp -> . pexp COLCE exp COLCD
    (56) sexp -> . pexp
    (57) pexp -> . ID
    (58) pexp -> . THIS
    (59) pexp -> . NEW ID PE PD
    (60) pexp -> . PE exp PD
    (61) pexp -> . pexp PONTO ID
    (62) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 92
    MENOS           shift and go to state 90
    TRUE            shift and go to state 93
    FALSE           shift and go to state 94
    NUMERO          shift and go to state 95
    NULL            shift and go to state 96
    NEW             shift and go to state 97
    ID              shift and go to state 85
    THIS            shift and go to state 99
    PE              shift and go to state 100

    sexp                           shift and go to state 136
    pexp                           shift and go to state 98

state 117

    (45) mexp -> mexp DIVIDE . sexp
    (47) sexp -> . NEGACAO sexp
    (48) sexp -> . MENOS sexp
    (49) sexp -> . TRUE
    (50) sexp -> . FALSE
    (51) sexp -> . NUMERO
    (52) sexp -> . NULL
    (53) sexp -> . NEW INT COLCE exp COLCD
    (54) sexp -> . pexp PONTO LENGTH
    (55) sexp -> . pexp COLCE exp COLCD
    (56) sexp -> . pexp
    (57) pexp -> . ID
    (58) pexp -> . THIS
    (59) pexp -> . NEW ID PE PD
    (60) pexp -> . PE exp PD
    (61) pexp -> . pexp PONTO ID
    (62) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 92
    MENOS           shift and go to state 90
    TRUE            shift and go to state 93
    FALSE           shift and go to state 94
    NUMERO          shift and go to state 95
    NULL            shift and go to state 96
    NEW             shift and go to state 97
    ID              shift and go to state 85
    THIS            shift and go to state 99
    PE              shift and go to state 100

    sexp                           shift and go to state 137
    pexp                           shift and go to state 98

state 118

    (48) sexp -> MENOS sexp .

    MULTIPLICA      reduce using rule 48 (sexp -> MENOS sexp .)
    DIVIDE          reduce using rule 48 (sexp -> MENOS sexp .)
    MAIS            reduce using rule 48 (sexp -> MENOS sexp .)
    MENOS           reduce using rule 48 (sexp -> MENOS sexp .)
    MENOR           reduce using rule 48 (sexp -> MENOS sexp .)
    COMPARACAO      reduce using rule 48 (sexp -> MENOS sexp .)
    DIFERENTE       reduce using rule 48 (sexp -> MENOS sexp .)
    PONTOVIRGULA    reduce using rule 48 (sexp -> MENOS sexp .)
    ECOMERCIAL      reduce using rule 48 (sexp -> MENOS sexp .)
    COLCD           reduce using rule 48 (sexp -> MENOS sexp .)
    PD              reduce using rule 48 (sexp -> MENOS sexp .)
    VIRGULA         reduce using rule 48 (sexp -> MENOS sexp .)


state 119

    (47) sexp -> NEGACAO sexp .

    MULTIPLICA      reduce using rule 47 (sexp -> NEGACAO sexp .)
    DIVIDE          reduce using rule 47 (sexp -> NEGACAO sexp .)
    MAIS            reduce using rule 47 (sexp -> NEGACAO sexp .)
    MENOS           reduce using rule 47 (sexp -> NEGACAO sexp .)
    MENOR           reduce using rule 47 (sexp -> NEGACAO sexp .)
    COMPARACAO      reduce using rule 47 (sexp -> NEGACAO sexp .)
    DIFERENTE       reduce using rule 47 (sexp -> NEGACAO sexp .)
    PONTOVIRGULA    reduce using rule 47 (sexp -> NEGACAO sexp .)
    ECOMERCIAL      reduce using rule 47 (sexp -> NEGACAO sexp .)
    COLCD           reduce using rule 47 (sexp -> NEGACAO sexp .)
    PD              reduce using rule 47 (sexp -> NEGACAO sexp .)
    VIRGULA         reduce using rule 47 (sexp -> NEGACAO sexp .)


state 120

    (53) sexp -> NEW INT . COLCE exp COLCD

    COLCE           shift and go to state 138


state 121

    (59) pexp -> NEW ID . PE PD

    PE              shift and go to state 139


state 122

    (54) sexp -> pexp PONTO . LENGTH
    (61) pexp -> pexp PONTO . ID
    (62) pexp -> pexp PONTO . ID PE pexp2 PD

    LENGTH          shift and go to state 140
    ID              shift and go to state 141


state 123

    (55) sexp -> pexp COLCE . exp COLCD
    (35) exp -> . exp ECOMERCIAL rexp
    (36) exp -> . rexp
    (37) rexp -> . rexp MENOR aexp
    (38) rexp -> . rexp COMPARACAO aexp
    (39) rexp -> . rexp DIFERENTE aexp
    (40) rexp -> . aexp
    (41) aexp -> . aexp MAIS mexp
    (42) aexp -> . aexp MENOS mexp
    (43) aexp -> . mexp
    (44) mexp -> . mexp MULTIPLICA sexp
    (45) mexp -> . mexp DIVIDE sexp
    (46) mexp -> . sexp
    (47) sexp -> . NEGACAO sexp
    (48) sexp -> . MENOS sexp
    (49) sexp -> . TRUE
    (50) sexp -> . FALSE
    (51) sexp -> . NUMERO
    (52) sexp -> . NULL
    (53) sexp -> . NEW INT COLCE exp COLCD
    (54) sexp -> . pexp PONTO LENGTH
    (55) sexp -> . pexp COLCE exp COLCD
    (56) sexp -> . pexp
    (57) pexp -> . ID
    (58) pexp -> . THIS
    (59) pexp -> . NEW ID PE PD
    (60) pexp -> . PE exp PD
    (61) pexp -> . pexp PONTO ID
    (62) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 92
    MENOS           shift and go to state 90
    TRUE            shift and go to state 93
    FALSE           shift and go to state 94
    NUMERO          shift and go to state 95
    NULL            shift and go to state 96
    NEW             shift and go to state 97
    ID              shift and go to state 85
    THIS            shift and go to state 99
    PE              shift and go to state 100

    pexp                           shift and go to state 98
    exp                            shift and go to state 142
    rexp                           shift and go to state 87
    aexp                           shift and go to state 88
    mexp                           shift and go to state 89
    sexp                           shift and go to state 91

state 124

    (60) pexp -> PE exp . PD
    (35) exp -> exp . ECOMERCIAL rexp

    PD              shift and go to state 143
    ECOMERCIAL      shift and go to state 110


state 125

    (32) cmd -> ID COLCE exp COLCD . IGUAL exp PONTOVIRGULA

    IGUAL           shift and go to state 144


state 126

    (13) method -> PUBLIC type ID PE method2 PD CE method3 method4 RETURN exp PONTOVIRGULA . CD

    CD              shift and go to state 145


state 127

    (27) cmd -> IF PE exp PD . cmd
    (28) cmd -> IF PE exp PD . cmd ELSE cmd
    (26) cmd -> . CE cmd2 CD
    (27) cmd -> . IF PE exp PD cmd
    (28) cmd -> . IF PE exp PD cmd ELSE cmd
    (29) cmd -> . WHILE PE exp PD cmd
    (30) cmd -> . SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA
    (31) cmd -> . ID IGUAL exp PONTOVIRGULA
    (32) cmd -> . ID COLCE exp COLCD IGUAL exp PONTOVIRGULA

    CE              shift and go to state 64
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    SYSTEMOUTPRINTLN shift and go to state 70
    ID              shift and go to state 63

    cmd                            shift and go to state 146

state 128

    (29) cmd -> WHILE PE exp PD . cmd
    (26) cmd -> . CE cmd2 CD
    (27) cmd -> . IF PE exp PD cmd
    (28) cmd -> . IF PE exp PD cmd ELSE cmd
    (29) cmd -> . WHILE PE exp PD cmd
    (30) cmd -> . SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA
    (31) cmd -> . ID IGUAL exp PONTOVIRGULA
    (32) cmd -> . ID COLCE exp COLCD IGUAL exp PONTOVIRGULA

    CE              shift and go to state 64
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    SYSTEMOUTPRINTLN shift and go to state 70
    ID              shift and go to state 63

    cmd                            shift and go to state 147

state 129

    (30) cmd -> SYSTEMOUTPRINTLN PE exp PD . PONTOVIRGULA

    PONTOVIRGULA    shift and go to state 148


state 130

    (35) exp -> exp ECOMERCIAL rexp .
    (37) rexp -> rexp . MENOR aexp
    (38) rexp -> rexp . COMPARACAO aexp
    (39) rexp -> rexp . DIFERENTE aexp

    PONTOVIRGULA    reduce using rule 35 (exp -> exp ECOMERCIAL rexp .)
    ECOMERCIAL      reduce using rule 35 (exp -> exp ECOMERCIAL rexp .)
    COLCD           reduce using rule 35 (exp -> exp ECOMERCIAL rexp .)
    PD              reduce using rule 35 (exp -> exp ECOMERCIAL rexp .)
    VIRGULA         reduce using rule 35 (exp -> exp ECOMERCIAL rexp .)
    MENOR           shift and go to state 111
    COMPARACAO      shift and go to state 112
    DIFERENTE       shift and go to state 113


state 131

    (37) rexp -> rexp MENOR aexp .
    (41) aexp -> aexp . MAIS mexp
    (42) aexp -> aexp . MENOS mexp

    MENOR           reduce using rule 37 (rexp -> rexp MENOR aexp .)
    COMPARACAO      reduce using rule 37 (rexp -> rexp MENOR aexp .)
    DIFERENTE       reduce using rule 37 (rexp -> rexp MENOR aexp .)
    PONTOVIRGULA    reduce using rule 37 (rexp -> rexp MENOR aexp .)
    ECOMERCIAL      reduce using rule 37 (rexp -> rexp MENOR aexp .)
    COLCD           reduce using rule 37 (rexp -> rexp MENOR aexp .)
    PD              reduce using rule 37 (rexp -> rexp MENOR aexp .)
    VIRGULA         reduce using rule 37 (rexp -> rexp MENOR aexp .)
    MAIS            shift and go to state 114
    MENOS           shift and go to state 115


state 132

    (38) rexp -> rexp COMPARACAO aexp .
    (41) aexp -> aexp . MAIS mexp
    (42) aexp -> aexp . MENOS mexp

    MENOR           reduce using rule 38 (rexp -> rexp COMPARACAO aexp .)
    COMPARACAO      reduce using rule 38 (rexp -> rexp COMPARACAO aexp .)
    DIFERENTE       reduce using rule 38 (rexp -> rexp COMPARACAO aexp .)
    PONTOVIRGULA    reduce using rule 38 (rexp -> rexp COMPARACAO aexp .)
    ECOMERCIAL      reduce using rule 38 (rexp -> rexp COMPARACAO aexp .)
    COLCD           reduce using rule 38 (rexp -> rexp COMPARACAO aexp .)
    PD              reduce using rule 38 (rexp -> rexp COMPARACAO aexp .)
    VIRGULA         reduce using rule 38 (rexp -> rexp COMPARACAO aexp .)
    MAIS            shift and go to state 114
    MENOS           shift and go to state 115


state 133

    (39) rexp -> rexp DIFERENTE aexp .
    (41) aexp -> aexp . MAIS mexp
    (42) aexp -> aexp . MENOS mexp

    MENOR           reduce using rule 39 (rexp -> rexp DIFERENTE aexp .)
    COMPARACAO      reduce using rule 39 (rexp -> rexp DIFERENTE aexp .)
    DIFERENTE       reduce using rule 39 (rexp -> rexp DIFERENTE aexp .)
    PONTOVIRGULA    reduce using rule 39 (rexp -> rexp DIFERENTE aexp .)
    ECOMERCIAL      reduce using rule 39 (rexp -> rexp DIFERENTE aexp .)
    COLCD           reduce using rule 39 (rexp -> rexp DIFERENTE aexp .)
    PD              reduce using rule 39 (rexp -> rexp DIFERENTE aexp .)
    VIRGULA         reduce using rule 39 (rexp -> rexp DIFERENTE aexp .)
    MAIS            shift and go to state 114
    MENOS           shift and go to state 115


state 134

    (41) aexp -> aexp MAIS mexp .
    (44) mexp -> mexp . MULTIPLICA sexp
    (45) mexp -> mexp . DIVIDE sexp

    MAIS            reduce using rule 41 (aexp -> aexp MAIS mexp .)
    MENOS           reduce using rule 41 (aexp -> aexp MAIS mexp .)
    MENOR           reduce using rule 41 (aexp -> aexp MAIS mexp .)
    COMPARACAO      reduce using rule 41 (aexp -> aexp MAIS mexp .)
    DIFERENTE       reduce using rule 41 (aexp -> aexp MAIS mexp .)
    PONTOVIRGULA    reduce using rule 41 (aexp -> aexp MAIS mexp .)
    ECOMERCIAL      reduce using rule 41 (aexp -> aexp MAIS mexp .)
    COLCD           reduce using rule 41 (aexp -> aexp MAIS mexp .)
    PD              reduce using rule 41 (aexp -> aexp MAIS mexp .)
    VIRGULA         reduce using rule 41 (aexp -> aexp MAIS mexp .)
    MULTIPLICA      shift and go to state 116
    DIVIDE          shift and go to state 117


state 135

    (42) aexp -> aexp MENOS mexp .
    (44) mexp -> mexp . MULTIPLICA sexp
    (45) mexp -> mexp . DIVIDE sexp

    MAIS            reduce using rule 42 (aexp -> aexp MENOS mexp .)
    MENOS           reduce using rule 42 (aexp -> aexp MENOS mexp .)
    MENOR           reduce using rule 42 (aexp -> aexp MENOS mexp .)
    COMPARACAO      reduce using rule 42 (aexp -> aexp MENOS mexp .)
    DIFERENTE       reduce using rule 42 (aexp -> aexp MENOS mexp .)
    PONTOVIRGULA    reduce using rule 42 (aexp -> aexp MENOS mexp .)
    ECOMERCIAL      reduce using rule 42 (aexp -> aexp MENOS mexp .)
    COLCD           reduce using rule 42 (aexp -> aexp MENOS mexp .)
    PD              reduce using rule 42 (aexp -> aexp MENOS mexp .)
    VIRGULA         reduce using rule 42 (aexp -> aexp MENOS mexp .)
    MULTIPLICA      shift and go to state 116
    DIVIDE          shift and go to state 117


state 136

    (44) mexp -> mexp MULTIPLICA sexp .

    MULTIPLICA      reduce using rule 44 (mexp -> mexp MULTIPLICA sexp .)
    DIVIDE          reduce using rule 44 (mexp -> mexp MULTIPLICA sexp .)
    MAIS            reduce using rule 44 (mexp -> mexp MULTIPLICA sexp .)
    MENOS           reduce using rule 44 (mexp -> mexp MULTIPLICA sexp .)
    MENOR           reduce using rule 44 (mexp -> mexp MULTIPLICA sexp .)
    COMPARACAO      reduce using rule 44 (mexp -> mexp MULTIPLICA sexp .)
    DIFERENTE       reduce using rule 44 (mexp -> mexp MULTIPLICA sexp .)
    PONTOVIRGULA    reduce using rule 44 (mexp -> mexp MULTIPLICA sexp .)
    ECOMERCIAL      reduce using rule 44 (mexp -> mexp MULTIPLICA sexp .)
    COLCD           reduce using rule 44 (mexp -> mexp MULTIPLICA sexp .)
    PD              reduce using rule 44 (mexp -> mexp MULTIPLICA sexp .)
    VIRGULA         reduce using rule 44 (mexp -> mexp MULTIPLICA sexp .)


state 137

    (45) mexp -> mexp DIVIDE sexp .

    MULTIPLICA      reduce using rule 45 (mexp -> mexp DIVIDE sexp .)
    DIVIDE          reduce using rule 45 (mexp -> mexp DIVIDE sexp .)
    MAIS            reduce using rule 45 (mexp -> mexp DIVIDE sexp .)
    MENOS           reduce using rule 45 (mexp -> mexp DIVIDE sexp .)
    MENOR           reduce using rule 45 (mexp -> mexp DIVIDE sexp .)
    COMPARACAO      reduce using rule 45 (mexp -> mexp DIVIDE sexp .)
    DIFERENTE       reduce using rule 45 (mexp -> mexp DIVIDE sexp .)
    PONTOVIRGULA    reduce using rule 45 (mexp -> mexp DIVIDE sexp .)
    ECOMERCIAL      reduce using rule 45 (mexp -> mexp DIVIDE sexp .)
    COLCD           reduce using rule 45 (mexp -> mexp DIVIDE sexp .)
    PD              reduce using rule 45 (mexp -> mexp DIVIDE sexp .)
    VIRGULA         reduce using rule 45 (mexp -> mexp DIVIDE sexp .)


state 138

    (53) sexp -> NEW INT COLCE . exp COLCD
    (35) exp -> . exp ECOMERCIAL rexp
    (36) exp -> . rexp
    (37) rexp -> . rexp MENOR aexp
    (38) rexp -> . rexp COMPARACAO aexp
    (39) rexp -> . rexp DIFERENTE aexp
    (40) rexp -> . aexp
    (41) aexp -> . aexp MAIS mexp
    (42) aexp -> . aexp MENOS mexp
    (43) aexp -> . mexp
    (44) mexp -> . mexp MULTIPLICA sexp
    (45) mexp -> . mexp DIVIDE sexp
    (46) mexp -> . sexp
    (47) sexp -> . NEGACAO sexp
    (48) sexp -> . MENOS sexp
    (49) sexp -> . TRUE
    (50) sexp -> . FALSE
    (51) sexp -> . NUMERO
    (52) sexp -> . NULL
    (53) sexp -> . NEW INT COLCE exp COLCD
    (54) sexp -> . pexp PONTO LENGTH
    (55) sexp -> . pexp COLCE exp COLCD
    (56) sexp -> . pexp
    (57) pexp -> . ID
    (58) pexp -> . THIS
    (59) pexp -> . NEW ID PE PD
    (60) pexp -> . PE exp PD
    (61) pexp -> . pexp PONTO ID
    (62) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 92
    MENOS           shift and go to state 90
    TRUE            shift and go to state 93
    FALSE           shift and go to state 94
    NUMERO          shift and go to state 95
    NULL            shift and go to state 96
    NEW             shift and go to state 97
    ID              shift and go to state 85
    THIS            shift and go to state 99
    PE              shift and go to state 100

    exp                            shift and go to state 149
    rexp                           shift and go to state 87
    aexp                           shift and go to state 88
    mexp                           shift and go to state 89
    sexp                           shift and go to state 91
    pexp                           shift and go to state 98

state 139

    (59) pexp -> NEW ID PE . PD

    PD              shift and go to state 150


state 140

    (54) sexp -> pexp PONTO LENGTH .

    MULTIPLICA      reduce using rule 54 (sexp -> pexp PONTO LENGTH .)
    DIVIDE          reduce using rule 54 (sexp -> pexp PONTO LENGTH .)
    MAIS            reduce using rule 54 (sexp -> pexp PONTO LENGTH .)
    MENOS           reduce using rule 54 (sexp -> pexp PONTO LENGTH .)
    MENOR           reduce using rule 54 (sexp -> pexp PONTO LENGTH .)
    COMPARACAO      reduce using rule 54 (sexp -> pexp PONTO LENGTH .)
    DIFERENTE       reduce using rule 54 (sexp -> pexp PONTO LENGTH .)
    PONTOVIRGULA    reduce using rule 54 (sexp -> pexp PONTO LENGTH .)
    ECOMERCIAL      reduce using rule 54 (sexp -> pexp PONTO LENGTH .)
    COLCD           reduce using rule 54 (sexp -> pexp PONTO LENGTH .)
    PD              reduce using rule 54 (sexp -> pexp PONTO LENGTH .)
    VIRGULA         reduce using rule 54 (sexp -> pexp PONTO LENGTH .)


state 141

    (61) pexp -> pexp PONTO ID .
    (62) pexp -> pexp PONTO ID . PE pexp2 PD

    PONTO           reduce using rule 61 (pexp -> pexp PONTO ID .)
    COLCE           reduce using rule 61 (pexp -> pexp PONTO ID .)
    MULTIPLICA      reduce using rule 61 (pexp -> pexp PONTO ID .)
    DIVIDE          reduce using rule 61 (pexp -> pexp PONTO ID .)
    MAIS            reduce using rule 61 (pexp -> pexp PONTO ID .)
    MENOS           reduce using rule 61 (pexp -> pexp PONTO ID .)
    MENOR           reduce using rule 61 (pexp -> pexp PONTO ID .)
    COMPARACAO      reduce using rule 61 (pexp -> pexp PONTO ID .)
    DIFERENTE       reduce using rule 61 (pexp -> pexp PONTO ID .)
    PONTOVIRGULA    reduce using rule 61 (pexp -> pexp PONTO ID .)
    ECOMERCIAL      reduce using rule 61 (pexp -> pexp PONTO ID .)
    COLCD           reduce using rule 61 (pexp -> pexp PONTO ID .)
    PD              reduce using rule 61 (pexp -> pexp PONTO ID .)
    VIRGULA         reduce using rule 61 (pexp -> pexp PONTO ID .)
    PE              shift and go to state 151


state 142

    (55) sexp -> pexp COLCE exp . COLCD
    (35) exp -> exp . ECOMERCIAL rexp

    COLCD           shift and go to state 152
    ECOMERCIAL      shift and go to state 110


state 143

    (60) pexp -> PE exp PD .

    PONTO           reduce using rule 60 (pexp -> PE exp PD .)
    COLCE           reduce using rule 60 (pexp -> PE exp PD .)
    MULTIPLICA      reduce using rule 60 (pexp -> PE exp PD .)
    DIVIDE          reduce using rule 60 (pexp -> PE exp PD .)
    MAIS            reduce using rule 60 (pexp -> PE exp PD .)
    MENOS           reduce using rule 60 (pexp -> PE exp PD .)
    MENOR           reduce using rule 60 (pexp -> PE exp PD .)
    COMPARACAO      reduce using rule 60 (pexp -> PE exp PD .)
    DIFERENTE       reduce using rule 60 (pexp -> PE exp PD .)
    PONTOVIRGULA    reduce using rule 60 (pexp -> PE exp PD .)
    ECOMERCIAL      reduce using rule 60 (pexp -> PE exp PD .)
    COLCD           reduce using rule 60 (pexp -> PE exp PD .)
    PD              reduce using rule 60 (pexp -> PE exp PD .)
    VIRGULA         reduce using rule 60 (pexp -> PE exp PD .)


state 144

    (32) cmd -> ID COLCE exp COLCD IGUAL . exp PONTOVIRGULA
    (35) exp -> . exp ECOMERCIAL rexp
    (36) exp -> . rexp
    (37) rexp -> . rexp MENOR aexp
    (38) rexp -> . rexp COMPARACAO aexp
    (39) rexp -> . rexp DIFERENTE aexp
    (40) rexp -> . aexp
    (41) aexp -> . aexp MAIS mexp
    (42) aexp -> . aexp MENOS mexp
    (43) aexp -> . mexp
    (44) mexp -> . mexp MULTIPLICA sexp
    (45) mexp -> . mexp DIVIDE sexp
    (46) mexp -> . sexp
    (47) sexp -> . NEGACAO sexp
    (48) sexp -> . MENOS sexp
    (49) sexp -> . TRUE
    (50) sexp -> . FALSE
    (51) sexp -> . NUMERO
    (52) sexp -> . NULL
    (53) sexp -> . NEW INT COLCE exp COLCD
    (54) sexp -> . pexp PONTO LENGTH
    (55) sexp -> . pexp COLCE exp COLCD
    (56) sexp -> . pexp
    (57) pexp -> . ID
    (58) pexp -> . THIS
    (59) pexp -> . NEW ID PE PD
    (60) pexp -> . PE exp PD
    (61) pexp -> . pexp PONTO ID
    (62) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 92
    MENOS           shift and go to state 90
    TRUE            shift and go to state 93
    FALSE           shift and go to state 94
    NUMERO          shift and go to state 95
    NULL            shift and go to state 96
    NEW             shift and go to state 97
    ID              shift and go to state 85
    THIS            shift and go to state 99
    PE              shift and go to state 100

    exp                            shift and go to state 153
    rexp                           shift and go to state 87
    aexp                           shift and go to state 88
    mexp                           shift and go to state 89
    sexp                           shift and go to state 91
    pexp                           shift and go to state 98

state 145

    (13) method -> PUBLIC type ID PE method2 PD CE method3 method4 RETURN exp PONTOVIRGULA CD .

    PUBLIC          reduce using rule 13 (method -> PUBLIC type ID PE method2 PD CE method3 method4 RETURN exp PONTOVIRGULA CD .)
    CD              reduce using rule 13 (method -> PUBLIC type ID PE method2 PD CE method3 method4 RETURN exp PONTOVIRGULA CD .)


state 146

    (27) cmd -> IF PE exp PD cmd .
    (28) cmd -> IF PE exp PD cmd . ELSE cmd

  ! shift/reduce conflict for ELSE resolved as shift
    CE              reduce using rule 27 (cmd -> IF PE exp PD cmd .)
    IF              reduce using rule 27 (cmd -> IF PE exp PD cmd .)
    WHILE           reduce using rule 27 (cmd -> IF PE exp PD cmd .)
    SYSTEMOUTPRINTLN reduce using rule 27 (cmd -> IF PE exp PD cmd .)
    ID              reduce using rule 27 (cmd -> IF PE exp PD cmd .)
    RETURN          reduce using rule 27 (cmd -> IF PE exp PD cmd .)
    CD              reduce using rule 27 (cmd -> IF PE exp PD cmd .)
    ELSE            shift and go to state 154

  ! ELSE            [ reduce using rule 27 (cmd -> IF PE exp PD cmd .) ]


state 147

    (29) cmd -> WHILE PE exp PD cmd .

    CE              reduce using rule 29 (cmd -> WHILE PE exp PD cmd .)
    IF              reduce using rule 29 (cmd -> WHILE PE exp PD cmd .)
    WHILE           reduce using rule 29 (cmd -> WHILE PE exp PD cmd .)
    SYSTEMOUTPRINTLN reduce using rule 29 (cmd -> WHILE PE exp PD cmd .)
    ID              reduce using rule 29 (cmd -> WHILE PE exp PD cmd .)
    RETURN          reduce using rule 29 (cmd -> WHILE PE exp PD cmd .)
    CD              reduce using rule 29 (cmd -> WHILE PE exp PD cmd .)
    ELSE            reduce using rule 29 (cmd -> WHILE PE exp PD cmd .)


state 148

    (30) cmd -> SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA .

    CE              reduce using rule 30 (cmd -> SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA .)
    IF              reduce using rule 30 (cmd -> SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA .)
    WHILE           reduce using rule 30 (cmd -> SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA .)
    SYSTEMOUTPRINTLN reduce using rule 30 (cmd -> SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA .)
    ID              reduce using rule 30 (cmd -> SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA .)
    RETURN          reduce using rule 30 (cmd -> SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA .)
    CD              reduce using rule 30 (cmd -> SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA .)
    ELSE            reduce using rule 30 (cmd -> SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA .)


state 149

    (53) sexp -> NEW INT COLCE exp . COLCD
    (35) exp -> exp . ECOMERCIAL rexp

    COLCD           shift and go to state 155
    ECOMERCIAL      shift and go to state 110


state 150

    (59) pexp -> NEW ID PE PD .

    PONTO           reduce using rule 59 (pexp -> NEW ID PE PD .)
    COLCE           reduce using rule 59 (pexp -> NEW ID PE PD .)
    MULTIPLICA      reduce using rule 59 (pexp -> NEW ID PE PD .)
    DIVIDE          reduce using rule 59 (pexp -> NEW ID PE PD .)
    MAIS            reduce using rule 59 (pexp -> NEW ID PE PD .)
    MENOS           reduce using rule 59 (pexp -> NEW ID PE PD .)
    MENOR           reduce using rule 59 (pexp -> NEW ID PE PD .)
    COMPARACAO      reduce using rule 59 (pexp -> NEW ID PE PD .)
    DIFERENTE       reduce using rule 59 (pexp -> NEW ID PE PD .)
    PONTOVIRGULA    reduce using rule 59 (pexp -> NEW ID PE PD .)
    ECOMERCIAL      reduce using rule 59 (pexp -> NEW ID PE PD .)
    COLCD           reduce using rule 59 (pexp -> NEW ID PE PD .)
    PD              reduce using rule 59 (pexp -> NEW ID PE PD .)
    VIRGULA         reduce using rule 59 (pexp -> NEW ID PE PD .)


state 151

    (62) pexp -> pexp PONTO ID PE . pexp2 PD
    (63) pexp2 -> . exps
    (64) pexp2 -> . empty
    (65) exps -> . exp exps2
    (68) empty -> .
    (35) exp -> . exp ECOMERCIAL rexp
    (36) exp -> . rexp
    (37) rexp -> . rexp MENOR aexp
    (38) rexp -> . rexp COMPARACAO aexp
    (39) rexp -> . rexp DIFERENTE aexp
    (40) rexp -> . aexp
    (41) aexp -> . aexp MAIS mexp
    (42) aexp -> . aexp MENOS mexp
    (43) aexp -> . mexp
    (44) mexp -> . mexp MULTIPLICA sexp
    (45) mexp -> . mexp DIVIDE sexp
    (46) mexp -> . sexp
    (47) sexp -> . NEGACAO sexp
    (48) sexp -> . MENOS sexp
    (49) sexp -> . TRUE
    (50) sexp -> . FALSE
    (51) sexp -> . NUMERO
    (52) sexp -> . NULL
    (53) sexp -> . NEW INT COLCE exp COLCD
    (54) sexp -> . pexp PONTO LENGTH
    (55) sexp -> . pexp COLCE exp COLCD
    (56) sexp -> . pexp
    (57) pexp -> . ID
    (58) pexp -> . THIS
    (59) pexp -> . NEW ID PE PD
    (60) pexp -> . PE exp PD
    (61) pexp -> . pexp PONTO ID
    (62) pexp -> . pexp PONTO ID PE pexp2 PD

    PD              reduce using rule 68 (empty -> .)
    NEGACAO         shift and go to state 92
    MENOS           shift and go to state 90
    TRUE            shift and go to state 93
    FALSE           shift and go to state 94
    NUMERO          shift and go to state 95
    NULL            shift and go to state 96
    NEW             shift and go to state 97
    ID              shift and go to state 85
    THIS            shift and go to state 99
    PE              shift and go to state 100

    pexp                           shift and go to state 98
    pexp2                          shift and go to state 156
    exps                           shift and go to state 157
    empty                          shift and go to state 158
    exp                            shift and go to state 159
    rexp                           shift and go to state 87
    aexp                           shift and go to state 88
    mexp                           shift and go to state 89
    sexp                           shift and go to state 91

state 152

    (55) sexp -> pexp COLCE exp COLCD .

    MULTIPLICA      reduce using rule 55 (sexp -> pexp COLCE exp COLCD .)
    DIVIDE          reduce using rule 55 (sexp -> pexp COLCE exp COLCD .)
    MAIS            reduce using rule 55 (sexp -> pexp COLCE exp COLCD .)
    MENOS           reduce using rule 55 (sexp -> pexp COLCE exp COLCD .)
    MENOR           reduce using rule 55 (sexp -> pexp COLCE exp COLCD .)
    COMPARACAO      reduce using rule 55 (sexp -> pexp COLCE exp COLCD .)
    DIFERENTE       reduce using rule 55 (sexp -> pexp COLCE exp COLCD .)
    PONTOVIRGULA    reduce using rule 55 (sexp -> pexp COLCE exp COLCD .)
    ECOMERCIAL      reduce using rule 55 (sexp -> pexp COLCE exp COLCD .)
    COLCD           reduce using rule 55 (sexp -> pexp COLCE exp COLCD .)
    PD              reduce using rule 55 (sexp -> pexp COLCE exp COLCD .)
    VIRGULA         reduce using rule 55 (sexp -> pexp COLCE exp COLCD .)


state 153

    (32) cmd -> ID COLCE exp COLCD IGUAL exp . PONTOVIRGULA
    (35) exp -> exp . ECOMERCIAL rexp

    PONTOVIRGULA    shift and go to state 160
    ECOMERCIAL      shift and go to state 110


state 154

    (28) cmd -> IF PE exp PD cmd ELSE . cmd
    (26) cmd -> . CE cmd2 CD
    (27) cmd -> . IF PE exp PD cmd
    (28) cmd -> . IF PE exp PD cmd ELSE cmd
    (29) cmd -> . WHILE PE exp PD cmd
    (30) cmd -> . SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA
    (31) cmd -> . ID IGUAL exp PONTOVIRGULA
    (32) cmd -> . ID COLCE exp COLCD IGUAL exp PONTOVIRGULA

    CE              shift and go to state 64
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    SYSTEMOUTPRINTLN shift and go to state 70
    ID              shift and go to state 63

    cmd                            shift and go to state 161

state 155

    (53) sexp -> NEW INT COLCE exp COLCD .

    MULTIPLICA      reduce using rule 53 (sexp -> NEW INT COLCE exp COLCD .)
    DIVIDE          reduce using rule 53 (sexp -> NEW INT COLCE exp COLCD .)
    MAIS            reduce using rule 53 (sexp -> NEW INT COLCE exp COLCD .)
    MENOS           reduce using rule 53 (sexp -> NEW INT COLCE exp COLCD .)
    MENOR           reduce using rule 53 (sexp -> NEW INT COLCE exp COLCD .)
    COMPARACAO      reduce using rule 53 (sexp -> NEW INT COLCE exp COLCD .)
    DIFERENTE       reduce using rule 53 (sexp -> NEW INT COLCE exp COLCD .)
    PONTOVIRGULA    reduce using rule 53 (sexp -> NEW INT COLCE exp COLCD .)
    ECOMERCIAL      reduce using rule 53 (sexp -> NEW INT COLCE exp COLCD .)
    COLCD           reduce using rule 53 (sexp -> NEW INT COLCE exp COLCD .)
    PD              reduce using rule 53 (sexp -> NEW INT COLCE exp COLCD .)
    VIRGULA         reduce using rule 53 (sexp -> NEW INT COLCE exp COLCD .)


state 156

    (62) pexp -> pexp PONTO ID PE pexp2 . PD

    PD              shift and go to state 162


state 157

    (63) pexp2 -> exps .

    PD              reduce using rule 63 (pexp2 -> exps .)


state 158

    (64) pexp2 -> empty .

    PD              reduce using rule 64 (pexp2 -> empty .)


state 159

    (65) exps -> exp . exps2
    (35) exp -> exp . ECOMERCIAL rexp
    (66) exps2 -> . VIRGULA exp exps2
    (67) exps2 -> . empty
    (68) empty -> .

    ECOMERCIAL      shift and go to state 110
    VIRGULA         shift and go to state 164
    PD              reduce using rule 68 (empty -> .)

    exps2                          shift and go to state 163
    empty                          shift and go to state 165

state 160

    (32) cmd -> ID COLCE exp COLCD IGUAL exp PONTOVIRGULA .

    CE              reduce using rule 32 (cmd -> ID COLCE exp COLCD IGUAL exp PONTOVIRGULA .)
    IF              reduce using rule 32 (cmd -> ID COLCE exp COLCD IGUAL exp PONTOVIRGULA .)
    WHILE           reduce using rule 32 (cmd -> ID COLCE exp COLCD IGUAL exp PONTOVIRGULA .)
    SYSTEMOUTPRINTLN reduce using rule 32 (cmd -> ID COLCE exp COLCD IGUAL exp PONTOVIRGULA .)
    ID              reduce using rule 32 (cmd -> ID COLCE exp COLCD IGUAL exp PONTOVIRGULA .)
    RETURN          reduce using rule 32 (cmd -> ID COLCE exp COLCD IGUAL exp PONTOVIRGULA .)
    CD              reduce using rule 32 (cmd -> ID COLCE exp COLCD IGUAL exp PONTOVIRGULA .)
    ELSE            reduce using rule 32 (cmd -> ID COLCE exp COLCD IGUAL exp PONTOVIRGULA .)


state 161

    (28) cmd -> IF PE exp PD cmd ELSE cmd .

    CE              reduce using rule 28 (cmd -> IF PE exp PD cmd ELSE cmd .)
    IF              reduce using rule 28 (cmd -> IF PE exp PD cmd ELSE cmd .)
    WHILE           reduce using rule 28 (cmd -> IF PE exp PD cmd ELSE cmd .)
    SYSTEMOUTPRINTLN reduce using rule 28 (cmd -> IF PE exp PD cmd ELSE cmd .)
    ID              reduce using rule 28 (cmd -> IF PE exp PD cmd ELSE cmd .)
    RETURN          reduce using rule 28 (cmd -> IF PE exp PD cmd ELSE cmd .)
    CD              reduce using rule 28 (cmd -> IF PE exp PD cmd ELSE cmd .)
    ELSE            reduce using rule 28 (cmd -> IF PE exp PD cmd ELSE cmd .)


state 162

    (62) pexp -> pexp PONTO ID PE pexp2 PD .

    PONTO           reduce using rule 62 (pexp -> pexp PONTO ID PE pexp2 PD .)
    COLCE           reduce using rule 62 (pexp -> pexp PONTO ID PE pexp2 PD .)
    MULTIPLICA      reduce using rule 62 (pexp -> pexp PONTO ID PE pexp2 PD .)
    DIVIDE          reduce using rule 62 (pexp -> pexp PONTO ID PE pexp2 PD .)
    MAIS            reduce using rule 62 (pexp -> pexp PONTO ID PE pexp2 PD .)
    MENOS           reduce using rule 62 (pexp -> pexp PONTO ID PE pexp2 PD .)
    MENOR           reduce using rule 62 (pexp -> pexp PONTO ID PE pexp2 PD .)
    COMPARACAO      reduce using rule 62 (pexp -> pexp PONTO ID PE pexp2 PD .)
    DIFERENTE       reduce using rule 62 (pexp -> pexp PONTO ID PE pexp2 PD .)
    PONTOVIRGULA    reduce using rule 62 (pexp -> pexp PONTO ID PE pexp2 PD .)
    ECOMERCIAL      reduce using rule 62 (pexp -> pexp PONTO ID PE pexp2 PD .)
    COLCD           reduce using rule 62 (pexp -> pexp PONTO ID PE pexp2 PD .)
    PD              reduce using rule 62 (pexp -> pexp PONTO ID PE pexp2 PD .)
    VIRGULA         reduce using rule 62 (pexp -> pexp PONTO ID PE pexp2 PD .)


state 163

    (65) exps -> exp exps2 .

    PD              reduce using rule 65 (exps -> exp exps2 .)


state 164

    (66) exps2 -> VIRGULA . exp exps2
    (35) exp -> . exp ECOMERCIAL rexp
    (36) exp -> . rexp
    (37) rexp -> . rexp MENOR aexp
    (38) rexp -> . rexp COMPARACAO aexp
    (39) rexp -> . rexp DIFERENTE aexp
    (40) rexp -> . aexp
    (41) aexp -> . aexp MAIS mexp
    (42) aexp -> . aexp MENOS mexp
    (43) aexp -> . mexp
    (44) mexp -> . mexp MULTIPLICA sexp
    (45) mexp -> . mexp DIVIDE sexp
    (46) mexp -> . sexp
    (47) sexp -> . NEGACAO sexp
    (48) sexp -> . MENOS sexp
    (49) sexp -> . TRUE
    (50) sexp -> . FALSE
    (51) sexp -> . NUMERO
    (52) sexp -> . NULL
    (53) sexp -> . NEW INT COLCE exp COLCD
    (54) sexp -> . pexp PONTO LENGTH
    (55) sexp -> . pexp COLCE exp COLCD
    (56) sexp -> . pexp
    (57) pexp -> . ID
    (58) pexp -> . THIS
    (59) pexp -> . NEW ID PE PD
    (60) pexp -> . PE exp PD
    (61) pexp -> . pexp PONTO ID
    (62) pexp -> . pexp PONTO ID PE pexp2 PD

    NEGACAO         shift and go to state 92
    MENOS           shift and go to state 90
    TRUE            shift and go to state 93
    FALSE           shift and go to state 94
    NUMERO          shift and go to state 95
    NULL            shift and go to state 96
    NEW             shift and go to state 97
    ID              shift and go to state 85
    THIS            shift and go to state 99
    PE              shift and go to state 100

    exp                            shift and go to state 166
    rexp                           shift and go to state 87
    aexp                           shift and go to state 88
    mexp                           shift and go to state 89
    sexp                           shift and go to state 91
    pexp                           shift and go to state 98

state 165

    (67) exps2 -> empty .

    PD              reduce using rule 67 (exps2 -> empty .)


state 166

    (66) exps2 -> VIRGULA exp . exps2
    (35) exp -> exp . ECOMERCIAL rexp
    (66) exps2 -> . VIRGULA exp exps2
    (67) exps2 -> . empty
    (68) empty -> .

    ECOMERCIAL      shift and go to state 110
    VIRGULA         shift and go to state 164
    PD              reduce using rule 68 (empty -> .)

    exps2                          shift and go to state 167
    empty                          shift and go to state 165

state 167

    (66) exps2 -> VIRGULA exp exps2 .

    PD              reduce using rule 66 (exps2 -> VIRGULA exp exps2 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 146 resolved as shift
