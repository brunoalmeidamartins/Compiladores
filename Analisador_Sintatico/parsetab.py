
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT ASSERT BOOLEAN BREAK BYTE CASE CATCH CD CE CHAR CLASS COLCD COLCE COMPARACAO CONST CONTINUE DEFAULT DIFERENTE DIVIDE DO DOUBLE ECOMERCIAL ELSE ENUM EXTENDS FALSE FINAL FINALLY FLOAT FOR GOTO ID IF IGUAL IMPLEMENTS IMPORT INSTANCEOF INT INTERFACE LENGTH LONG MAIN MAIOR MAIORIGUAL MAIS MENOR MENORIGUAL MENOS MULTIPLICA NATIVE NEGACAO NEW NULL NUMERO OUT PACKAGE PD PE PONTO PONTOPONTO PONTOVIRGULA PRINTLN PRIVATE PROTECTED PUBLIC RETURN SHORT STATIC STRICTFP STRING SUPER SWITCH SYNCHRONIZED SYSTEM SYSTEMOUTPRINTLN THIS THROW THROWS TRANSIENT TRUE TRY VIRGULA VOID VOLATILE WHILE\n    prog : main prog2\n    \n    prog2 : class prog2\n          | empty\n    \n    main : CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID PD CE cmd CD CD\n    \n    class : CLASS ID class2 CE class3 class4 CD\n    \n    class2 : EXTENDS ID\n           | empty\n    \n    class3 : var class3\n            | empty\n    \n    class4 : method class4\n            | empty\n    \n    var : type ID PONTOVIRGULA\n    \n    method : PUBLIC type ID PE method2 PD CE method3 method4 RETURN exp PONTOVIRGULA CD\n    \n    method2 : params\n            | empty\n    \n    method3 : var method3\n            | empty\n    \n    method4 : cmd method4\n            | empty\n    \n    params : type ID params2\n    \n    params2 : VIRGULA type ID params2\n            | empty\n    \n    type : INT COLCE COLCD\n         | BOOLEAN\n         | INT\n    \n    cmd : CE cmd2 CD\n        | IF PE exp PD cmd\n        | IF PE exp PD cmd ELSE cmd\n        | WHILE PE exp PD cmd\n        | SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA\n        | ID IGUAL exp PONTOVIRGULA\n        | ID COLCE exp COLCD IGUAL exp PONTOVIRGULA\n    \n    cmd2 : cmd cmd2\n         | empty\n    \n    exp : exp ECOMERCIAL rexp\n        | rexp\n    \n    rexp : rexp MENOR aexp\n         | rexp COMPARACAO aexp\n         | rexp DIFERENTE aexp\n         | aexp\n    \n    aexp : aexp MAIS mexp\n         | aexp MENOS mexp\n         | mexp\n    \n    mexp : mexp MULTIPLICA sexp\n         | mexp DIVIDE sexp\n         | sexp\n    \n    sexp : NEGACAO sexp\n         | MENOS sexp\n         | TRUE\n         | FALSE\n         | NUMERO\n         | NULL\n         | NEW INT COLCE exp COLCD\n         | pexp PONTO LENGTH\n         | pexp COLCE exp COLCD\n         | pexp\n    \n    pexp : ID\n         | THIS\n         | NEW ID PE PD\n         | PE exp PD\n         | pexp PONTO ID\n         | pexp PONTO ID PE pexp2 PD\n    \n    pexp2 : exps\n          | empty\n    \n    exps : exp exps2\n    \n    exps2 : VIRGULA exp exps2\n          | empty\n     empty : '
    
_lr_action_items = {'CLASS':([0,2,5,34,108,],[3,7,7,-5,-4,]),'$end':([1,2,4,5,6,9,34,108,],[0,-68,-1,-68,-3,-2,-5,-4,]),'ID':([3,7,13,22,23,24,36,37,38,44,48,55,57,58,59,60,61,64,66,71,74,75,77,79,81,82,83,90,92,97,100,102,109,110,111,112,113,114,115,116,117,122,123,127,128,138,144,146,147,148,151,154,160,161,164,],[8,10,17,31,-25,-24,40,-12,-23,49,51,-68,62,63,-68,-17,63,63,63,-16,85,85,63,85,85,85,85,85,85,121,85,-26,-31,85,85,85,85,85,85,85,85,141,85,63,63,85,85,-27,-29,-30,85,63,-32,-28,85,]),'CE':([8,10,12,14,17,37,50,55,56,58,59,60,61,64,66,71,77,102,109,127,128,146,147,148,154,160,161,],[11,-68,16,-7,-6,-12,55,-68,61,64,-68,-17,64,64,64,-16,64,-26,-31,64,64,-27,-29,-30,64,-32,-28,]),'EXTENDS':([10,],[13,]),'PUBLIC':([11,16,19,20,21,27,30,37,145,],[15,-68,29,-68,-9,29,-8,-12,-13,]),'STATIC':([15,],[18,]),'CD':([16,19,20,21,26,27,28,30,35,37,64,72,76,77,78,84,102,103,109,126,145,146,147,148,160,161,],[-68,-68,-68,-9,34,-68,-11,-8,-10,-12,-68,84,102,-68,-34,108,-26,-33,-31,145,-13,-27,-29,-30,-32,-28,]),'INT':([16,20,29,37,42,53,55,59,97,],[23,23,23,-12,23,23,23,23,120,]),'BOOLEAN':([16,20,29,37,42,53,55,59,],[24,24,24,-12,24,24,24,24,]),'VOID':([18,],[25,]),'COLCE':([23,41,63,85,98,99,120,141,143,150,162,],[32,43,75,-57,123,-58,138,-61,-60,-59,-62,]),'MAIN':([25,],[33,]),'PONTOVIRGULA':([31,85,86,87,88,89,91,93,94,95,96,98,99,104,118,119,129,130,131,132,133,134,135,136,137,140,141,143,150,152,153,155,162,],[37,-57,109,-36,-40,-43,-46,-49,-50,-51,-52,-56,-58,126,-48,-47,148,-35,-37,-38,-39,-41,-42,-44,-45,-54,-61,-60,-59,-55,160,-53,-62,]),'COLCD':([32,43,85,87,88,89,91,93,94,95,96,98,99,101,118,119,130,131,132,133,134,135,136,137,140,141,142,143,149,150,152,155,162,],[38,48,-57,-36,-40,-43,-46,-49,-50,-51,-52,-56,-58,125,-48,-47,-35,-37,-38,-39,-41,-42,-44,-45,-54,-61,152,-60,155,-59,-55,-53,-62,]),'PE':([33,40,68,69,70,74,75,79,81,82,83,90,92,100,110,111,112,113,114,115,116,117,121,123,138,141,144,151,164,],[39,42,81,82,83,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,139,100,100,151,100,100,100,]),'IF':([37,55,58,59,60,61,64,66,71,77,102,109,127,128,146,147,148,154,160,161,],[-12,-68,68,-68,-17,68,68,68,-16,68,-26,-31,68,68,-27,-29,-30,68,-32,-28,]),'WHILE':([37,55,58,59,60,61,64,66,71,77,102,109,127,128,146,147,148,154,160,161,],[-12,-68,69,-68,-17,69,69,69,-16,69,-26,-31,69,69,-27,-29,-30,69,-32,-28,]),'SYSTEMOUTPRINTLN':([37,55,58,59,60,61,64,66,71,77,102,109,127,128,146,147,148,154,160,161,],[-12,-68,70,-68,-17,70,70,70,-16,70,-26,-31,70,70,-27,-29,-30,70,-32,-28,]),'RETURN':([37,55,58,59,60,65,66,67,71,80,102,109,146,147,148,160,161,],[-12,-68,-68,-68,-17,79,-68,-19,-16,-18,-26,-31,-27,-29,-30,-32,-28,]),'STRING':([39,],[41,]),'PD':([42,45,46,47,49,51,52,54,62,73,85,87,88,89,91,93,94,95,96,98,99,105,106,107,118,119,124,130,131,132,133,134,135,136,137,139,140,141,143,150,151,152,155,156,157,158,159,162,163,165,166,167,],[-68,50,-14,-15,-68,56,-20,-22,-68,-21,-57,-36,-40,-43,-46,-49,-50,-51,-52,-56,-58,127,128,129,-48,-47,143,-35,-37,-38,-39,-41,-42,-44,-45,150,-54,-61,-60,-59,-68,-55,-53,162,-63,-64,-68,-62,-65,-67,-68,-66,]),'VIRGULA':([49,62,85,87,88,89,91,93,94,95,96,98,99,118,119,130,131,132,133,134,135,136,137,140,141,143,150,152,155,159,162,166,],[53,53,-57,-36,-40,-43,-46,-49,-50,-51,-52,-56,-58,-48,-47,-35,-37,-38,-39,-41,-42,-44,-45,-54,-61,-60,-59,-55,-53,164,-62,164,]),'IGUAL':([63,125,],[74,144,]),'NEGACAO':([74,75,79,81,82,83,90,92,100,110,111,112,113,114,115,116,117,123,138,144,151,164,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'MENOS':([74,75,79,81,82,83,85,88,89,90,91,92,93,94,95,96,98,99,100,110,111,112,113,114,115,116,117,118,119,123,131,132,133,134,135,136,137,138,140,141,143,144,150,151,152,155,162,164,],[90,90,90,90,90,90,-57,115,-43,90,-46,90,-49,-50,-51,-52,-56,-58,90,90,90,90,90,90,90,90,90,-48,-47,90,115,115,115,-41,-42,-44,-45,90,-54,-61,-60,90,-59,90,-55,-53,-62,90,]),'TRUE':([74,75,79,81,82,83,90,92,100,110,111,112,113,114,115,116,117,123,138,144,151,164,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'FALSE':([74,75,79,81,82,83,90,92,100,110,111,112,113,114,115,116,117,123,138,144,151,164,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'NUMERO':([74,75,79,81,82,83,90,92,100,110,111,112,113,114,115,116,117,123,138,144,151,164,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'NULL':([74,75,79,81,82,83,90,92,100,110,111,112,113,114,115,116,117,123,138,144,151,164,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'NEW':([74,75,79,81,82,83,90,92,100,110,111,112,113,114,115,116,117,123,138,144,151,164,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'THIS':([74,75,79,81,82,83,90,92,100,110,111,112,113,114,115,116,117,123,138,144,151,164,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'PONTO':([85,98,99,141,143,150,162,],[-57,122,-58,-61,-60,-59,-62,]),'MULTIPLICA':([85,89,91,93,94,95,96,98,99,118,119,134,135,136,137,140,141,143,150,152,155,162,],[-57,116,-46,-49,-50,-51,-52,-56,-58,-48,-47,116,116,-44,-45,-54,-61,-60,-59,-55,-53,-62,]),'DIVIDE':([85,89,91,93,94,95,96,98,99,118,119,134,135,136,137,140,141,143,150,152,155,162,],[-57,117,-46,-49,-50,-51,-52,-56,-58,-48,-47,117,117,-44,-45,-54,-61,-60,-59,-55,-53,-62,]),'MAIS':([85,88,89,91,93,94,95,96,98,99,118,119,131,132,133,134,135,136,137,140,141,143,150,152,155,162,],[-57,114,-43,-46,-49,-50,-51,-52,-56,-58,-48,-47,114,114,114,-41,-42,-44,-45,-54,-61,-60,-59,-55,-53,-62,]),'MENOR':([85,87,88,89,91,93,94,95,96,98,99,118,119,130,131,132,133,134,135,136,137,140,141,143,150,152,155,162,],[-57,111,-40,-43,-46,-49,-50,-51,-52,-56,-58,-48,-47,111,-37,-38,-39,-41,-42,-44,-45,-54,-61,-60,-59,-55,-53,-62,]),'COMPARACAO':([85,87,88,89,91,93,94,95,96,98,99,118,119,130,131,132,133,134,135,136,137,140,141,143,150,152,155,162,],[-57,112,-40,-43,-46,-49,-50,-51,-52,-56,-58,-48,-47,112,-37,-38,-39,-41,-42,-44,-45,-54,-61,-60,-59,-55,-53,-62,]),'DIFERENTE':([85,87,88,89,91,93,94,95,96,98,99,118,119,130,131,132,133,134,135,136,137,140,141,143,150,152,155,162,],[-57,113,-40,-43,-46,-49,-50,-51,-52,-56,-58,-48,-47,113,-37,-38,-39,-41,-42,-44,-45,-54,-61,-60,-59,-55,-53,-62,]),'ECOMERCIAL':([85,86,87,88,89,91,93,94,95,96,98,99,101,104,105,106,107,118,119,124,130,131,132,133,134,135,136,137,140,141,142,143,149,150,152,153,155,159,162,166,],[-57,110,-36,-40,-43,-46,-49,-50,-51,-52,-56,-58,110,110,110,110,110,-48,-47,110,-35,-37,-38,-39,-41,-42,-44,-45,-54,-61,110,-60,110,-59,-55,110,-53,110,-62,110,]),'ELSE':([102,109,146,147,148,160,161,],[-26,-31,154,-29,-30,-32,-28,]),'LENGTH':([122,],[140,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prog':([0,],[1,]),'main':([0,],[2,]),'prog2':([2,5,],[4,9,]),'class':([2,5,],[5,5,]),'empty':([2,5,10,16,19,20,27,42,49,55,58,59,62,64,66,77,151,159,166,],[6,6,14,21,28,21,28,47,54,60,67,60,54,78,67,78,158,165,165,]),'class2':([10,],[12,]),'class3':([16,20,],[19,30,]),'var':([16,20,55,59,],[20,20,59,59,]),'type':([16,20,29,42,53,55,59,],[22,22,36,44,57,22,22,]),'class4':([19,27,],[26,35,]),'method':([19,27,],[27,27,]),'method2':([42,],[45,]),'params':([42,],[46,]),'params2':([49,62,],[52,73,]),'method3':([55,59,],[58,71,]),'method4':([58,66,],[65,80,]),'cmd':([58,61,64,66,77,127,128,154,],[66,72,77,66,77,146,147,161,]),'cmd2':([64,77,],[76,103,]),'exp':([74,75,79,81,82,83,100,123,138,144,151,164,],[86,101,104,105,106,107,124,142,149,153,159,166,]),'rexp':([74,75,79,81,82,83,100,110,123,138,144,151,164,],[87,87,87,87,87,87,87,130,87,87,87,87,87,]),'aexp':([74,75,79,81,82,83,100,110,111,112,113,123,138,144,151,164,],[88,88,88,88,88,88,88,88,131,132,133,88,88,88,88,88,]),'mexp':([74,75,79,81,82,83,100,110,111,112,113,114,115,123,138,144,151,164,],[89,89,89,89,89,89,89,89,89,89,89,134,135,89,89,89,89,89,]),'sexp':([74,75,79,81,82,83,90,92,100,110,111,112,113,114,115,116,117,123,138,144,151,164,],[91,91,91,91,91,91,118,119,91,91,91,91,91,91,91,136,137,91,91,91,91,91,]),'pexp':([74,75,79,81,82,83,90,92,100,110,111,112,113,114,115,116,117,123,138,144,151,164,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'pexp2':([151,],[156,]),'exps':([151,],[157,]),'exps2':([159,166,],[163,167,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> main prog2','prog',2,'p_prog','analisador_sintatico.py',10),
  ('prog2 -> class prog2','prog2',2,'p_prog2','analisador_sintatico.py',16),
  ('prog2 -> empty','prog2',1,'p_prog2','analisador_sintatico.py',17),
  ('main -> CLASS ID CE PUBLIC STATIC VOID MAIN PE STRING COLCE COLCD ID PD CE cmd CD CD','main',17,'p_main','analisador_sintatico.py',23),
  ('class -> CLASS ID class2 CE class3 class4 CD','class',7,'p_class','analisador_sintatico.py',29),
  ('class2 -> EXTENDS ID','class2',2,'p_class2','analisador_sintatico.py',35),
  ('class2 -> empty','class2',1,'p_class2','analisador_sintatico.py',36),
  ('class3 -> var class3','class3',2,'p_class3','analisador_sintatico.py',42),
  ('class3 -> empty','class3',1,'p_class3','analisador_sintatico.py',43),
  ('class4 -> method class4','class4',2,'p_class4','analisador_sintatico.py',48),
  ('class4 -> empty','class4',1,'p_class4','analisador_sintatico.py',49),
  ('var -> type ID PONTOVIRGULA','var',3,'p_var','analisador_sintatico.py',55),
  ('method -> PUBLIC type ID PE method2 PD CE method3 method4 RETURN exp PONTOVIRGULA CD','method',13,'p_method','analisador_sintatico.py',61),
  ('method2 -> params','method2',1,'p_method2','analisador_sintatico.py',67),
  ('method2 -> empty','method2',1,'p_method2','analisador_sintatico.py',68),
  ('method3 -> var method3','method3',2,'p_method3','analisador_sintatico.py',74),
  ('method3 -> empty','method3',1,'p_method3','analisador_sintatico.py',75),
  ('method4 -> cmd method4','method4',2,'p_method4','analisador_sintatico.py',81),
  ('method4 -> empty','method4',1,'p_method4','analisador_sintatico.py',82),
  ('params -> type ID params2','params',3,'p_params','analisador_sintatico.py',88),
  ('params2 -> VIRGULA type ID params2','params2',4,'p_params2','analisador_sintatico.py',94),
  ('params2 -> empty','params2',1,'p_params2','analisador_sintatico.py',95),
  ('type -> INT COLCE COLCD','type',3,'p_type','analisador_sintatico.py',102),
  ('type -> BOOLEAN','type',1,'p_type','analisador_sintatico.py',103),
  ('type -> INT','type',1,'p_type','analisador_sintatico.py',104),
  ('cmd -> CE cmd2 CD','cmd',3,'p_cmd','analisador_sintatico.py',110),
  ('cmd -> IF PE exp PD cmd','cmd',5,'p_cmd','analisador_sintatico.py',111),
  ('cmd -> IF PE exp PD cmd ELSE cmd','cmd',7,'p_cmd','analisador_sintatico.py',112),
  ('cmd -> WHILE PE exp PD cmd','cmd',5,'p_cmd','analisador_sintatico.py',113),
  ('cmd -> SYSTEMOUTPRINTLN PE exp PD PONTOVIRGULA','cmd',5,'p_cmd','analisador_sintatico.py',114),
  ('cmd -> ID IGUAL exp PONTOVIRGULA','cmd',4,'p_cmd','analisador_sintatico.py',115),
  ('cmd -> ID COLCE exp COLCD IGUAL exp PONTOVIRGULA','cmd',7,'p_cmd','analisador_sintatico.py',116),
  ('cmd2 -> cmd cmd2','cmd2',2,'p_cmd2','analisador_sintatico.py',122),
  ('cmd2 -> empty','cmd2',1,'p_cmd2','analisador_sintatico.py',123),
  ('exp -> exp ECOMERCIAL rexp','exp',3,'p_exp','analisador_sintatico.py',130),
  ('exp -> rexp','exp',1,'p_exp','analisador_sintatico.py',131),
  ('rexp -> rexp MENOR aexp','rexp',3,'p_rexp','analisador_sintatico.py',137),
  ('rexp -> rexp COMPARACAO aexp','rexp',3,'p_rexp','analisador_sintatico.py',138),
  ('rexp -> rexp DIFERENTE aexp','rexp',3,'p_rexp','analisador_sintatico.py',139),
  ('rexp -> aexp','rexp',1,'p_rexp','analisador_sintatico.py',140),
  ('aexp -> aexp MAIS mexp','aexp',3,'p_aexp','analisador_sintatico.py',146),
  ('aexp -> aexp MENOS mexp','aexp',3,'p_aexp','analisador_sintatico.py',147),
  ('aexp -> mexp','aexp',1,'p_aexp','analisador_sintatico.py',148),
  ('mexp -> mexp MULTIPLICA sexp','mexp',3,'p_mexp','analisador_sintatico.py',154),
  ('mexp -> mexp DIVIDE sexp','mexp',3,'p_mexp','analisador_sintatico.py',155),
  ('mexp -> sexp','mexp',1,'p_mexp','analisador_sintatico.py',156),
  ('sexp -> NEGACAO sexp','sexp',2,'p_sexp','analisador_sintatico.py',162),
  ('sexp -> MENOS sexp','sexp',2,'p_sexp','analisador_sintatico.py',163),
  ('sexp -> TRUE','sexp',1,'p_sexp','analisador_sintatico.py',164),
  ('sexp -> FALSE','sexp',1,'p_sexp','analisador_sintatico.py',165),
  ('sexp -> NUMERO','sexp',1,'p_sexp','analisador_sintatico.py',166),
  ('sexp -> NULL','sexp',1,'p_sexp','analisador_sintatico.py',167),
  ('sexp -> NEW INT COLCE exp COLCD','sexp',5,'p_sexp','analisador_sintatico.py',168),
  ('sexp -> pexp PONTO LENGTH','sexp',3,'p_sexp','analisador_sintatico.py',169),
  ('sexp -> pexp COLCE exp COLCD','sexp',4,'p_sexp','analisador_sintatico.py',170),
  ('sexp -> pexp','sexp',1,'p_sexp','analisador_sintatico.py',171),
  ('pexp -> ID','pexp',1,'p_pexp','analisador_sintatico.py',177),
  ('pexp -> THIS','pexp',1,'p_pexp','analisador_sintatico.py',178),
  ('pexp -> NEW ID PE PD','pexp',4,'p_pexp','analisador_sintatico.py',179),
  ('pexp -> PE exp PD','pexp',3,'p_pexp','analisador_sintatico.py',180),
  ('pexp -> pexp PONTO ID','pexp',3,'p_pexp','analisador_sintatico.py',181),
  ('pexp -> pexp PONTO ID PE pexp2 PD','pexp',6,'p_pexp','analisador_sintatico.py',182),
  ('pexp2 -> exps','pexp2',1,'p_pexp2','analisador_sintatico.py',187),
  ('pexp2 -> empty','pexp2',1,'p_pexp2','analisador_sintatico.py',188),
  ('exps -> exp exps2','exps',2,'p_exps','analisador_sintatico.py',194),
  ('exps2 -> VIRGULA exp exps2','exps2',3,'p_exps2','analisador_sintatico.py',199),
  ('exps2 -> empty','exps2',1,'p_exps2','analisador_sintatico.py',200),
  ('empty -> <empty>','empty',0,'p_empty','analisador_sintatico.py',212),
]
